// Code generated by go-bindata.
// sources:
// ../../../../assets/config/create_paths.json
// ../../../../assets/config/defaults.yml
// ../../../../assets/config/paths.yml
// ../../../../assets/config/update_paths.json
// ../../../../assets/templates/cmake/CMakeListsApp.txt.tpl
// ../../../../assets/templates/cmake/CMakeListsPkg.txt.tpl
// ../../../../assets/templates/cmake/dependencies.txt
// ../../../../assets/templates/config/app-helper.txt
// ../../../../assets/templates/config/dependencies-helper.txt
// ../../../../assets/templates/config/pkg-helper.txt
// ../../../../assets/templates/config/project-app.yml
// ../../../../assets/templates/config/project-pkg.yml
// ../../../../assets/templates/config/targets-helper.txt
// ../../../../assets/templates/gitignore/.gitignore-clion
// ../../../../assets/templates/gitignore/.gitignore-general
// ../../../../assets/templates/ide/clion/app/CMakeLists.txt.tpl
// ../../../../assets/templates/ide/clion/app/CMakeListsPrivate.txt.tpl
// ../../../../assets/templates/ide/clion/lib/CMakeLists.txt.tpl
// ../../../../assets/templates/ide/clion/lib/CMakeListsPrivate.txt.tpl
// ../../../../assets/templates/sample-program/app/main.cpp
// ../../../../assets/templates/sample-program/lib/lib.cpp
// ../../../../assets/templates/sample-program/lib/lib.h
// ../../../../assets/templates/sample-program/lib/main.cpp
// DO NOT EDIT!

package io

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data, name string) ([]byte, error) {
	gz, err := gzip.NewReader(strings.NewReader(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _assetsConfigCreate_pathsJson = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xcc\x94\x41\x6b\xfa\x40\x10\xc5\xef\x82\xdf\x61\xd9\xb3\xd9\xbd\x7b\xfd\xdf\xfe\xb4\x28\xd2\x5b\xe9\x61\xdd\x8c\x71\xda\x4d\x76\xd8\x1d\x6d\x4b\xc8\x77\x2f\xab\xa0\x56\x85\xc4\x5a\x92\x1e\xc2\x26\x99\xf7\xd8\x1f\x33\xcc\xab\xc7\x23\x21\x24\x19\x5e\x47\x39\x15\xcf\xe9\x4b\x88\x7a\x7f\x08\x21\x31\x97\x53\x21\x0d\x51\x56\x40\x25\x27\x87\xff\x31\xd8\x54\x60\x28\xc9\x19\x86\xa8\xad\xaf\x56\x58\x68\x0a\xfe\x15\x2c\x67\x86\x48\x7d\x96\xee\xc4\x91\x43\xba\x40\xd6\xf5\x7c\xf1\x3f\x5b\xcc\x66\x4f\x4d\xa3\xdf\xd1\x9f\xa9\xfc\x16\x42\xc0\x1c\xe4\x54\xac\x8c\x8b\xb0\x2f\x34\x93\x1f\x73\x45\x53\x92\x83\x8c\x82\x2f\x82\x29\xb5\x21\xd2\xa5\xc1\x4a\x59\xa2\x16\xb8\x18\xec\x35\xe9\xaf\x13\x16\xc8\x58\x54\x3e\x80\x56\x87\xd7\xe4\x81\x60\xda\xfa\x77\x34\xdc\x05\x68\x1d\xfa\xdb\x11\xcf\x5d\x43\x02\x62\x0e\x7a\x27\xda\x0d\xf8\xdf\xa3\x79\x83\x07\x8c\x1c\x15\x7f\xb0\x62\x6a\xeb\xe3\x77\xc3\x30\xa8\xf3\x80\x5b\xc3\x70\x33\xf1\x89\xef\x3a\x38\x87\x4d\x0b\xb7\xc3\xe5\x8d\xeb\xed\x70\xd9\xc3\x7a\x77\xe0\x3a\x5b\x6f\x87\xcb\xf4\xa8\x75\x0b\x19\x56\xd6\x6d\x72\xb8\xd0\xf6\xc5\xd7\x2d\x7d\x2e\x95\x7d\xf0\x75\x8c\x47\x86\xc8\xf7\xe7\x63\x07\xc4\x61\xf3\x31\x01\xfe\xe9\x7c\xec\x04\x78\x0c\x9d\x34\xe1\xa1\xf2\xf1\x2e\xd4\x3e\xf2\x31\x1d\x2f\xe3\x51\x33\x1e\x7d\x05\x00\x00\xff\xff\x0f\xfb\x19\x02\x17\x09\x00\x00"

func assetsConfigCreate_pathsJsonBytes() ([]byte, error) {
	return bindataRead(
		_assetsConfigCreate_pathsJson,
		"assets/config/create_paths.json",
	)
}

func assetsConfigCreate_pathsJson() (*asset, error) {
	bytes, err := assetsConfigCreate_pathsJsonBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/config/create_paths.json", size: 2327, mode: os.FileMode(438), modTime: time.Unix(1526246066, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsConfigDefaultsYml = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x6c\xcf\x41\x4e\x04\x21\x10\x05\xd0\x3d\x09\x77\xf8\xa1\xf7\x93\x71\xdb\xa7\x70\xe1\x05\x6a\xa0\x7a\x9a\x08\x55\x9d\x02\xda\x78\x7b\x83\x8e\x19\x17\xb2\xfb\xe1\xfd\x9f\xd4\x82\xb7\x3d\x37\x44\x95\x4e\x59\x1a\xa8\x14\xf4\x9d\x91\x78\xa3\x51\x3a\x4e\x2a\x83\x1b\x36\x35\x44\xad\x95\x24\x95\x2c\x0c\xb2\xfb\xa8\x2c\xbd\x79\xb7\xe0\x95\xfa\xfe\x0b\xc9\x18\xa2\x1d\x59\x62\x19\x89\x13\x6e\x1c\x69\x34\x9e\xa3\x9f\xdf\xbf\x95\xe2\x3e\x27\xda\xc1\x31\x6f\x39\x7a\xe7\x5d\x4e\xbc\x22\x88\x0a\x07\xef\x36\xa3\xca\x1f\x6a\xef\x2b\x42\xd4\x46\xc1\xbb\xa3\x50\xdf\xd4\xea\x8a\x40\xa7\x4d\x93\xcb\x9f\xc6\xa1\xd6\x9f\xe9\x64\x6b\x59\x65\x45\xb8\x5e\xae\x97\x97\xe0\xdd\x4d\xc9\xd2\x8a\x30\x44\x67\xea\x64\x77\x9e\x85\xc7\x91\x01\x8f\xb7\xe0\x36\x72\x49\xf8\x01\xde\x8d\x7f\xe5\x82\x71\x14\xa5\x27\xfb\x0a\x00\x00\xff\xff\x91\xdf\xb2\x5d\x44\x01\x00\x00"

func assetsConfigDefaultsYmlBytes() ([]byte, error) {
	return bindataRead(
		_assetsConfigDefaultsYml,
		"assets/config/defaults.yml",
	)
}

func assetsConfigDefaultsYml() (*asset, error) {
	bytes, err := assetsConfigDefaultsYmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/config/defaults.yml", size: 324, mode: os.FileMode(438), modTime: time.Unix(1526248727, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsConfigPathsYml = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x4a\x2c\x4a\x29\xcd\xcc\xcb\xd7\x2d\x4e\xc9\xd6\x2d\x48\x2c\xc9\xb0\x52\x50\x52\xe2\xe5\x4a\xce\x2f\x4e\x44\x13\x4a\x2c\x2b\x42\xe6\x15\xe5\x22\xf1\x72\x13\xb3\x53\x91\x75\xa3\xf1\x01\x01\x00\x00\xff\xff\x30\x8e\xc4\x3e\x64\x00\x00\x00"

func assetsConfigPathsYmlBytes() ([]byte, error) {
	return bindataRead(
		_assetsConfigPathsYml,
		"assets/config/paths.yml",
	)
}

func assetsConfigPathsYml() (*asset, error) {
	bytes, err := assetsConfigPathsYmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/config/paths.yml", size: 100, mode: os.FileMode(438), modTime: time.Unix(1526246066, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsConfigUpdate_pathsJson = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xcc\x93\xb1\x6a\xc3\x30\x10\x86\x77\x83\xdf\x41\x68\x8e\xad\xdd\x6b\xb7\xd2\x92\x10\xba\x95\x0e\x67\xfb\xe2\x5e\xab\x58\x87\x74\x4d\x5b\x8c\xdf\xbd\xa8\x81\x24\x0d\x05\xc7\x0d\xd8\x9d\x4e\xd2\xdd\x8f\x3e\x84\xbe\x2e\x4d\x94\xd2\x0c\xf2\x1c\x74\xa1\x1e\xe3\x4e\xa9\x6e\x5f\x94\xd2\x54\xeb\x42\x69\x60\xce\x1a\x6c\xf5\xe2\x70\x1e\x7c\x15\x1b\x82\x5b\xb6\x20\x18\x4c\xe5\xda\x0d\x35\x86\xbd\x7b\xc1\x4a\x32\x60\xce\x3f\xb7\xf6\x24\x51\x63\xbc\x40\x77\xdd\x6a\x7d\x9b\xad\x97\xcb\x87\xbe\x37\xef\xe4\xce\xa6\xdc\x0e\xbd\xa7\x1a\x75\xa1\x36\x60\x03\xee\x1b\xfd\xe2\xcf\x5c\x0d\x09\x35\xad\xf3\x68\xf2\xc3\x32\x66\xd0\xc3\x10\xdd\x31\x70\x15\x60\x65\xc9\x8d\x47\x3c\x4f\xcd\x09\x48\x35\x9a\xef\x21\x03\xcc\xe6\xe6\x1e\x5e\xf1\x8e\x82\x84\x5c\x3e\x24\x17\x1e\x7a\xc7\x9f\x81\x79\x50\x57\x9e\x76\x20\x38\x9a\xf8\x24\xf7\x3b\xb8\xf8\xb7\x01\x6e\x4b\xe5\x48\x79\x2c\x95\x13\xc8\x73\x01\xd7\xbc\xf2\x44\xc0\x7f\x2d\xcf\x45\x80\xc7\x1f\x69\xa9\x9c\x4d\x9e\xab\x50\xa7\x90\x27\x96\xa7\x34\xe9\xd3\xe4\x2b\x00\x00\xff\xff\xad\x28\x65\xa4\x92\x06\x00\x00"

func assetsConfigUpdate_pathsJsonBytes() ([]byte, error) {
	return bindataRead(
		_assetsConfigUpdate_pathsJson,
		"assets/config/update_paths.json",
	)
}

func assetsConfigUpdate_pathsJson() (*asset, error) {
	bytes, err := assetsConfigUpdate_pathsJsonBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/config/update_paths.json", size: 1682, mode: os.FileMode(438), modTime: time.Unix(1526246066, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsTemplatesCmakeCmakelistsappTxtTpl = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x74\x51\x4d\x6f\x9b\x40\x10\xbd\x23\xf1\x1f\x46\x2e\x07\xdc\x83\x63\x35\xbf\x60\xb3\x8c\x1d\x1a\x60\xd1\x82\xdd\xf4\xb4\xb2\x60\x1c\x6d\x6b\x3e\xba\x60\x55\x15\xe2\xbf\x57\x18\x42\x6c\x4b\x39\xed\xce\x9b\x37\x5f\xef\x35\xd4\xba\x3c\x64\x2f\xa8\xf6\x28\xe1\x71\xb5\x5e\xad\x97\xb6\x35\xa0\xb1\x14\xdf\x91\xa7\x2a\x62\x21\x42\xd7\x5d\x87\x7d\x7f\xc7\x89\x59\xfa\x0c\x8b\x0f\xd2\x10\xf7\xfd\x62\x62\x8d\xfd\x53\x21\x02\xfe\xcc\xfc\x48\x6d\xfc\x00\x07\xf6\x2d\x32\xf3\x61\x2a\x08\x85\xb7\x0b\x70\xea\xed\x74\x23\xc8\x77\x52\x62\x94\xaa\x44\xec\x24\x47\xe5\xf9\x72\x1e\xe3\x61\x8c\x91\x87\x11\xff\x39\x4e\xc8\xa9\xa6\x32\xa7\x32\xd3\xd4\x2c\x6d\xcb\xb6\xbe\x40\x6d\xaa\x9a\x4c\xab\xa9\x19\x4b\x52\x26\xb7\x38\x9f\x78\x15\xcd\x17\x3e\x09\x26\x3d\xe8\xba\xcb\x3b\xa3\x1b\xc9\x42\xfc\x21\xe4\x0b\x74\xdd\xfc\xbf\x64\x6d\x2b\x2b\x0e\xbf\x49\x15\xba\xd4\xc5\xb9\x50\x86\xfe\x9c\xb5\xa1\xdc\xdd\xa3\x4c\x7c\x11\xc1\xfb\x21\x53\x3c\xd4\xd4\xa6\xfa\x45\x59\xeb\x3a\xb7\x22\x03\x07\xfe\xfa\x0a\x2c\x09\x97\xef\x5d\xeb\xea\xa4\xb3\x7f\x6e\x82\x29\xf0\x30\x5e\xaf\xbf\x3d\x82\x08\xbc\xcb\x58\x5d\x66\xa7\x73\x4e\xae\xd3\xdd\xe9\x30\x6e\x75\xd4\x27\x72\xb7\x81\x78\x52\x12\xf9\x4e\x26\x08\x89\xe4\x97\x7c\x32\x88\x7b\x63\xdc\x43\x63\xb2\x87\xaf\xab\xac\xae\x17\x9f\xe6\xb2\xcf\x53\x83\x1f\x6f\x54\x92\x39\xb4\xa4\x0e\x26\x3f\xeb\xb2\x52\x47\x6d\x8a\xbf\x07\x33\xec\x77\x2d\xb3\x6d\x01\xc0\xb0\x4a\x02\x4e\x37\x6f\x34\xc1\xa3\xf6\xce\xa4\xfd\xd2\xb6\xda\x83\x79\xa3\x56\x65\x55\x51\xeb\x13\xa9\x9c\x8e\xba\xd4\xad\xae\xca\xe6\xae\x2d\xc4\xd2\xdf\xb3\x14\x41\x29\xb6\x97\xca\xb9\x32\x49\xa9\x0f\xa7\xb9\x08\x63\x3f\x40\xb5\x09\xd8\x36\xe9\xfb\xe5\xff\x00\x00\x00\xff\xff\xfd\xa6\x23\x52\x0d\x03\x00\x00"

func assetsTemplatesCmakeCmakelistsappTxtTplBytes() ([]byte, error) {
	return bindataRead(
		_assetsTemplatesCmakeCmakelistsappTxtTpl,
		"assets/templates/cmake/CMakeListsApp.txt.tpl",
	)
}

func assetsTemplatesCmakeCmakelistsappTxtTpl() (*asset, error) {
	bytes, err := assetsTemplatesCmakeCmakelistsappTxtTplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/templates/cmake/CMakeListsApp.txt.tpl", size: 781, mode: os.FileMode(438), modTime: time.Unix(1526248727, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsTemplatesCmakeCmakelistspkgTxtTpl = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x9c\x92\x4f\x8f\x9b\x3c\x10\xc6\xcf\x2f\x12\xdf\xc1\xca\xcb\x81\xf4\x90\x8d\xba\x9f\xc0\x31\x4e\x96\x06\x30\x32\x24\xdd\x9e\x2c\x0a\x93\x95\xdb\xf0\xa7\x86\xa8\x5a\x59\x7c\xf7\x8a\x40\xd8\x24\xbb\xa8\x52\x4f\x30\xf3\x3c\xf6\xcc\xfc\xc6\x35\x34\x36\xf1\xf1\x96\x8a\x3d\xe5\xe8\x71\xb1\x5c\x2c\xe7\xa6\xd1\x65\x43\xce\xbe\x50\x12\x8b\x00\xfb\x14\x69\x7d\x1d\xb6\xed\x9d\x27\xc4\xf1\x13\x9a\xbd\x99\xba\xb8\x6d\x67\x83\xab\xbf\x3f\x66\xcc\x23\x4f\xd8\x0d\xc4\xda\xf5\x68\xe7\x7e\xcb\xdc\xf8\xd1\x70\xc0\x67\xce\xce\xa3\xc3\xdd\x96\xee\x93\x64\xc7\x39\x0d\x62\x11\xb1\x1d\x27\x54\x38\x2e\x1f\xcb\x38\x34\xa4\x81\x43\x03\xf2\xad\xaf\x90\x41\x05\x45\x06\x45\x2a\xa1\x9e\x9b\x86\x69\xfc\x8f\x2a\x55\x56\xa0\x1a\x09\x75\x7f\x24\xc6\x7c\x43\xc7\x11\xaf\xa2\xb6\xed\x0d\x2b\x86\xb9\x83\xb4\x3e\x7f\xc7\xb1\xd7\x1c\xfb\xf4\x2b\xe3\x5b\xa4\xf5\xf8\x7f\x56\x4d\x23\xcd\x93\x9f\x20\x72\x59\xc8\xfc\x94\x0b\x05\xbf\x4e\x52\x41\x66\xef\x29\x8f\x5c\x16\xa0\xcb\x1c\x43\xdc\x9d\xa9\x54\xf9\x03\xd2\xc6\xb6\x6e\x19\x23\x82\xc8\xf3\x33\xc2\x91\x3f\xbf\xdc\x5a\x95\x47\x99\xbe\xda\x11\x8d\x11\xf1\xc3\xe5\xf2\xf3\x23\x62\x9e\x73\x2e\x2b\x8b\xf4\x78\xca\xc0\xb6\xf4\x1d\x86\xbe\xab\x83\x3c\x82\xbd\xf1\xd8\x4a\x70\x4a\x76\x3c\xa2\xc8\x73\x57\x67\x3d\xea\xd8\xde\xec\xed\xa1\x56\xe9\xc3\xa7\x45\x5a\x55\xb3\x49\x2d\x9d\x96\xba\x75\xbc\x40\x01\x2a\x69\x40\x24\x2a\x3b\xc9\xa2\x14\x47\xf9\x5d\x25\xea\xd5\xd6\x77\x43\xb6\xa6\xf1\x5f\xc4\x49\x84\x2c\x3d\x36\xd4\x9a\x06\x42\x08\xf5\xe8\xad\x01\xfd\xdc\x34\x9a\x44\xbd\x40\x23\xd2\x32\xaf\xe4\x11\x44\x06\x07\x59\xc8\x46\x96\x45\xfd\x0e\x5d\xc8\xdd\x3d\x8e\x29\x12\x02\xef\xb9\xb0\xae\x96\x24\x44\xf7\x96\xb7\x1b\x41\x98\x1f\xba\x1e\x15\x6b\x0f\x6f\xa2\x76\x8a\x52\xc4\xc9\x14\xa5\x06\xea\x66\x12\xd3\x45\xfc\x88\xd3\x45\xfb\x10\xd4\x41\xaa\xfc\x77\xa2\xba\x45\x5e\x3f\xc7\x1e\xc9\x40\x6a\x6c\x6a\x48\x7b\xee\xaa\x4b\xdf\x20\xf8\x17\x86\xd7\x05\xff\x86\x70\xf0\xbe\xa7\xf8\x27\x00\x00\xff\xff\x66\xc0\xbe\x38\x51\x04\x00\x00"

func assetsTemplatesCmakeCmakelistspkgTxtTplBytes() ([]byte, error) {
	return bindataRead(
		_assetsTemplatesCmakeCmakelistspkgTxtTpl,
		"assets/templates/cmake/CMakeListsPkg.txt.tpl",
	)
}

func assetsTemplatesCmakeCmakelistspkgTxtTpl() (*asset, error) {
	bytes, err := assetsTemplatesCmakeCmakelistspkgTxtTplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/templates/cmake/CMakeListsPkg.txt.tpl", size: 1105, mode: os.FileMode(438), modTime: time.Unix(1526248727, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsTemplatesCmakeDependenciesTxt = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x9c\x90\xcd\x6a\xc3\x30\x10\x84\xcf\x0d\xf8\x1d\x84\xf1\x21\xee\xa1\x79\x06\x59\x96\x53\x53\xff\x21\x25\x29\x3d\x2d\xae\xbc\x09\x0b\xae\x6d\x14\xe7\x50\x84\xde\xbd\xb4\x84\xd2\x40\x92\x43\x4f\x0b\x3b\xcc\x37\xbb\xb3\xa7\x1e\x97\xeb\xa2\x4e\x40\x49\xb1\x55\x5a\x32\xad\x04\x64\x79\x21\x35\x0b\x9d\x4b\x65\x23\xab\x54\x56\xe2\x0d\x1a\xbe\x79\xf6\x7e\x75\xb4\x66\xf5\xf8\x64\xa6\x29\xbc\xab\x9b\xfb\x72\x18\x07\x8b\x03\x0e\x68\xdb\x19\xa1\xb5\xdd\x89\x86\x11\x7a\x7a\xb7\xad\xfd\x5c\x5e\xf8\x2a\x5e\x4a\xef\x83\xc5\x83\x56\x42\xb3\xc8\xfd\x9e\xf7\xbd\x4b\x6a\xae\x52\x16\xb9\x9f\xe9\xe3\x60\x31\xb7\xf6\x80\x33\x98\xf1\x63\xa2\x1e\xa1\xc3\x3d\x0d\x34\xd3\x38\x1c\xaf\x51\x59\xa3\xf2\x1d\xdf\x48\x06\xc0\x77\x0a\x22\x97\x29\x5e\xca\xd7\x5a\xbd\x78\x00\x76\x61\x10\x75\xd9\xe4\x85\x84\xac\xe0\x6b\xed\xff\x44\xd1\x60\xfa\x53\x87\xd0\x91\x45\x33\x8f\x96\xf0\x46\xd4\x36\x29\x72\x71\xbd\x94\x33\x23\xfc\x07\xf5\xfc\xc0\xad\xae\xc3\xf8\x2b\x00\x00\xff\xff\x24\x4b\xa3\xf1\xe1\x01\x00\x00"

func assetsTemplatesCmakeDependenciesTxtBytes() ([]byte, error) {
	return bindataRead(
		_assetsTemplatesCmakeDependenciesTxt,
		"assets/templates/cmake/dependencies.txt",
	)
}

func assetsTemplatesCmakeDependenciesTxt() (*asset, error) {
	bytes, err := assetsTemplatesCmakeDependenciesTxtBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/templates/cmake/dependencies.txt", size: 481, mode: os.FileMode(438), modTime: time.Unix(1526248727, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsTemplatesConfigAppHelperTxt = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x64\x91\x41\x6f\xd5\x30\x10\x84\xef\x48\xfc\x87\x51\x7a\x81\x03\xf9\x01\xdc\x2a\xa1\x5e\x38\xb4\x2a\xa8\x9c\x37\xf6\xbe\x97\xa5\x8e\xd7\xf2\xae\x1b\x1e\xbf\x1e\x39\x49\x11\x8f\x1e\xd7\x5e\xcd\x7c\x33\x7b\x83\x81\x4a\x19\xe0\x74\x46\xd0\xec\x24\xd9\x10\xb4\x32\x24\x9f\xb4\x2e\xe4\xa2\x19\x34\x69\x73\xf8\xcc\x28\x55\x7f\x72\xf0\x11\xdf\x67\x31\xac\x92\x52\x7f\x8a\x2d\x30\xf8\x17\x87\xe6\x34\x25\x06\xe5\xb8\xff\x4d\x8c\x56\x92\x52\xe4\xf8\xfe\xdd\x0d\x5c\x41\x19\xbc\x4c\x1c\x23\x47\x44\x7e\x91\xc0\x23\xee\x34\x25\x5d\x25\x9f\x41\x95\x61\xba\x30\x9e\xf9\x82\xa2\x92\xdd\x0e\xf3\xd0\xcc\x75\x91\xdf\x7d\xeb\xa2\xad\x82\x4a\x49\x12\x36\xbe\xcf\x5d\xfb\x13\xee\x2a\x2d\xbc\x6a\x7d\xb6\x4d\xe7\xdb\x97\xaf\x86\x93\xd6\xff\xfd\xac\xc3\xf3\xe5\x35\x2e\x8c\x1d\x7a\x42\x92\xa9\x52\x15\xb6\x4e\xd9\x8c\xb1\xce\x9c\x11\x34\x4a\x3e\x8f\xdd\x00\xf8\x21\x0a\x6b\xa5\x68\xf5\xa3\xa4\x81\x6a\x6c\x92\x75\xd8\x22\x0f\x41\x8d\x06\x7c\xa0\x0c\x2d\x9c\x61\xda\x6a\x60\xdc\xdf\x3f\xe0\xf6\xe9\xb1\xdb\x73\xd2\xb2\x70\x76\x94\x44\xde\xfb\xfd\x38\xee\xec\x0f\xc7\x0c\xb1\xad\x67\xbf\x14\xee\x54\x61\x96\x02\x9f\xa9\xb7\x2f\xf6\x6f\xe8\x37\x05\x1f\x37\x79\x55\xee\x77\x79\x91\xc8\xb6\xb3\x5f\xc5\xa3\x10\xd8\x6c\x17\x9f\xa9\xc6\xb5\xf7\xd5\x13\x04\x5d\x8a\x24\xae\xdb\xd6\x31\x74\x9e\x65\xbc\x0e\x3f\xdc\x3e\x3d\x0e\x7f\xad\xc6\x3f\x01\x00\x00\xff\xff\x19\x37\x64\xd1\x46\x02\x00\x00"

func assetsTemplatesConfigAppHelperTxtBytes() ([]byte, error) {
	return bindataRead(
		_assetsTemplatesConfigAppHelperTxt,
		"assets/templates/config/app-helper.txt",
	)
}

func assetsTemplatesConfigAppHelperTxt() (*asset, error) {
	bytes, err := assetsTemplatesConfigAppHelperTxtBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/templates/config/app-helper.txt", size: 582, mode: os.FileMode(438), modTime: time.Unix(1526249878, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsTemplatesConfigDependenciesHelperTxt = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x6c\x92\xc1\x8e\xd3\x30\x10\x86\xef\x48\xbc\xc3\x2f\xef\x15\x2a\xb1\xc7\x9e\x69\xe1\x50\x51\x69\x81\x13\x42\x68\xe2\x4c\x12\x53\xc7\x63\x8d\x27\x2a\x79\x7b\xe4\xa4\xdd\xcd\x4a\x9b\x93\x35\x19\xff\xdf\xe7\xb1\x1f\xe0\x5a\xce\x9c\x5a\x4e\x3e\x70\x71\x30\xea\x41\x31\xca\xb5\x60\x2a\xac\x30\x41\x48\x3e\x4e\x2d\x43\x6c\x60\x45\x26\x7f\xa1\x9e\x0b\x42\x32\x81\x0d\x1c\x14\x59\xe5\x2f\x7b\xdb\xe1\xc7\xc0\xca\x08\x05\x74\xef\xc3\x48\x89\x7a\x56\x34\x53\x88\xb6\x6c\x7a\xff\xee\x01\xd7\x20\xa0\xd4\x62\x96\x09\x9e\x12\x46\xba\x70\x05\x42\x3a\xd8\x40\x86\x66\x46\xc9\xec\x43\x37\x87\xd4\x6f\xa1\xb0\x21\x94\xaa\xb9\xc3\xe7\x8d\x39\xae\x21\x46\x34\x0c\x42\x0c\xc5\x6a\xce\xf3\x26\x4a\x6d\x65\xde\x59\xb7\x5c\xb4\xa1\xeb\x58\x39\x19\x24\x5b\x90\x54\xd0\x89\x82\xc9\x0f\xab\x05\x8f\x3b\x1c\xa5\xce\xa2\x2a\x90\x32\x8a\x8c\x8c\x0b\xcf\xc8\x12\x92\x15\x50\x23\x93\x2d\x42\xae\x02\x3e\x62\xd2\x58\x4f\x7f\x5d\xc6\x50\x79\x77\x96\x0d\xbc\xfc\x5c\x83\xef\x6a\x3b\x7c\x17\x1c\x49\x21\x29\xce\x70\x5f\x82\x39\x94\x29\x67\x51\xe3\xb6\xf6\x97\x05\x4b\xde\x73\x36\x6e\x77\x2b\x44\xb9\x7b\x0d\xd9\x1e\x8a\xd0\x28\x25\x3f\xd4\x8b\xf3\x03\xfb\xcb\x6a\xc8\x88\xa1\x51\xd2\x19\x9d\xca\xb8\xe6\x78\x19\x73\x88\xfc\xa7\x8b\xd4\xaf\xa0\xb7\xbd\x6f\x7d\x58\xfb\xea\x8c\x6a\xf5\xf9\xd9\xcc\x35\xed\xf0\x8f\xc6\x1c\x79\x5f\xd7\xdb\x07\xb5\x14\x80\x71\x3e\x85\xe6\xb6\xae\xdf\xa4\x71\x0f\xf7\xf3\xe9\xf4\xc9\xbd\x14\x95\xbb\x3d\xdc\xd3\xe1\xb8\x2d\xbe\x92\xdc\xe3\x97\xfb\x7a\x38\x9d\xce\xee\x03\xdc\xb7\xf3\xd9\xfd\xde\xc4\x3f\xbe\x95\xff\xe8\xfe\x07\x00\x00\xff\xff\xc0\x93\xc4\x7c\xe2\x02\x00\x00"

func assetsTemplatesConfigDependenciesHelperTxtBytes() ([]byte, error) {
	return bindataRead(
		_assetsTemplatesConfigDependenciesHelperTxt,
		"assets/templates/config/dependencies-helper.txt",
	)
}

func assetsTemplatesConfigDependenciesHelperTxt() (*asset, error) {
	bytes, err := assetsTemplatesConfigDependenciesHelperTxtBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/templates/config/dependencies-helper.txt", size: 738, mode: os.FileMode(438), modTime: time.Unix(1526249892, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsTemplatesConfigPkgHelperTxt = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x54\x52\xcd\x6a\xdd\x3c\x10\xdd\x7f\xf0\xbd\xc3\xc1\xd9\xb4\x90\xde\x07\xe8\x2e\x50\x02\xa5\x8b\x84\xb4\xa4\x74\x55\xc6\xd2\xf8\x7a\x7a\x65\x8d\x90\xc6\x31\xee\xd3\x17\xc9\xf6\xe5\x66\x39\xf2\xf8\xcc\xf9\xbb\x43\x97\x2e\xe7\x0e\x46\x67\x38\x8d\x46\x12\x0b\x9c\x66\x86\xc4\x41\xf3\x44\x26\x1a\x41\xbd\xce\x06\x1b\x19\x29\xeb\x1f\x76\x76\xc2\x8f\x51\x0a\x16\x09\xa1\x3e\xf9\xd9\x31\x08\x89\xdc\x85\xce\x0c\x1b\xc9\xe0\x28\xa2\x67\xcc\x85\x3d\x24\x42\x6d\xe4\xfc\xff\x7f\x77\x58\x44\x0f\x94\x72\xc2\xcf\x6d\x7a\x13\xcf\x05\x91\x4c\xde\x18\x65\x4e\x49\xb3\x61\xd0\x7c\x40\x16\xb8\xcc\x64\xec\x61\xed\x2e\xad\xa0\x58\x07\x5e\x41\x8d\xac\x0b\xb3\x67\x8f\x21\xd0\x12\xb8\x94\xb0\x9e\xea\xb1\x47\x0d\x41\x17\x89\xe7\xb6\x55\x74\x62\x5c\x78\x45\x52\x89\x56\x76\x59\x6e\x2e\xa6\x93\xfc\xad\x5b\xab\xce\xd7\x9b\x9f\x2b\xc0\x27\x3c\x66\x9a\x78\xd1\x7c\x29\x0d\xe3\xfb\x97\x6f\xa5\x31\xe3\xa9\x67\x5f\x4f\x7a\x7e\x13\xc7\xa5\x5a\xc2\xeb\x61\x22\x0a\x1b\x74\x40\x90\x3e\x53\x16\x2e\x30\xad\x5e\x60\x19\x39\xc2\xa9\x97\x78\x6e\x0c\xd1\x2c\xd8\x25\xef\xd6\x77\x94\xfd\x2c\x51\xbb\x26\xb2\x73\x5a\xa8\xc3\x07\x8a\xd0\xc4\x11\x45\xe7\xec\x18\x4f\x4f\xcf\x78\x78\x7d\xa9\xe7\x39\x68\x9a\x38\x1a\x52\x20\xab\xa9\x7d\x3c\x6d\xdc\x9f\xf7\x19\x52\x5a\x7a\xb6\x26\xae\xac\xdc\x28\x69\x4b\xa9\xd9\x49\x29\x05\x71\x5b\xd4\x2d\xd2\x9a\x5b\x0a\x4a\x9e\xfd\x9e\xf4\x81\x7c\x0d\x6b\xe3\xfe\x4e\x1e\x39\xc7\xa5\x6c\xe0\x23\x65\xbf\x54\xbf\xaa\x02\xa7\x53\x92\xc0\xb9\x6d\xed\x43\xe5\x33\x9d\xde\x8b\xef\x1e\x5e\x5f\xba\xeb\xa9\x5d\xc3\x2f\x9d\x5b\x97\x4a\x62\x27\xc3\x8a\x69\x0e\x26\x29\x30\x68\xb6\x51\x73\xb9\xc7\x70\x93\x50\xf4\xe8\x95\xb2\x2f\x3b\xef\xdb\x16\x5f\xa5\xd5\x4a\x56\x26\x23\xbb\x0b\x64\x68\x26\xdc\xea\x59\xab\x5f\x95\x27\x99\xf4\x81\xb1\x88\x8d\xb7\xed\x87\x58\xdd\xe8\xb9\x56\x66\x2f\xf8\xce\xf6\xeb\x50\x3b\x84\x85\xa2\xbd\x2b\x53\xbd\xd7\xf3\x21\xde\x6f\x90\x8e\x73\xeb\xca\x10\xe8\x5c\xb6\x66\x54\xb4\xfb\xc3\x64\xd8\xa8\x85\xf7\xcf\x12\x8f\xbf\x7f\x6f\x0f\x46\xe7\xd3\xbf\x00\x00\x00\xff\xff\x9b\x9e\xad\xe2\xbf\x03\x00\x00"

func assetsTemplatesConfigPkgHelperTxtBytes() ([]byte, error) {
	return bindataRead(
		_assetsTemplatesConfigPkgHelperTxt,
		"assets/templates/config/pkg-helper.txt",
	)
}

func assetsTemplatesConfigPkgHelperTxt() (*asset, error) {
	bytes, err := assetsTemplatesConfigPkgHelperTxtBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/templates/config/pkg-helper.txt", size: 959, mode: os.FileMode(438), modTime: time.Unix(1526249912, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsTemplatesConfigProjectAppYml = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x44\x8c\x5d\xaa\x03\x31\x08\x46\xdf\x03\xd9\x83\xeb\x70\x2b\x97\x4b\xf9\x3a\x31\x43\x68\x9c\x04\xc7\xd2\xed\x17\xd3\xbf\x97\xe3\xf1\x08\x62\x4e\xce\x89\xe8\x80\x0a\x2f\xc6\xd6\x8a\x70\x20\x7c\x76\x78\x1d\xa6\xfc\xb5\xa8\xd5\xa0\xf2\x18\x76\xe3\x9f\xe6\x94\x93\xc3\x76\xf1\x73\xfd\x2c\x52\x71\xef\xce\xa4\x68\x47\x84\xcd\x04\x2e\x65\x1d\x69\xd5\xb7\x12\x5d\x07\xac\xf0\x6b\x7c\xda\x36\x74\xb6\x2e\x97\xda\xb1\x9f\x4c\x7f\xff\x39\x3d\x03\x00\x00\xff\xff\xda\x5c\xe2\xf5\xaf\x00\x00\x00"

func assetsTemplatesConfigProjectAppYmlBytes() ([]byte, error) {
	return bindataRead(
		_assetsTemplatesConfigProjectAppYml,
		"assets/templates/config/project-app.yml",
	)
}

func assetsTemplatesConfigProjectAppYml() (*asset, error) {
	bytes, err := assetsTemplatesConfigProjectAppYmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/templates/config/project-app.yml", size: 175, mode: os.FileMode(438), modTime: time.Unix(1526246066, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsTemplatesConfigProjectPkgYml = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x6c\x8e\x4b\xae\x83\x30\x0c\x45\xe7\x48\xec\xc1\x2b\x40\xbc\xa9\x67\x6f\xce\x0e\x50\x55\x19\xe2\xd0\xa8\x09\x41\x8e\x69\xb7\x5f\xc5\x2a\x19\x75\xe2\xdc\x73\xf2\xb9\x89\x61\xc1\xbe\x03\xd8\x29\x31\xda\xac\xf4\x62\x29\x21\xef\x08\xe3\x30\x0e\x7f\xd5\xd0\xa9\x8f\x2c\x05\x61\xbe\x55\x8c\x61\xe5\xbd\xf0\x85\x47\x24\xf5\x59\x12\xb6\x54\xad\x17\x4a\xfc\xce\xf2\xbc\x8e\x2d\x99\xc4\x21\xcc\xff\xd3\x64\xbc\xe6\x74\x84\xc8\x77\x1f\x69\x6b\x4f\x07\xc7\x58\x47\xdf\xf5\x9d\x92\x6c\xac\xc5\x7e\xe8\xd8\xd3\x19\x15\x41\xb9\xa8\xdd\x16\x26\x65\x67\x9b\x60\xf6\x1b\x5b\x91\x2d\x97\xfb\x51\xf6\x09\x00\x00\xff\xff\xa0\xea\x46\x71\xfd\x00\x00\x00"

func assetsTemplatesConfigProjectPkgYmlBytes() ([]byte, error) {
	return bindataRead(
		_assetsTemplatesConfigProjectPkgYml,
		"assets/templates/config/project-pkg.yml",
	)
}

func assetsTemplatesConfigProjectPkgYml() (*asset, error) {
	bytes, err := assetsTemplatesConfigProjectPkgYmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/templates/config/project-pkg.yml", size: 253, mode: os.FileMode(438), modTime: time.Unix(1526246066, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsTemplatesConfigTargetsHelperTxt = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x44\x90\x41\x8e\xe4\x30\x08\x45\xf7\x23\xcd\x1d\xbe\xaa\xb6\xad\x1c\xa2\x6f\xd1\x4b\x62\xe3\x04\xc9\x81\xc8\xe0\x8a\x72\xfb\x96\x53\x29\xf5\x16\x1e\xff\x01\x4f\x3c\x82\xda\xc2\xe1\x0f\x04\x2d\xa0\x5a\xed\x70\x14\x6b\x08\xf6\x10\x5d\x40\x9a\x91\xf9\xc5\xd5\xf6\x8d\x35\xae\xde\x8b\x9a\x58\x77\x38\xc7\x60\xfc\x82\x92\x69\x91\xa5\x37\x0a\x31\xf5\x09\x3f\xd6\x91\x48\x91\x1a\x53\xf0\xff\x7f\x4f\x6c\xbd\x86\xec\x95\x71\x3b\x71\xac\xdc\x18\xe7\x0d\x66\x2e\xa2\x8c\x2c\xa5\x70\x1b\xaa\x38\x77\x76\x58\xc1\x6c\xd4\xf2\xc7\xb2\xed\x52\x19\xa5\xd2\xe2\x13\xbe\xcf\x31\x46\xbd\x06\x4c\x3f\xc1\xc3\x25\x7e\x8b\xf3\x17\x8e\x55\xd2\x3a\x2a\x6f\x43\xc6\x4c\xce\x19\xa6\x7f\x07\xa4\xd5\x9c\x15\xf3\x79\x6d\x23\x8a\x58\xf9\x1d\x30\x7e\xb0\x37\x4b\xec\x3e\xfd\x06\x00\x00\xff\xff\xb7\x19\x99\xde\x2f\x01\x00\x00"

func assetsTemplatesConfigTargetsHelperTxtBytes() ([]byte, error) {
	return bindataRead(
		_assetsTemplatesConfigTargetsHelperTxt,
		"assets/templates/config/targets-helper.txt",
	)
}

func assetsTemplatesConfigTargetsHelperTxt() (*asset, error) {
	bytes, err := assetsTemplatesConfigTargetsHelperTxtBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/templates/config/targets-helper.txt", size: 303, mode: os.FileMode(438), modTime: time.Unix(1526249920, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsTemplatesGitignoreGitignoreClion = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xd2\x2b\xcf\xcc\xd7\xe7\xe5\x72\xf6\x4d\xcc\x4e\xf5\xc9\x2c\x2e\x29\x0e\x28\xca\x2c\x4b\x2c\x49\xd5\x2b\xa9\x28\xe1\xe5\xd2\xcb\x4c\x49\x4d\xd4\xe7\xe5\x4a\xce\x4d\xcc\x4e\xd5\x4d\x2a\xcd\xcc\x49\xd1\x4d\x49\x4d\x2a\x4d\xd7\xe7\xe5\x02\x04\x00\x00\xff\xff\x1c\x69\x0c\x49\x3a\x00\x00\x00"

func assetsTemplatesGitignoreGitignoreClionBytes() ([]byte, error) {
	return bindataRead(
		_assetsTemplatesGitignoreGitignoreClion,
		"assets/templates/gitignore/.gitignore-clion",
	)
}

func assetsTemplatesGitignoreGitignoreClion() (*asset, error) {
	bytes, err := assetsTemplatesGitignoreGitignoreClionBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/templates/gitignore/.gitignore-clion", size: 58, mode: os.FileMode(438), modTime: time.Unix(1526246066, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsTemplatesGitignoreGitignoreGeneral = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xd2\x2b\xcf\xcc\xd7\xe7\xe5\x02\x04\x00\x00\xff\xff\x21\xc4\xc4\x85\x07\x00\x00\x00"

func assetsTemplatesGitignoreGitignoreGeneralBytes() ([]byte, error) {
	return bindataRead(
		_assetsTemplatesGitignoreGitignoreGeneral,
		"assets/templates/gitignore/.gitignore-general",
	)
}

func assetsTemplatesGitignoreGitignoreGeneral() (*asset, error) {
	bytes, err := assetsTemplatesGitignoreGitignoreGeneralBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/templates/gitignore/.gitignore-general", size: 7, mode: os.FileMode(438), modTime: time.Unix(1526246066, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsTemplatesIdeClionAppCmakelistsTxtTpl = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xb4\x92\xcd\x6a\xeb\x30\x10\x85\xf7\x06\xbf\x83\x08\x5e\xf8\x2e\x72\xdf\x41\x57\xd6\x2d\x6e\x24\x2b\xc8\x76\x9a\xae\x84\x62\x0f\x45\x8d\x7f\x52\x5b\x0a\x01\xe1\x77\x2f\xb6\xb3\x4f\xa1\x64\x3b\xe7\x9b\xe1\x83\x39\x23\xd8\xf8\x40\x25\xf2\xbe\x6a\xf5\x19\xb6\x57\x18\x46\xd3\x77\xd3\xf4\x27\x0c\xe6\x2c\xc3\x9c\x22\xef\x2f\x43\xff\x09\x95\xdd\x76\xba\x85\x25\x0b\x83\x85\x57\xad\xe9\x4c\xeb\x5a\x35\xc0\x97\x33\x03\xd4\xf3\xb1\x3c\x15\x19\x8a\xfc\x81\xca\x95\xbc\x2f\xc7\x91\x9f\xaf\x4d\x88\x20\x72\x3c\x22\x9c\xf3\x25\x35\x5d\xd5\xb8\x1a\xe2\x0d\xe1\xfa\x0c\xcc\x8c\x76\xdc\x0f\xe6\xaa\x2d\xfc\xb5\x37\xbb\x59\x18\x5d\xd7\xaa\x72\xa3\xed\x5b\x65\xf5\xf0\x01\x36\x0e\x03\x84\x10\x7a\x23\x22\xc7\xea\x5f\x99\xb2\x04\x61\xc6\xd6\x21\x11\x9c\xe3\x2c\x41\x91\x5f\x63\xc2\x93\x09\x9d\x9c\x69\xea\xfb\x92\x90\xbb\x34\x7b\x51\x49\x2a\x29\x29\x84\x7c\x47\x91\x27\x1c\xef\xa8\x22\xa5\x94\x34\x2b\x54\x2e\x4a\x49\xe8\x0c\x4c\x61\xf0\x03\x01\xc2\x28\xce\x1e\x08\x54\x0d\xe8\xee\x59\x02\xe5\x3e\xc1\x05\x55\x98\xb1\x07\x16\xee\x52\x6b\x0b\xcf\xd3\x60\x02\x3f\xfa\x84\xbb\x34\xbd\xfe\xe5\x2b\xe0\x06\x95\xb3\xfa\xd4\x40\x1c\xf9\xbd\x14\xaf\x94\x14\x6a\x2d\x57\xe4\x73\x49\xd4\xff\x94\xd1\x7c\x6e\xdf\x77\x00\x00\x00\xff\xff\xf1\xb6\x9b\xa4\xe0\x02\x00\x00"

func assetsTemplatesIdeClionAppCmakelistsTxtTplBytes() ([]byte, error) {
	return bindataRead(
		_assetsTemplatesIdeClionAppCmakelistsTxtTpl,
		"assets/templates/ide/clion/app/CMakeLists.txt.tpl",
	)
}

func assetsTemplatesIdeClionAppCmakelistsTxtTpl() (*asset, error) {
	bytes, err := assetsTemplatesIdeClionAppCmakelistsTxtTplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/templates/ide/clion/app/CMakeLists.txt.tpl", size: 736, mode: os.FileMode(438), modTime: time.Unix(1526246066, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsTemplatesIdeClionAppCmakelistsprivateTxtTpl = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x53\xd1\x8a\xa3\x30\x14\x7d\x17\xfc\x87\x8b\xcb\x82\x75\xb0\xf3\x0d\x8e\x3a\x83\xac\x1d\x17\xe3\xb0\xf3\x16\xd2\x24\xd6\xb0\xae\x4a\x62\x77\x5b\x24\xff\xbe\x44\xa1\xad\x5a\xba\xfb\x22\x9c\xeb\x39\xf7\xdc\x73\x93\x28\xde\xbb\x3f\xc2\x0c\x05\x38\xdc\x45\xd0\x9d\xfb\xaa\x6d\xc0\x19\x86\x3f\xb4\x55\xc4\xef\x48\x5f\x69\xfd\x3c\x82\xe9\xbb\xed\xce\xce\xc6\xb6\x6c\x0b\xc5\x85\x1b\xee\x82\x6f\x31\x0e\x71\x98\xed\xbe\x27\x69\x9c\x03\xf9\x2d\xfd\x03\xa5\x9b\xd9\xef\xcf\xcf\x05\xe1\xe9\x69\x45\x78\x4d\x83\x37\x84\xa3\x04\x15\x79\xf2\xf2\x51\x24\xd9\xbb\x19\x82\xfe\x22\x3f\xb9\x4f\x4f\x27\xbf\xac\xc9\x41\x69\xed\xcc\x85\x8f\x65\xb7\x22\x13\xf3\xea\x86\x8a\xe0\x3d\x0a\xf2\x08\x6e\x2d\x54\x4f\x1a\x46\x24\xd3\x7a\xcc\xf7\x15\x18\x2f\x7d\xc5\x89\xa4\x95\x6d\x0d\x03\x61\x0c\x33\x5e\x8a\x46\xf4\xa2\x6d\x94\x3b\x0c\x47\xc5\xa5\x7f\x2d\x69\xbd\xd1\xda\xe8\x78\xc3\x4c\x83\x2f\x40\x18\x83\xa9\x01\x98\x45\x2a\x28\x5b\x09\x66\x89\x40\x5b\xc9\x0d\x75\x5c\xf2\xd5\x43\x34\xb4\x3e\x32\x8e\x99\x90\x9c\xf6\xad\x14\x5c\xb9\x97\xb3\x30\x1a\x13\xc6\x98\xfc\x83\xba\x6f\xc7\x1c\xce\x7f\x0d\x44\xea\x1a\xfa\x8a\x83\x89\x03\xb5\xd8\x4b\x62\x9a\x19\x5d\x2d\xf6\x97\xe1\x1e\x78\x1a\xda\x74\x51\x16\x86\xb6\x55\x8a\x9a\xbb\x6f\x69\xf6\x82\xf3\x38\xfc\xc8\x51\x0c\x28\x0f\xf1\x6b\x92\xc6\xc8\xb6\x00\x00\x1c\x25\xe9\xb3\xb7\xa5\x5d\xe7\xcc\x0b\x74\x81\x67\xd0\xbb\x23\xf1\xd6\x2a\x6f\x25\xdc\x56\x0b\xb8\xc4\x77\x9a\x56\xeb\xca\x9d\x52\xd7\x4d\xcf\xe2\x6f\x00\x00\x00\xff\xff\xd8\xa9\x55\x37\x50\x03\x00\x00"

func assetsTemplatesIdeClionAppCmakelistsprivateTxtTplBytes() ([]byte, error) {
	return bindataRead(
		_assetsTemplatesIdeClionAppCmakelistsprivateTxtTpl,
		"assets/templates/ide/clion/app/CMakeListsPrivate.txt.tpl",
	)
}

func assetsTemplatesIdeClionAppCmakelistsprivateTxtTpl() (*asset, error) {
	bytes, err := assetsTemplatesIdeClionAppCmakelistsprivateTxtTplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/templates/ide/clion/app/CMakeListsPrivate.txt.tpl", size: 848, mode: os.FileMode(438), modTime: time.Unix(1526246066, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsTemplatesIdeClionLibCmakelistsTxtTpl = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xb4\x92\xcd\x6a\xeb\x30\x10\x85\xf7\x06\xbf\x83\x08\x5e\xf8\x2e\x72\xdf\x41\x57\xd6\x2d\x6e\x24\x2b\xc8\x76\x9a\xae\x84\x62\x0f\x45\x8d\x7f\x52\x5b\x0a\x01\xe1\x77\x2f\xb6\xb3\x4f\xa1\x64\x3b\xe7\x9b\xe1\x83\x39\x23\xd8\xf8\x40\x25\xf2\xbe\x6a\xf5\x19\xb6\x57\x18\x46\xd3\x77\xd3\xf4\x27\x0c\xe6\x2c\xc3\x9c\x22\xef\x2f\x43\xff\x09\x95\xdd\x76\xba\x85\x25\x0b\x83\x85\x57\xad\xe9\x4c\xeb\x5a\x35\xc0\x97\x33\x03\xd4\xf3\xb1\x3c\x15\x19\x8a\xfc\x81\xca\x95\xbc\x2f\xc7\x91\x9f\xaf\x4d\x88\x20\x72\x3c\x22\x9c\xf3\x25\x35\x5d\xd5\xb8\x1a\xe2\x0d\xe1\xfa\x0c\xcc\x8c\x76\xdc\x0f\xe6\xaa\x2d\xfc\xb5\x37\xbb\x59\x18\x5d\xd7\xaa\x72\xa3\xed\x5b\x65\xf5\xf0\x01\x36\x0e\x03\x84\x10\x7a\x23\x22\xc7\xea\x5f\x99\xb2\x04\x61\xc6\xd6\x21\x11\x9c\xe3\x2c\x41\x91\x5f\x63\xc2\x93\x09\x9d\x9c\x69\xea\xfb\x92\x90\xbb\x34\x7b\x51\x49\x2a\x29\x29\x84\x7c\x47\x91\x27\x1c\xef\xa8\x22\xa5\x94\x34\x2b\x54\x2e\x4a\x49\xe8\x0c\x4c\x61\xf0\x03\x01\xc2\x28\xce\x1e\x08\x54\x0d\xe8\xee\x59\x02\xe5\x3e\xc1\x05\x55\x98\xb1\x07\x16\xee\x52\x6b\x0b\xcf\xd3\x60\x02\x3f\xfa\x84\xbb\x34\xbd\xfe\xe5\x2b\xe0\x06\x95\xb3\xfa\xd4\x40\x1c\xf9\xbd\x14\xaf\x94\x14\x6a\x2d\x57\xe4\x73\x49\xd4\xff\x94\xd1\x7c\x6e\xdf\x77\x00\x00\x00\xff\xff\xf1\xb6\x9b\xa4\xe0\x02\x00\x00"

func assetsTemplatesIdeClionLibCmakelistsTxtTplBytes() ([]byte, error) {
	return bindataRead(
		_assetsTemplatesIdeClionLibCmakelistsTxtTpl,
		"assets/templates/ide/clion/lib/CMakeLists.txt.tpl",
	)
}

func assetsTemplatesIdeClionLibCmakelistsTxtTpl() (*asset, error) {
	bytes, err := assetsTemplatesIdeClionLibCmakelistsTxtTplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/templates/ide/clion/lib/CMakeLists.txt.tpl", size: 736, mode: os.FileMode(438), modTime: time.Unix(1526246066, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsTemplatesIdeClionLibCmakelistsprivateTxtTpl = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x53\xd1\x8a\xa3\x30\x14\x7d\x17\xfc\x87\x8b\xcb\x82\x75\xb0\xf3\x0d\x8e\x3a\x83\xac\x1d\x17\xe3\xb0\xf3\x16\xd2\x24\xd6\xb0\xae\x4a\x62\x77\x5b\x24\xff\xbe\x44\xa1\xad\x5a\xba\xfb\x22\x9c\xeb\x39\xf7\xdc\x73\x93\x28\xde\xbb\x3f\xc2\x0c\x05\x38\xdc\x45\xd0\x9d\xfb\xaa\x6d\xc0\x19\x86\x3f\xb4\x55\xc4\xef\x48\x5f\x69\xfd\x3c\x82\xe9\xbb\xed\xce\xce\xc6\xb6\x6c\x0b\xc5\x85\x1b\xee\x82\x6f\x31\x0e\x71\x98\xed\xbe\x27\x69\x9c\x03\xf9\x2d\xfd\x03\xa5\x9b\xd9\xef\xcf\xcf\x05\xe1\xe9\x69\x45\x78\x4d\x83\x37\x84\xa3\x04\x15\x79\xf2\xf2\x51\x24\xd9\xbb\x19\x82\xfe\x22\x3f\xb9\x4f\x4f\x27\xbf\xac\xc9\x41\x69\xed\xcc\x85\x8f\x65\xb7\x22\x13\xf3\xea\x86\x8a\xe0\x3d\x0a\xf2\x08\x6e\x2d\x54\x4f\x1a\x46\x24\xd3\x7a\xcc\xf7\x15\x18\x2f\x7d\xc5\x89\xa4\x95\x6d\x0d\x03\x61\x0c\x33\x5e\x8a\x46\xf4\xa2\x6d\x94\x3b\x0c\x47\xc5\xa5\x7f\x2d\x69\xbd\xd1\xda\xe8\x78\xc3\x4c\x83\x2f\x40\x18\x83\xa9\x01\x98\x45\x2a\x28\x5b\x09\x66\x89\x40\x5b\xc9\x0d\x75\x5c\xf2\xd5\x43\x34\xb4\x3e\x32\x8e\x99\x90\x9c\xf6\xad\x14\x5c\xb9\x97\xb3\x30\x1a\x13\xc6\x98\xfc\x83\xba\x6f\xc7\x1c\xce\x7f\x0d\x44\xea\x1a\xfa\x8a\x83\x89\x03\xb5\xd8\x4b\x62\x9a\x19\x5d\x2d\xf6\x97\xe1\x1e\x78\x1a\xda\x74\x51\x16\x86\xb6\x55\x8a\x9a\xbb\x6f\x69\xf6\x82\xf3\x38\xfc\xc8\x51\x0c\x28\x0f\xf1\x6b\x92\xc6\xc8\xb6\x00\x00\x1c\x25\xe9\xb3\xb7\xa5\x5d\xe7\xcc\x0b\x74\x81\x67\xd0\xbb\x23\xf1\xd6\x2a\x6f\x25\xdc\x56\x0b\xb8\xc4\x77\x9a\x56\xeb\xca\x9d\x52\xd7\x4d\xcf\xe2\x6f\x00\x00\x00\xff\xff\xd8\xa9\x55\x37\x50\x03\x00\x00"

func assetsTemplatesIdeClionLibCmakelistsprivateTxtTplBytes() ([]byte, error) {
	return bindataRead(
		_assetsTemplatesIdeClionLibCmakelistsprivateTxtTpl,
		"assets/templates/ide/clion/lib/CMakeListsPrivate.txt.tpl",
	)
}

func assetsTemplatesIdeClionLibCmakelistsprivateTxtTpl() (*asset, error) {
	bytes, err := assetsTemplatesIdeClionLibCmakelistsprivateTxtTplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/templates/ide/clion/lib/CMakeListsPrivate.txt.tpl", size: 848, mode: os.FileMode(438), modTime: time.Unix(1526246066, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsTemplatesSampleProgramAppMainCpp = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x52\xce\xcc\x4b\xce\x29\x4d\x49\x55\x50\x72\xce\x2f\x4e\xd4\x0f\x0a\x09\xd1\xcb\xc8\x50\xe2\xe5\x42\x13\xf7\x2f\x2d\x29\x28\x2d\x09\xc8\xcc\x83\xc8\xf2\x72\xc1\x05\x14\x72\x52\x53\x02\x32\xf3\x34\x9c\xf2\x13\x8b\x52\xac\xac\x7c\x5c\x5d\x34\xad\x41\x0a\xca\xf2\x33\x53\x14\x8a\x53\x4b\x4a\x0b\x34\x34\x15\xaa\x79\xb9\x14\x14\x14\x14\x82\x42\x42\xac\xac\x92\x52\xd3\x33\xf3\x34\x40\x8a\x6a\xe1\xea\x72\xf2\xf3\x91\x94\x41\x4c\xd4\xcb\x87\xa8\x02\x89\xa4\xa4\xe6\x24\x56\x6a\x98\x1a\xc0\xf8\x30\x15\x69\x69\x18\x4a\x0c\xa0\x26\x03\x02\x00\x00\xff\xff\x11\x5d\x9c\xf5\xd9\x00\x00\x00"

func assetsTemplatesSampleProgramAppMainCppBytes() ([]byte, error) {
	return bindataRead(
		_assetsTemplatesSampleProgramAppMainCpp,
		"assets/templates/sample-program/app/main.cpp",
	)
}

func assetsTemplatesSampleProgramAppMainCpp() (*asset, error) {
	bytes, err := assetsTemplatesSampleProgramAppMainCppBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/templates/sample-program/app/main.cpp", size: 217, mode: os.FileMode(438), modTime: time.Unix(1526246066, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsTemplatesSampleProgramLibLibCpp = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x01\x00\x00\xff\xff\x00\x00\x00\x00\x00\x00\x00\x00"

func assetsTemplatesSampleProgramLibLibCppBytes() ([]byte, error) {
	return bindataRead(
		_assetsTemplatesSampleProgramLibLibCpp,
		"assets/templates/sample-program/lib/lib.cpp",
	)
}

func assetsTemplatesSampleProgramLibLibCpp() (*asset, error) {
	bytes, err := assetsTemplatesSampleProgramLibLibCppBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/templates/sample-program/lib/lib.cpp", size: 0, mode: os.FileMode(438), modTime: time.Unix(1526246066, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsTemplatesSampleProgramLibLibH = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x01\x00\x00\xff\xff\x00\x00\x00\x00\x00\x00\x00\x00"

func assetsTemplatesSampleProgramLibLibHBytes() ([]byte, error) {
	return bindataRead(
		_assetsTemplatesSampleProgramLibLibH,
		"assets/templates/sample-program/lib/lib.h",
	)
}

func assetsTemplatesSampleProgramLibLibH() (*asset, error) {
	bytes, err := assetsTemplatesSampleProgramLibLibHBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/templates/sample-program/lib/lib.h", size: 0, mode: os.FileMode(438), modTime: time.Unix(1526246066, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsTemplatesSampleProgramLibMainCpp = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x01\x00\x00\xff\xff\x00\x00\x00\x00\x00\x00\x00\x00"

func assetsTemplatesSampleProgramLibMainCppBytes() ([]byte, error) {
	return bindataRead(
		_assetsTemplatesSampleProgramLibMainCpp,
		"assets/templates/sample-program/lib/main.cpp",
	)
}

func assetsTemplatesSampleProgramLibMainCpp() (*asset, error) {
	bytes, err := assetsTemplatesSampleProgramLibMainCppBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/templates/sample-program/lib/main.cpp", size: 0, mode: os.FileMode(438), modTime: time.Unix(1526246066, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"assets/config/create_paths.json": assetsConfigCreate_pathsJson,
	"assets/config/defaults.yml": assetsConfigDefaultsYml,
	"assets/config/paths.yml": assetsConfigPathsYml,
	"assets/config/update_paths.json": assetsConfigUpdate_pathsJson,
	"assets/templates/cmake/CMakeListsApp.txt.tpl": assetsTemplatesCmakeCmakelistsappTxtTpl,
	"assets/templates/cmake/CMakeListsPkg.txt.tpl": assetsTemplatesCmakeCmakelistspkgTxtTpl,
	"assets/templates/cmake/dependencies.txt": assetsTemplatesCmakeDependenciesTxt,
	"assets/templates/config/app-helper.txt": assetsTemplatesConfigAppHelperTxt,
	"assets/templates/config/dependencies-helper.txt": assetsTemplatesConfigDependenciesHelperTxt,
	"assets/templates/config/pkg-helper.txt": assetsTemplatesConfigPkgHelperTxt,
	"assets/templates/config/project-app.yml": assetsTemplatesConfigProjectAppYml,
	"assets/templates/config/project-pkg.yml": assetsTemplatesConfigProjectPkgYml,
	"assets/templates/config/targets-helper.txt": assetsTemplatesConfigTargetsHelperTxt,
	"assets/templates/gitignore/.gitignore-clion": assetsTemplatesGitignoreGitignoreClion,
	"assets/templates/gitignore/.gitignore-general": assetsTemplatesGitignoreGitignoreGeneral,
	"assets/templates/ide/clion/app/CMakeLists.txt.tpl": assetsTemplatesIdeClionAppCmakelistsTxtTpl,
	"assets/templates/ide/clion/app/CMakeListsPrivate.txt.tpl": assetsTemplatesIdeClionAppCmakelistsprivateTxtTpl,
	"assets/templates/ide/clion/lib/CMakeLists.txt.tpl": assetsTemplatesIdeClionLibCmakelistsTxtTpl,
	"assets/templates/ide/clion/lib/CMakeListsPrivate.txt.tpl": assetsTemplatesIdeClionLibCmakelistsprivateTxtTpl,
	"assets/templates/sample-program/app/main.cpp": assetsTemplatesSampleProgramAppMainCpp,
	"assets/templates/sample-program/lib/lib.cpp": assetsTemplatesSampleProgramLibLibCpp,
	"assets/templates/sample-program/lib/lib.h": assetsTemplatesSampleProgramLibLibH,
	"assets/templates/sample-program/lib/main.cpp": assetsTemplatesSampleProgramLibMainCpp,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}
var _bintree = &bintree{nil, map[string]*bintree{
	"assets": &bintree{nil, map[string]*bintree{
		"config": &bintree{nil, map[string]*bintree{
			"create_paths.json": &bintree{assetsConfigCreate_pathsJson, map[string]*bintree{}},
			"defaults.yml": &bintree{assetsConfigDefaultsYml, map[string]*bintree{}},
			"paths.yml": &bintree{assetsConfigPathsYml, map[string]*bintree{}},
			"update_paths.json": &bintree{assetsConfigUpdate_pathsJson, map[string]*bintree{}},
		}},
		"templates": &bintree{nil, map[string]*bintree{
			"cmake": &bintree{nil, map[string]*bintree{
				"CMakeListsApp.txt.tpl": &bintree{assetsTemplatesCmakeCmakelistsappTxtTpl, map[string]*bintree{}},
				"CMakeListsPkg.txt.tpl": &bintree{assetsTemplatesCmakeCmakelistspkgTxtTpl, map[string]*bintree{}},
				"dependencies.txt": &bintree{assetsTemplatesCmakeDependenciesTxt, map[string]*bintree{}},
			}},
			"config": &bintree{nil, map[string]*bintree{
				"app-helper.txt": &bintree{assetsTemplatesConfigAppHelperTxt, map[string]*bintree{}},
				"dependencies-helper.txt": &bintree{assetsTemplatesConfigDependenciesHelperTxt, map[string]*bintree{}},
				"pkg-helper.txt": &bintree{assetsTemplatesConfigPkgHelperTxt, map[string]*bintree{}},
				"project-app.yml": &bintree{assetsTemplatesConfigProjectAppYml, map[string]*bintree{}},
				"project-pkg.yml": &bintree{assetsTemplatesConfigProjectPkgYml, map[string]*bintree{}},
				"targets-helper.txt": &bintree{assetsTemplatesConfigTargetsHelperTxt, map[string]*bintree{}},
			}},
			"gitignore": &bintree{nil, map[string]*bintree{
				".gitignore-clion": &bintree{assetsTemplatesGitignoreGitignoreClion, map[string]*bintree{}},
				".gitignore-general": &bintree{assetsTemplatesGitignoreGitignoreGeneral, map[string]*bintree{}},
			}},
			"ide": &bintree{nil, map[string]*bintree{
				"clion": &bintree{nil, map[string]*bintree{
					"app": &bintree{nil, map[string]*bintree{
						"CMakeLists.txt.tpl": &bintree{assetsTemplatesIdeClionAppCmakelistsTxtTpl, map[string]*bintree{}},
						"CMakeListsPrivate.txt.tpl": &bintree{assetsTemplatesIdeClionAppCmakelistsprivateTxtTpl, map[string]*bintree{}},
					}},
					"lib": &bintree{nil, map[string]*bintree{
						"CMakeLists.txt.tpl": &bintree{assetsTemplatesIdeClionLibCmakelistsTxtTpl, map[string]*bintree{}},
						"CMakeListsPrivate.txt.tpl": &bintree{assetsTemplatesIdeClionLibCmakelistsprivateTxtTpl, map[string]*bintree{}},
					}},
				}},
			}},
			"sample-program": &bintree{nil, map[string]*bintree{
				"app": &bintree{nil, map[string]*bintree{
					"main.cpp": &bintree{assetsTemplatesSampleProgramAppMainCpp, map[string]*bintree{}},
				}},
				"lib": &bintree{nil, map[string]*bintree{
					"lib.cpp": &bintree{assetsTemplatesSampleProgramLibLibCpp, map[string]*bintree{}},
					"lib.h": &bintree{assetsTemplatesSampleProgramLibLibH, map[string]*bintree{}},
					"main.cpp": &bintree{assetsTemplatesSampleProgramLibMainCpp, map[string]*bintree{}},
				}},
			}},
		}},
	}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}

