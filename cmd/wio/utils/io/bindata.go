// Code generated by go-bindata.
// sources:
// ../../../../assets/config/create_paths.json
// ../../../../assets/config/defaults.yml
// ../../../../assets/config/paths.yml
// ../../../../assets/config/update_paths.json
// ../../../../assets/templates/cmake/CMakeListsApp.txt.tpl
// ../../../../assets/templates/cmake/CMakeListsPkg.txt.tpl
// ../../../../assets/templates/cmake/CMakeListsTarget.txt
// ../../../../assets/templates/config/libs-help.txt
// ../../../../assets/templates/config/libs.yml
// ../../../../assets/templates/config/project-app.yml
// ../../../../assets/templates/config/project-lib.yml
// ../../../../assets/templates/config/wio-help.txt
// ../../../../assets/templates/gitignore/.gitignore-clion
// ../../../../assets/templates/gitignore/.gitignore-general
// ../../../../assets/templates/ide/clion/app/CMakeLists.txt.tpl
// ../../../../assets/templates/ide/clion/app/CMakeListsPrivate.txt.tpl
// ../../../../assets/templates/ide/clion/lib/CMakeLists.txt.tpl
// ../../../../assets/templates/ide/clion/lib/CMakeListsPrivate.txt.tpl
// ../../../../assets/templates/sample-program/app/main.cpp
// ../../../../assets/templates/sample-program/lib/lib.cpp
// ../../../../assets/templates/sample-program/lib/lib.h
// ../../../../assets/templates/sample-program/lib/main.cpp
// DO NOT EDIT!

package io

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data, name string) ([]byte, error) {
	gz, err := gzip.NewReader(strings.NewReader(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _assetsConfigCreate_pathsJson = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xcc\xd4\x3f\x6b\xf3\x30\x10\x06\xf0\xdd\x9f\xe2\xd0\x1c\x5b\x7b\xd6\x77\x7b\x69\x49\x08\xdd\x4a\x07\x45\xbe\x38\xd7\xca\xd6\x21\x5d\xd2\x16\xe3\xef\x5e\x6c\x68\xd3\xa4\x21\xce\x9f\x26\xee\x60\x63\xc4\x73\xe6\x87\x84\x9e\x3a\x01\x50\x6c\x64\x19\xd5\x18\x1e\x13\x00\x80\xba\x7b\x03\x28\xca\xd5\x18\x94\x61\x4e\x0b\xac\xd4\xe8\x73\x39\x06\xdb\xae\x0b\x96\xec\x8c\x60\xd4\xd6\x57\x0b\x2a\x34\x07\xff\x8c\x56\x52\xc3\x9c\xbd\x97\x6e\x33\x90\x63\xfb\x73\x55\xd7\xd3\xd9\xff\x74\x36\x99\x3c\x34\x8d\x7e\x25\xbf\x1d\xf2\x6b\x0c\x81\x72\x54\x63\x58\x18\x17\xb1\x5b\x6f\x46\xe7\x89\xa2\x29\xd9\x61\xca\xc1\x17\xc1\x94\xda\x30\xeb\xd2\x50\x95\x59\xe6\xc3\xac\x18\xec\x9e\xe4\xaf\xda\x0a\x12\x2a\x2a\x1f\x50\x67\x5f\x9f\xed\x08\x06\xd3\xb3\x67\x9b\xfc\xd9\x34\xeb\xc8\x9f\x8c\xdb\x19\x1a\x88\x46\x39\xea\x2e\xd3\x1d\xe7\xbf\x7b\xf3\x82\x77\x14\x25\x66\xf2\x26\x99\x70\xcf\xde\x6d\xe7\x6f\x8e\x9c\x06\x5a\x1b\xc1\x53\xad\xdf\xc6\xf6\x92\x25\xac\x0e\x89\x1d\xcd\x4f\xbb\xba\x8e\xe6\xd7\xbd\xba\xfd\xa2\x9d\xab\xeb\x68\xde\x3e\xd9\xf2\xb0\x89\x2a\xeb\x56\x39\xee\x46\x6f\x21\x3b\xaa\x53\x7e\x04\xaf\x2d\x3b\xae\xee\x04\xa3\x5c\xd6\x77\xfd\xb8\xc1\xfa\xae\xa5\xfd\xd1\xbe\x3b\x86\xb6\xa9\x92\xf6\x3c\x07\xe8\xbb\x4b\x90\x57\xef\xbb\x04\xe0\x29\x69\x92\x8f\x00\x00\x00\xff\xff\x0a\x01\x85\x67\xbf\x08\x00\x00"

func assetsConfigCreate_pathsJsonBytes() ([]byte, error) {
	return bindataRead(
		_assetsConfigCreate_pathsJson,
		"assets/config/create_paths.json",
	)
}

func assetsConfigCreate_pathsJson() (*asset, error) {
	bytes, err := assetsConfigCreate_pathsJsonBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/config/create_paths.json", size: 2239, mode: os.FileMode(420), modTime: time.Unix(1523554059, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsConfigDefaultsYml = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x44\xcf\x41\x4e\xc4\x30\x0c\x05\xd0\x7d\x4e\x61\xb9\xfb\xd1\xb0\xcd\x29\x58\x70\x01\x37\x71\xa6\x11\x8e\x5d\x39\x49\x11\xb7\x47\x65\x86\xe2\x9d\xf5\x9f\xbe\xf4\x17\xf8\xd8\x6a\x87\x64\x3a\xa8\x6a\x07\x12\x81\xb1\x31\x64\x2e\x34\x65\xc0\x41\x32\xb9\x43\x31\x87\x64\xad\x91\x66\xa9\xca\x40\xfe\x98\x8d\x75\xf4\xb0\xc0\x3b\x8d\xed\xcf\x91\x33\xa8\x0d\xa8\x9a\x64\x66\xce\xb0\x72\xa2\xd9\xf9\xec\xfc\xfe\x4d\x1b\xa5\xed\x6c\xe8\x3b\xa7\x5a\x6a\x0a\xa1\x66\x8e\x80\x6a\xca\x18\x8a\x53\xe3\x2f\xf3\xcf\x08\x98\xac\x13\x86\x5d\x68\x14\xf3\x16\x01\xe9\x70\x0c\xa5\xca\x3f\xdf\xcd\xc7\xf5\x1c\xec\xbd\x9a\x46\xc0\xfb\xed\x7e\x7b\xc3\xb0\x1a\x79\x8e\x80\x53\x0d\xc3\x3a\xc8\x1f\x7c\x6a\x12\x41\x78\xdd\x02\xeb\xac\x92\xe1\x19\x86\x79\xa1\xd7\x7e\x7c\xa2\xb9\x8b\xd1\xa5\x7e\x02\x00\x00\xff\xff\x3d\xf5\xa5\xaa\x34\x01\x00\x00"

func assetsConfigDefaultsYmlBytes() ([]byte, error) {
	return bindataRead(
		_assetsConfigDefaultsYml,
		"assets/config/defaults.yml",
	)
}

func assetsConfigDefaultsYml() (*asset, error) {
	bytes, err := assetsConfigDefaultsYmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/config/defaults.yml", size: 308, mode: os.FileMode(420), modTime: time.Unix(1525575873, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsConfigPathsYml = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x4a\x2c\x4a\x29\xcd\xcc\xcb\xd7\x2d\x4e\xc9\xd6\x2d\x48\x2c\xc9\xb0\x52\x50\x52\xe2\x4a\xce\x2f\x4e\x44\x15\x49\x2c\x2b\x42\xe2\x14\xe5\x22\x38\xb9\x89\xd9\xa9\x48\x3a\x51\xb9\x80\x00\x00\x00\xff\xff\x60\xc2\x95\x1d\x5e\x00\x00\x00"

func assetsConfigPathsYmlBytes() ([]byte, error) {
	return bindataRead(
		_assetsConfigPathsYml,
		"assets/config/paths.yml",
	)
}

func assetsConfigPathsYml() (*asset, error) {
	bytes, err := assetsConfigPathsYmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/config/paths.yml", size: 94, mode: os.FileMode(420), modTime: time.Unix(1521752364, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsConfigUpdate_pathsJson = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xcc\xd3\xc1\x4a\xc4\x30\x10\x06\xe0\x7b\x9e\x62\xc8\x79\xdb\xdc\x7b\xf5\x26\xca\x2e\x8b\x37\xf1\x90\xb6\xb3\x75\x34\xdb\x0c\xc9\xb8\x2a\xa5\xef\x2e\x2d\x68\x5d\x11\x6b\x57\x6a\xf7\x52\xca\x30\x7f\xf8\x08\xf9\x1b\x05\xa0\xd9\xca\x7d\xd4\x19\xdc\x2a\x00\x80\xa6\xff\x02\x68\x2a\x75\x06\xda\x32\x27\x15\xd6\x7a\xf5\x3e\x8e\xa1\xe8\xe6\x82\x7b\x76\x56\x30\x9a\xc2\xd7\x3b\xaa\x0c\x07\xff\x80\x85\x24\x96\x39\x7d\xdd\xbb\x21\x50\x62\x77\xb8\x6e\x9a\xcd\xf6\x32\xd9\xae\xd7\x37\x6d\x6b\x9e\xc9\x1f\x2f\xf9\x03\x86\x40\x25\xea\x0c\x76\xd6\x45\xec\xe7\xed\xea\x34\x51\x45\x42\x55\xed\x03\x9a\xf4\xe3\xb7\x8b\x60\xb0\x23\xae\x61\xff\x64\x5a\xe1\xc8\x4f\xc6\x7d\x09\x2d\x44\xa3\x12\x4d\xbf\x63\x2c\xb3\xb9\xb8\xb6\x8f\x78\x45\x51\x62\x2a\x2f\x92\x0a\x8f\xdc\xdd\xf1\xfe\xbf\x23\x37\x81\x0e\x56\x70\xaa\xf5\x53\xec\x5b\xb2\x84\xa7\x9f\xc4\x8e\xf2\x69\xf5\x70\x94\xcf\x5b\x8f\x71\xd1\x62\xf5\xe8\x68\x67\x5a\x8f\xdf\xd0\x86\x97\xe7\x28\x5f\xa2\x1e\x7f\x41\xce\x5e\x0f\x05\x70\xa7\x5a\xf5\x16\x00\x00\xff\xff\xa5\x53\x30\xd3\x52\x06\x00\x00"

func assetsConfigUpdate_pathsJsonBytes() ([]byte, error) {
	return bindataRead(
		_assetsConfigUpdate_pathsJson,
		"assets/config/update_paths.json",
	)
}

func assetsConfigUpdate_pathsJson() (*asset, error) {
	bytes, err := assetsConfigUpdate_pathsJsonBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/config/update_paths.json", size: 1618, mode: os.FileMode(420), modTime: time.Unix(1523553906, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsTemplatesCmakeCmakelistsappTxtTpl = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x5c\x91\xc1\x6e\xe2\x30\x10\x86\xef\x7e\x8a\x51\x96\x43\xb2\x12\x01\x69\x9f\x20\x64\xbd\xbb\xd1\x02\xa9\x1c\x1a\x71\xb3\x5c\x67\x02\x2e\x71\x9c\x3a\x46\x1c\x2c\xbf\x7b\x15\x28\xa8\xed\xf1\xf7\xef\x99\xef\x9f\x99\x11\x5d\x5c\x53\x06\xbf\xd2\x65\xba\x4c\xc8\x24\xb7\xd9\x86\x82\xf7\x83\x35\xaf\x28\xdd\xbc\x17\x1a\x43\x48\xc8\xd5\xcb\x37\xd9\x7f\xca\x77\x65\xb9\xce\xff\x65\xc5\x96\xff\x29\xd6\x14\x22\xef\x9d\x31\x9d\x3c\x0a\xd5\xcf\x07\xe1\x8e\x21\x44\x09\x21\x52\x8b\x13\x72\xad\x7a\xa5\xcf\x9a\x5b\x7c\x3b\x2b\x8b\xcd\x44\xab\x8a\x72\x0b\x33\x5f\x53\x16\x12\xf2\xc1\x89\x67\x7e\x02\x07\xc8\x21\xdf\xef\x21\xab\x36\x09\x21\xad\xea\x30\xfe\xbb\x2e\x57\x9c\xd1\xfc\x99\x55\x14\x2a\x96\x5f\xa1\x15\x44\x69\xba\x18\xad\x5c\xfc\x4c\xe5\x30\x44\x9f\xa5\xfc\xa2\xa6\x28\x3f\x40\x5a\x14\x0e\xc1\x1d\x11\x5a\x65\xf5\x45\x58\x24\x07\xec\xd1\x0a\x87\x5c\xd8\xe6\xac\x7a\xc3\xef\x4e\xec\xbd\x13\xf6\x80\xf7\xe1\x09\x00\x4c\xe4\x0a\x66\xfe\x11\xe0\xf6\xba\x2a\x33\xf6\x1b\xbc\x7f\x31\xc2\x36\xd3\x9a\x6e\x85\x5c\x1a\x3d\xa8\x0e\x79\x83\xad\xea\x95\x53\xa6\x1f\xbf\x77\x85\x27\x56\xd4\xd9\x8e\x02\xe7\x59\xcd\xb8\xf7\xad\x15\x1a\x2f\xc6\x9e\x42\xe0\x1c\x1e\xbf\xdb\x4e\x1c\xc6\xeb\x05\xde\x03\x00\x00\xff\xff\x2c\x06\x8f\xcf\xad\x01\x00\x00"

func assetsTemplatesCmakeCmakelistsappTxtTplBytes() ([]byte, error) {
	return bindataRead(
		_assetsTemplatesCmakeCmakelistsappTxtTpl,
		"assets/templates/cmake/CMakeListsApp.txt.tpl",
	)
}

func assetsTemplatesCmakeCmakelistsappTxtTpl() (*asset, error) {
	bytes, err := assetsTemplatesCmakeCmakelistsappTxtTplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/templates/cmake/CMakeListsApp.txt.tpl", size: 429, mode: os.FileMode(420), modTime: time.Unix(1523553906, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsTemplatesCmakeCmakelistspkgTxtTpl = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x94\xd2\xd1\x6a\xdb\x30\x18\x05\xe0\xeb\xe9\x29\x7e\x4c\x2e\xec\x41\x9c\xc2\x9e\xc0\xf1\xbc\xcd\xcc\x89\x87\xdc\x85\xde\x09\x55\xfe\x9d\x6a\xb1\x24\x4f\x56\x28\x43\xe8\xdd\x87\x3a\xb7\x34\x6d\x61\xf4\xf2\xc8\xa0\xa3\xf3\xe1\x19\x5d\x7a\xa8\x28\x7c\xca\xaf\xf2\xab\x8c\xc4\xb8\x2f\x76\x15\x78\x3f\x59\xf3\x0b\x85\x5b\x6b\xae\x30\x84\x8c\x3c\x7c\x2b\x77\xc5\xf7\x8a\x5d\xb7\x6d\x53\x7e\x2b\xea\x3d\xfb\x52\x37\x15\x24\xde\x3b\x63\x46\x71\xc7\xa5\x5e\x4f\xdc\xdd\x85\x90\x64\x84\x08\xc5\x4f\xc8\x94\xd4\x52\x9d\x15\xb3\xf8\xfb\x2c\x2d\xf6\xb1\xad\xab\xdb\x3d\xac\xfc\xa1\xa2\x21\x23\x4b\x4f\xba\xf2\xb1\x38\x40\x09\xe5\xcd\x0d\x14\xdd\x2e\x23\x64\x90\x23\xa6\x5f\x9b\x76\xcb\x68\x55\xfe\xa4\x5d\x05\x4d\xbd\x65\x1d\x2d\x1f\x8a\x3b\x48\xf2\x7c\x33\x5b\xb1\xf9\x98\x8b\x69\x4a\x9e\x47\x71\x91\x92\x8c\x1c\x51\xa3\xe5\x0e\x19\xb7\xfd\x59\x6a\xc3\x46\x79\x6b\xb9\xfd\x93\xbe\x5c\x4a\x3e\x74\xb4\xec\x60\xe5\x2f\xaa\x02\x01\x00\xd8\xb6\x05\xfd\x0c\xde\xdf\x1a\x6e\xfb\x88\xe2\xb8\x3d\xa2\x63\xc2\xa8\x49\x8e\xc8\x7a\x1c\xa4\x96\x4e\x1a\x3d\xbf\xba\x17\x7e\xd0\xfa\x50\x5c\x57\xc0\x58\x71\xa0\xcc\xfb\xc1\x72\x85\xf7\xc6\x9e\x42\x60\x2c\x82\x9f\x8e\xeb\x61\xe4\xc7\x39\x5e\x2c\xb5\x18\xcf\x3d\xb2\x5e\x5a\x14\xce\x58\x89\x73\x1a\x07\x2d\xe7\x49\x46\xbc\x1f\xa5\x3e\xad\x97\x19\x21\xbc\x81\x75\x09\xe5\x70\x76\x4f\x52\x9b\x67\x07\x8b\xd5\x63\x7c\x0b\x6b\x90\x56\xdd\x73\x8b\xa9\xf7\xff\x26\x3f\x62\x45\x95\xc5\xeb\x85\x55\x53\x6f\xbb\x57\xbf\xd1\xbb\x15\xe3\xa3\xfe\x2b\xb7\x3c\xe9\x09\xef\x6f\x00\x00\x00\xff\xff\x80\x55\xe4\x84\xd5\x02\x00\x00"

func assetsTemplatesCmakeCmakelistspkgTxtTplBytes() ([]byte, error) {
	return bindataRead(
		_assetsTemplatesCmakeCmakelistspkgTxtTpl,
		"assets/templates/cmake/CMakeListsPkg.txt.tpl",
	)
}

func assetsTemplatesCmakeCmakelistspkgTxtTpl() (*asset, error) {
	bytes, err := assetsTemplatesCmakeCmakelistspkgTxtTplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/templates/cmake/CMakeListsPkg.txt.tpl", size: 725, mode: os.FileMode(420), modTime: time.Unix(1525779598, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsTemplatesCmakeCmakeliststargetTxt = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x74\x8f\xc1\xaa\xdb\x30\x10\x45\xd7\x4f\x5f\x21\xdc\x2e\xec\x42\xec\x07\xfd\x02\x47\x75\x1b\xd3\x24\x0e\xb2\x9b\x66\x37\x28\xf2\x38\x51\x63\x4b\xae\x2c\x53\x8a\xd0\xbf\x97\x84\x34\x50\xd2\xb7\x1a\xb8\xc3\x3d\x9c\xfb\x8e\x32\x33\x09\xda\x18\xd3\xcb\xb3\x50\x9a\x4c\xe8\x62\xb6\xc9\xbf\x16\xd0\x54\xd5\x9a\xad\xf2\x72\x0b\x9f\xcb\x75\x41\x23\xef\xbf\x97\x15\xec\xf2\x66\x15\x42\xe6\xfe\x16\x32\x39\x88\x0b\x66\x57\xca\x03\x92\xde\xb2\x28\x21\xb7\x0b\x83\xd2\x6a\x98\x07\xb0\xf8\x73\x56\x16\xdb\x78\x5f\xf0\xba\xac\xb6\xf4\x63\xfa\x9a\xbe\x26\x64\xb4\xe6\x07\x4a\x17\x7b\xdf\xab\xa3\x15\xf6\xf7\x42\x8b\x01\x43\xa0\x8c\xb2\xc3\x81\xe6\xf5\x26\x21\xa4\x53\x3d\xc6\x5f\xd6\xd5\x12\x78\xc1\xbe\xf1\xba\xa0\x35\x67\x37\xb3\xfa\xaa\xd6\xab\xe3\x62\x14\xee\x1c\x42\x36\x59\x99\x7d\x48\xe5\x38\x46\xff\x7f\xc8\x37\xf2\x28\x21\x27\xd4\x68\x85\x43\x10\xb6\x9d\x95\x36\x70\x17\x7a\x52\x23\x2f\x35\x67\x35\x7d\xef\x1f\x12\x81\xbc\x2c\xab\x9c\x7f\xa2\xde\x1f\x8d\xb0\x6d\x08\x09\x71\xc2\x9e\xd0\x81\x34\xc3\xa8\x7a\x84\x16\x3b\xa5\x95\x53\x46\x4f\xcf\x5b\x77\xbc\xdc\xe7\x4d\x41\x01\xf2\x3d\x07\xef\x3b\x2b\x06\xfc\x65\xec\x25\x04\x00\xea\xfd\x1d\xb2\xe8\x7a\x71\x9a\xae\x70\xa5\x65\x3f\xb7\x08\xad\xb2\x28\x9d\xb1\x0a\xa7\xf8\x9f\x5d\x51\x42\xfe\x04\x00\x00\xff\xff\xa2\x99\xd9\x7f\xde\x01\x00\x00"

func assetsTemplatesCmakeCmakeliststargetTxtBytes() ([]byte, error) {
	return bindataRead(
		_assetsTemplatesCmakeCmakeliststargetTxt,
		"assets/templates/cmake/CMakeListsTarget.txt",
	)
}

func assetsTemplatesCmakeCmakeliststargetTxt() (*asset, error) {
	bytes, err := assetsTemplatesCmakeCmakeliststargetTxtBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/templates/cmake/CMakeListsTarget.txt", size: 478, mode: os.FileMode(420), modTime: time.Unix(1523553906, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsTemplatesConfigLibsHelpTxt = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x64\x8f\x41\x6a\xc5\x30\x0c\x44\xf7\x3e\xc5\x90\xec\xff\x25\x7a\x85\x5e\x40\x91\x26\x89\x5a\x47\x0e\xb6\x43\x71\x4f\x5f\x3e\x94\xb4\xf0\x97\x42\xc3\x9b\x37\x33\xa6\xec\x4b\x95\xea\x6c\x13\xba\x6c\xd0\x12\x5d\x3c\x1a\x24\x67\x98\x57\x6a\xc7\x1d\xc1\x28\x17\x3c\x34\x5f\x46\x83\xc7\xf3\xae\x38\x6b\xf9\xa0\xf6\x07\xde\x77\x0e\x48\x25\x0e\x09\xd9\x68\x69\xc6\x32\xf0\xe5\x05\xa7\xe8\xa7\x6c\xac\x29\xa5\x19\x93\xf1\x64\x18\x43\x5f\x5b\xff\xbf\xb0\x96\x0a\x8a\xee\xbf\x02\x03\x7d\x97\x0e\x6f\xb7\xc2\x03\x6f\xe5\x38\x3d\x13\x6b\x96\xad\x41\x25\xb0\x30\xcd\x30\xae\x1e\xb4\x3f\xc2\xcd\x1d\xe8\x05\x7a\xb5\x5e\x0e\xff\x26\x96\xcb\xb3\x3d\x17\x28\x5b\xfb\x09\x00\x00\xff\xff\x81\xe5\x0f\xb8\x0e\x01\x00\x00"

func assetsTemplatesConfigLibsHelpTxtBytes() ([]byte, error) {
	return bindataRead(
		_assetsTemplatesConfigLibsHelpTxt,
		"assets/templates/config/libs-help.txt",
	)
}

func assetsTemplatesConfigLibsHelpTxt() (*asset, error) {
	bytes, err := assetsTemplatesConfigLibsHelpTxtBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/templates/config/libs-help.txt", size: 270, mode: os.FileMode(420), modTime: time.Unix(1523553906, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsTemplatesConfigLibsYml = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xac\x8e\x31\x0e\x02\x41\x08\x45\xfb\x3d\x05\x57\x70\x4b\xae\x62\x8c\x99\xdd\xf9\x2a\x09\xcb\x12\x46\x3d\xbf\x19\x9c\xd2\xc2\x44\x9b\x0f\x9f\xe2\xf1\x54\x96\x28\x21\x68\x3c\x11\xa9\x2c\x87\x3e\x89\x1e\xa1\xdc\x23\xcb\x13\xd1\x64\x37\xee\x4b\x1e\xbc\xdc\x6f\x9c\x99\x75\xdd\x37\x17\xc5\xf9\xa2\xe5\xda\x98\x8e\xa7\xe9\xcd\x9a\xff\xc3\xaa\x70\x58\x85\xad\xc3\xb2\xc2\x87\xa5\x95\x0d\xdf\xfc\xf8\x28\x58\xe1\xf3\xaf\x98\x57\x00\x00\x00\xff\xff\xe5\x89\x22\x3d\x3e\x01\x00\x00"

func assetsTemplatesConfigLibsYmlBytes() ([]byte, error) {
	return bindataRead(
		_assetsTemplatesConfigLibsYml,
		"assets/templates/config/libs.yml",
	)
}

func assetsTemplatesConfigLibsYml() (*asset, error) {
	bytes, err := assetsTemplatesConfigLibsYmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/templates/config/libs.yml", size: 318, mode: os.FileMode(420), modTime: time.Unix(1523553906, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsTemplatesConfigProjectAppYml = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x44\x8c\x41\x0a\xc3\x30\x0c\x04\xef\x7a\xc5\xbe\x43\x5f\x29\xa5\x6c\x63\x39\x98\xda\xb1\x51\x54\xfa\xfd\xe2\xa4\x34\x97\xd1\x30\x82\xe5\x18\x2a\xc0\xc6\x66\x7a\x50\x80\x92\x4c\x27\x04\x18\x95\x91\xbb\x37\xfd\x9b\x00\xd9\xd9\xec\xd3\xfd\xa5\x97\x8a\x04\x7d\xb5\xd8\xe7\x5a\xb2\xcc\x77\x0d\x45\x63\xd9\x04\x58\xdc\x18\x96\xe6\x0b\x47\x3b\x0d\x78\x76\x7a\xd2\xf3\xfc\xd2\xd2\xdb\x28\xd5\x1e\xb9\x72\xdd\x15\xb7\xbb\x7c\x03\x00\x00\xff\xff\x5f\x68\x86\xf6\xa3\x00\x00\x00"

func assetsTemplatesConfigProjectAppYmlBytes() ([]byte, error) {
	return bindataRead(
		_assetsTemplatesConfigProjectAppYml,
		"assets/templates/config/project-app.yml",
	)
}

func assetsTemplatesConfigProjectAppYml() (*asset, error) {
	bytes, err := assetsTemplatesConfigProjectAppYmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/templates/config/project-app.yml", size: 163, mode: os.FileMode(420), modTime: time.Unix(1523553906, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsTemplatesConfigProjectLibYml = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x64\x4e\x4b\xae\x83\x30\x0c\xdc\xe7\x14\x73\x02\xc4\xdb\x7a\xf7\xf6\xdc\x00\x3d\x3d\x19\xe2\xd0\xa8\x09\x41\x8e\x69\xaf\x5f\x85\x52\x36\xdd\x8c\x67\xc6\x9f\x71\x8a\x13\x39\x60\xe5\x2c\x74\xa0\x03\x1e\xa2\x35\x96\x95\xd0\x77\x7d\xf7\xe3\x00\xde\xed\x56\xb4\x12\xc6\x3f\x07\xa4\x38\xcb\x5a\xe5\x54\x5b\x62\x0b\x45\x33\x5d\xcc\x01\x41\x39\xcb\xb3\xe8\xfd\x1c\x9a\x0a\xab\x27\x8c\xbf\xc3\xd0\xe4\x5c\xf2\x16\x93\xfc\x87\xc4\xcb\xe7\x6a\xf4\x42\x0d\x9c\x33\xd6\x45\xac\xb6\xb7\xbc\x04\xde\x93\x11\x4c\xaa\xb5\x45\x15\x36\xf1\xad\x85\xc3\x7b\xb3\x2b\xe0\x28\xa7\xf5\x1d\xf2\x0a\x00\x00\xff\xff\xf6\x90\xae\xdf\xec\x00\x00\x00"

func assetsTemplatesConfigProjectLibYmlBytes() ([]byte, error) {
	return bindataRead(
		_assetsTemplatesConfigProjectLibYml,
		"assets/templates/config/project-lib.yml",
	)
}

func assetsTemplatesConfigProjectLibYml() (*asset, error) {
	bytes, err := assetsTemplatesConfigProjectLibYmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/templates/config/project-lib.yml", size: 236, mode: os.FileMode(420), modTime: time.Unix(1523553906, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsTemplatesConfigWioHelpTxt = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xec\x95\x51\x8f\xe4\x34\x0c\xc7\xdf\xe7\x53\x58\x9d\x17\x90\x96\x91\xb8\xc7\x7d\x3b\x74\xbb\x80\x58\x31\xa7\x3d\x38\x84\x10\x42\x6e\xe2\x4e\xcd\xa4\x71\x94\xa4\xdb\x2b\x9f\x1e\x39\x69\x67\x3a\xc7\x3d\x20\x84\xc4\x0b\xfb\xb4\x93\xa6\xf6\xdf\x7f\xff\xec\xee\xa1\xc1\x10\x1a\xc8\x78\x02\x23\x3e\x23\xfb\x04\x46\x22\x01\xfb\x4e\xe2\x80\x99\xc5\x03\xb6\x32\x66\xc8\x3d\x41\x88\xf2\x3b\x99\x7c\x80\x1f\x7a\x4e\x30\xb1\x73\x7a\x64\x47\x43\x40\x1f\xc8\x8c\x19\x5b\x47\x80\xde\xd6\x67\x2d\xc1\x18\x9c\xa0\x25\xbb\xdb\x43\x16\x40\x0f\x34\xb4\x64\x2d\x59\xb0\xf4\xc2\x86\x0e\xf0\x28\xce\xc9\xc4\xfe\x04\x18\x09\x92\x0c\x04\x67\x9a\x21\x08\xfb\x9c\x96\xdc\x66\x4c\x59\x06\xfe\x43\x6f\xcd\x32\x46\xc0\x10\x1c\x9b\x22\xef\x7e\xb7\x87\x2f\xe0\x31\xe2\x40\x93\xc4\x73\x2a\x61\xde\xbd\xf9\x2e\x41\x27\xf1\xe3\x74\x49\xa5\xd3\xbc\x16\x0b\x89\x32\x48\x07\x8e\xdb\x88\x91\x29\xa9\xc8\x31\x11\x4c\x3d\x79\x30\x62\xd9\x9f\x0e\xbb\x3d\x00\xfc\xc4\x02\x69\x0c\x41\x62\x5e\x1c\x6a\x30\xda\x91\xbd\x34\xa5\xde\xc6\x48\xc2\x06\x3e\x43\x0f\x12\xc8\x43\x92\x31\x1a\x82\xe3\xf1\x2d\xbc\x7e\xff\xac\xd9\xc9\x49\x18\xc8\x67\x08\x0e\xb3\x9a\xfb\xf9\xa1\x28\x7f\xbb\xfc\x04\x4e\xc5\xe3\x3c\x07\x52\x4d\xa6\xe7\x00\xb9\x47\x75\x9e\xd3\xb6\xe2\xbf\x98\xbb\xf4\x63\x0d\xac\x3d\x79\x61\x4b\xa9\x28\xbf\xa9\x0d\x8d\xa1\x94\x6a\xec\x1e\xa3\x9d\xd4\x2c\xd5\x6f\x64\x08\xec\x28\x96\x5b\xcb\x0f\x95\x33\x1c\x6e\x4b\x6f\x5e\xbf\x7f\x6e\x2e\x99\x0e\xbb\xdd\x6e\x0f\x4d\x38\x9f\xfe\x15\x86\x10\x02\x9a\x33\x9e\xa8\xd6\x6d\xd0\x97\x2a\x13\x59\x60\x0f\x92\x7b\x8a\xbb\x3d\x4c\x2c\x6b\x90\x54\xd5\xad\xf5\x82\xc7\xcc\x2f\xb4\xaa\x2d\x00\x2c\x11\x13\x98\x48\x98\xc9\x56\x37\x27\x9c\x4b\xd9\x59\x61\xc0\xa2\xd5\xb8\x51\x39\xe9\x1c\x4e\x8e\x52\x72\xb3\xb6\xe7\x1f\xc1\xb9\xa4\xfc\x1f\xcc\xff\x12\x4c\xad\xe0\x67\x19\x0b\x44\x29\x90\xe1\x6e\x86\x61\x74\x99\x83\x6e\xa8\x31\xf7\x12\xd3\x1d\x74\x9b\xee\x78\x0b\xad\x60\xb4\x69\x51\xbd\xc5\xf7\x52\x98\xb2\xa8\x42\x7a\x32\x67\xe0\xae\x58\xb0\xa9\x66\x56\xb3\x54\x25\x66\xd6\x55\x38\x71\xee\xb7\xd4\x03\x67\xbd\xd1\x92\xc2\xb2\x80\x5d\xb5\x7e\xdb\x29\x3c\x30\xa1\xcf\x37\x14\x69\xb6\x96\xd6\xca\x6d\x8d\x68\x28\x16\x4a\x3a\x87\xa7\x54\x99\xd0\x60\x77\xab\xc1\x90\x7b\x49\xb4\x3c\x66\xbf\xbe\xfd\x5b\x39\x28\x72\x33\x9e\x96\xe1\xcd\x18\x4f\x94\x53\x1d\x60\x54\xdc\x2b\xa0\x99\x52\x2e\xe0\x7b\x7b\x43\x89\x3e\x7b\xc1\xc8\x32\x26\xa5\x54\xef\xa4\xa5\x53\xbe\xe3\xd3\x18\x8b\x63\xe9\x70\x71\xbf\x0e\xde\x6e\x7f\xb5\x7f\x49\xa9\xc2\x23\x95\xb2\xf5\x9e\xa5\x8e\x3d\x81\xe5\xae\xa3\xa8\x99\x14\xb8\xa4\xc4\xd5\xb6\x6c\x71\xa8\xa5\x1d\xe0\xab\x59\x5f\xc3\xd1\x65\x10\xbf\x06\xde\xed\x4b\x17\xea\xbc\xdf\xc1\xd4\xb3\xe9\xf5\xa4\x26\xb0\xd0\xa2\x1a\x2f\xfe\x2a\xdf\xa8\x5d\x1e\xda\xb9\x88\x61\x5f\x5a\x56\x02\xa8\x03\x21\x8a\xc2\xb9\xf8\x65\x29\x90\xb7\xe4\x0d\xd3\xad\x69\x63\xa2\xa8\xdd\x5a\x56\x49\xdd\x57\xd7\xfd\xc3\x3e\x8b\xc6\xe5\xb8\x5d\x81\x6a\x80\x0e\xd1\xa5\xdd\x03\x7a\x3c\x51\x84\x76\x64\x97\xcb\x4b\xcb\xca\xd3\xea\x57\xab\x06\x3c\x17\x16\xd5\x9c\x32\x89\xed\xbc\x42\x5e\x04\x5f\x73\xd6\x19\xd5\x6e\xc3\x9b\x8d\xf0\x0b\xd0\x08\x8e\x53\x59\x35\x97\x97\xd0\xeb\xd7\x7a\xfe\x68\x76\xae\x6d\x91\x50\x1a\x5c\xb7\x18\x9a\xbe\x8a\xd0\x81\xfc\x3b\xdb\x52\xf5\x34\x85\xf8\x31\x3a\x2d\xfd\x0a\xc1\x9a\x4a\xcd\xd7\x87\x35\xee\x2a\xec\x00\xef\x04\x1e\x31\x82\x78\x37\x43\xf3\x35\xe7\x66\x9d\x7e\xb2\x7a\xbf\x2e\x58\x5d\x24\x21\x93\xad\x53\x15\xa9\xbb\xcd\xb1\x2d\x09\xa1\x8d\xe8\x4d\x7f\x19\xe8\xf5\x13\xb5\xce\x72\x17\x65\x28\x61\x6e\xe6\xa7\xa4\xf9\xb4\xea\x1b\x3a\xeb\x14\xf5\x04\x17\x62\xe6\xdd\x1e\x1e\x3e\xe0\x10\x5c\xf9\x38\x6c\x49\xba\x2f\x53\x39\xcc\x4f\xdc\xd6\x7f\xf5\x6f\x8c\xee\x1e\x9a\x1f\x9f\x9f\xbe\x6c\x2e\x67\x91\xba\x7b\x68\x9e\x1f\x1e\x37\x67\x37\xf2\xee\xe1\x97\xe6\x9b\x87\xa7\xa7\x63\x73\x07\xcd\xf7\xc7\x63\xf3\xeb\x35\xf4\xab\x4f\xc4\x7e\xd5\xfc\x19\x00\x00\xff\xff\x90\xda\x6a\xa6\x06\x0a\x00\x00"

func assetsTemplatesConfigWioHelpTxtBytes() ([]byte, error) {
	return bindataRead(
		_assetsTemplatesConfigWioHelpTxt,
		"assets/templates/config/wio-help.txt",
	)
}

func assetsTemplatesConfigWioHelpTxt() (*asset, error) {
	bytes, err := assetsTemplatesConfigWioHelpTxtBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/templates/config/wio-help.txt", size: 2566, mode: os.FileMode(420), modTime: time.Unix(1525780631, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsTemplatesGitignoreGitignoreClion = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xd2\x2b\xcf\xcc\xd7\xe7\x72\xf6\x4d\xcc\x4e\xf5\xc9\x2c\x2e\x29\x0e\x28\xca\x2c\x4b\x2c\x49\xd5\x2b\xa9\x28\xe1\xd2\xcb\x4c\x49\x4d\xd4\xe7\x4a\xce\x4d\xcc\x4e\xd5\x4d\x2a\xcd\xcc\x49\xd1\x4d\x49\x4d\x2a\x4d\xd7\xe7\x02\x04\x00\x00\xff\xff\x88\xc9\x2b\x5b\x36\x00\x00\x00"

func assetsTemplatesGitignoreGitignoreClionBytes() ([]byte, error) {
	return bindataRead(
		_assetsTemplatesGitignoreGitignoreClion,
		"assets/templates/gitignore/.gitignore-clion",
	)
}

func assetsTemplatesGitignoreGitignoreClion() (*asset, error) {
	bytes, err := assetsTemplatesGitignoreGitignoreClionBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/templates/gitignore/.gitignore-clion", size: 54, mode: os.FileMode(420), modTime: time.Unix(1523553906, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsTemplatesGitignoreGitignoreGeneral = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xd2\x2b\xcf\xcc\xd7\xe7\x02\x04\x00\x00\xff\xff\xdd\x1c\xfa\x30\x06\x00\x00\x00"

func assetsTemplatesGitignoreGitignoreGeneralBytes() ([]byte, error) {
	return bindataRead(
		_assetsTemplatesGitignoreGitignoreGeneral,
		"assets/templates/gitignore/.gitignore-general",
	)
}

func assetsTemplatesGitignoreGitignoreGeneral() (*asset, error) {
	bytes, err := assetsTemplatesGitignoreGitignoreGeneralBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/templates/gitignore/.gitignore-general", size: 6, mode: os.FileMode(420), modTime: time.Unix(1523553906, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsTemplatesIdeClionAppCmakelistsTxtTpl = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xb4\x92\xbb\x6e\xf3\x20\x18\x86\x77\xae\x02\x45\x1e\xec\x21\xff\x3d\xf0\x63\x5a\xb9\x01\x13\x61\x3b\x4d\x27\x44\xec\x4f\x15\x8d\x0f\xa9\x0d\x51\x24\xe4\x7b\xaf\x9c\x74\x4e\x86\x2a\x2b\xef\xe1\x41\xaf\xbe\x09\x5c\xbc\x63\x0a\x87\x50\x77\xe6\x08\xeb\x33\x8c\x93\x1d\xfa\x79\x4e\xd0\x22\xe5\x44\x30\x1c\xc2\x69\x1c\xbe\xa0\x76\xeb\xde\x74\xb0\x48\xe8\x6a\xd6\x9d\xed\x6d\xe7\x3b\x3d\xc2\xb7\xb7\x23\x34\x4b\x53\x91\xc9\x1c\x47\x61\xc7\xd4\xe2\xfb\x0d\xc6\x51\x58\x9a\x66\x4c\x31\xdd\xef\x31\x29\x44\x82\x90\xed\xeb\xd6\x37\x10\xaf\xa8\x30\x47\xe0\x76\x72\xd3\x76\xb4\x67\xe3\xe0\x9f\xbb\xb8\x55\x82\x90\x69\x1a\x5d\xfb\xc9\x0d\x9d\x76\x66\xfc\x04\x17\x23\x8c\x31\x7e\xa7\xb2\x20\xfa\x7f\x95\xf1\x14\x13\xce\xaf\x6f\x54\x0a\x41\xf2\x14\x47\xe1\xa6\x52\x91\xce\xf8\xe0\x6d\xdb\xdc\x22\x52\x6d\xb2\xfc\x55\xa7\x99\x62\xb4\x94\xea\x03\x47\x81\x0a\xb2\x61\x9a\x56\x4a\xb1\xbc\xd4\x85\xac\x14\x65\x8b\x61\x46\x8f\xd0\x94\x33\x92\xdf\x47\xd7\x2d\x98\xfe\x09\xe8\x6a\x9b\x92\x92\x69\xc2\xf9\x7d\xbe\x3f\x35\xc6\xc1\x53\x3e\xc0\x25\x79\xb0\xbb\x3f\xb5\x83\xf9\xc3\xf0\x70\x81\xda\x3b\x73\x68\x21\x8e\xc2\x56\xc9\x37\x46\x4b\x7d\x3b\xa0\x28\x14\x8a\xea\x97\x8c\xb3\x62\x4e\xd0\x4f\x00\x00\x00\xff\xff\xf6\xa5\x23\x29\xbe\x02\x00\x00"

func assetsTemplatesIdeClionAppCmakelistsTxtTplBytes() ([]byte, error) {
	return bindataRead(
		_assetsTemplatesIdeClionAppCmakelistsTxtTpl,
		"assets/templates/ide/clion/app/CMakeLists.txt.tpl",
	)
}

func assetsTemplatesIdeClionAppCmakelistsTxtTpl() (*asset, error) {
	bytes, err := assetsTemplatesIdeClionAppCmakelistsTxtTplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/templates/ide/clion/app/CMakeLists.txt.tpl", size: 702, mode: os.FileMode(420), modTime: time.Unix(1523553906, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsTemplatesIdeClionAppCmakelistsprivateTxtTpl = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x84\x52\xed\x6e\x9c\x30\x10\xfc\xef\xa7\x58\x51\x21\x01\x11\x97\x67\x20\x40\x22\x54\x2e\x54\x98\xa8\xf9\x67\x39\xb6\x39\xac\x52\x40\x36\xd7\xde\x09\xf9\xdd\x2b\xdf\xa9\x3d\x3e\xd4\xdc\x1f\xcb\xb3\xbb\xb3\x33\xbb\x5a\x2d\x46\xef\x7b\x5c\xe0\x88\xc4\xfb\x04\x86\xf3\xd8\xf4\x1d\x38\xd3\xf4\x9b\xf5\x9a\x86\x03\x1d\x1b\x63\x1e\x2f\xe0\xfa\xee\x86\xb3\xe3\x23\x84\xd3\xca\x8b\xf7\xd1\xd7\x94\xc4\x24\x2e\xf6\xdf\xb2\x3c\x2d\x81\xfe\x52\xe1\x81\x31\x7f\x9e\x7d\x7f\x5f\xe5\x1f\x1e\xd6\xf9\xe7\x3c\x7a\xc1\x24\xc9\x70\x55\x66\x4f\x6f\x55\x56\xbc\x5a\x03\xec\x27\xfd\x21\x42\x76\x3a\x85\x75\x4b\x0f\xda\x18\x67\xc1\xfb\x9c\x35\xe3\xd8\x01\x6f\x5a\xb8\x8a\x5e\x93\xa8\x4c\x60\x2e\xa0\x47\xda\x71\xaa\xb8\x31\x3e\x42\x2e\x70\x51\x87\x5a\x50\xc5\x1a\x34\x4d\x94\x73\xc2\x45\x2d\x3b\x39\xca\xbe\xd3\xde\x34\x1d\xb5\x50\xe1\x2d\x64\x8c\x6f\x0c\x72\x41\x74\x1c\xa1\x2f\x40\x39\x87\x2b\x19\xec\xf2\x34\xd4\xbd\x02\xbb\x38\x60\xbd\x12\xc8\xbd\xfc\x6f\xed\x65\xc7\xda\x23\x17\x84\x4b\x25\xd8\xd8\x2b\x29\xb4\xf7\x6f\xfb\x96\x61\x67\x30\xe6\x5e\xe5\x47\x7f\xb1\xef\xdc\xb7\x42\xdb\x16\xc6\x46\x80\x9d\x02\x5a\xf9\xa1\xa8\xed\x84\x5c\xfb\xff\x6b\xeb\xff\x6a\xb6\xe8\x7a\x13\x73\x29\x54\xcb\x56\x78\x2f\x79\xf1\x44\xca\x34\x7e\x2b\x71\x0a\xb8\x8c\xc9\x73\x96\xa7\x18\x01\x00\x38\x5a\xb1\xc7\x60\xc7\x86\xc1\x59\x60\xb6\x84\x73\x14\x6c\xeb\x83\x0d\x25\x58\xb3\x76\xcd\x12\xad\xe0\xb6\x5f\xb3\x09\x6c\x23\xc3\x60\x2f\xfe\x4f\x00\x00\x00\xff\xff\x38\x72\x86\x48\x29\x03\x00\x00"

func assetsTemplatesIdeClionAppCmakelistsprivateTxtTplBytes() ([]byte, error) {
	return bindataRead(
		_assetsTemplatesIdeClionAppCmakelistsprivateTxtTpl,
		"assets/templates/ide/clion/app/CMakeListsPrivate.txt.tpl",
	)
}

func assetsTemplatesIdeClionAppCmakelistsprivateTxtTpl() (*asset, error) {
	bytes, err := assetsTemplatesIdeClionAppCmakelistsprivateTxtTplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/templates/ide/clion/app/CMakeListsPrivate.txt.tpl", size: 809, mode: os.FileMode(420), modTime: time.Unix(1523553906, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsTemplatesIdeClionLibCmakelistsTxtTpl = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xb4\x92\xbb\x6e\xf3\x20\x18\x86\x77\xae\x02\x45\x1e\xec\x21\xff\x3d\xf0\x63\x5a\xb9\x01\x13\x61\x3b\x4d\x27\x44\xec\x4f\x15\x8d\x0f\xa9\x0d\x51\x24\xe4\x7b\xaf\x9c\x74\x4e\x86\x2a\x2b\xef\xe1\x41\xaf\xbe\x09\x5c\xbc\x63\x0a\x87\x50\x77\xe6\x08\xeb\x33\x8c\x93\x1d\xfa\x79\x4e\xd0\x22\xe5\x44\x30\x1c\xc2\x69\x1c\xbe\xa0\x76\xeb\xde\x74\xb0\x48\xe8\x6a\xd6\x9d\xed\x6d\xe7\x3b\x3d\xc2\xb7\xb7\x23\x34\x4b\x53\x91\xc9\x1c\x47\x61\xc7\xd4\xe2\xfb\x0d\xc6\x51\x58\x9a\x66\x4c\x31\xdd\xef\x31\x29\x44\x82\x90\xed\xeb\xd6\x37\x10\xaf\xa8\x30\x47\xe0\x76\x72\xd3\x76\xb4\x67\xe3\xe0\x9f\xbb\xb8\x55\x82\x90\x69\x1a\x5d\xfb\xc9\x0d\x9d\x76\x66\xfc\x04\x17\x23\x8c\x31\x7e\xa7\xb2\x20\xfa\x7f\x95\xf1\x14\x13\xce\xaf\x6f\x54\x0a\x41\xf2\x14\x47\xe1\xa6\x52\x91\xce\xf8\xe0\x6d\xdb\xdc\x22\x52\x6d\xb2\xfc\x55\xa7\x99\x62\xb4\x94\xea\x03\x47\x81\x0a\xb2\x61\x9a\x56\x4a\xb1\xbc\xd4\x85\xac\x14\x65\x8b\x61\x46\x8f\xd0\x94\x33\x92\xdf\x47\xd7\x2d\x98\xfe\x09\xe8\x6a\x9b\x92\x92\x69\xc2\xf9\x7d\xbe\x3f\x35\xc6\xc1\x53\x3e\xc0\x25\x79\xb0\xbb\x3f\xb5\x83\xf9\xc3\xf0\x70\x81\xda\x3b\x73\x68\x21\x8e\xc2\x56\xc9\x37\x46\x4b\x7d\x3b\xa0\x28\x14\x8a\xea\x97\x8c\xb3\x62\x4e\xd0\x4f\x00\x00\x00\xff\xff\xf6\xa5\x23\x29\xbe\x02\x00\x00"

func assetsTemplatesIdeClionLibCmakelistsTxtTplBytes() ([]byte, error) {
	return bindataRead(
		_assetsTemplatesIdeClionLibCmakelistsTxtTpl,
		"assets/templates/ide/clion/lib/CMakeLists.txt.tpl",
	)
}

func assetsTemplatesIdeClionLibCmakelistsTxtTpl() (*asset, error) {
	bytes, err := assetsTemplatesIdeClionLibCmakelistsTxtTplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/templates/ide/clion/lib/CMakeLists.txt.tpl", size: 702, mode: os.FileMode(420), modTime: time.Unix(1523553906, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsTemplatesIdeClionLibCmakelistsprivateTxtTpl = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x84\x52\xed\x6e\x9c\x30\x10\xfc\xef\xa7\x58\x51\x21\x01\x11\x97\x67\x20\x40\x22\x54\x2e\x54\x98\xa8\xf9\x67\x39\xb6\x39\xac\x52\x40\x36\xd7\xde\x09\xf9\xdd\x2b\xdf\xa9\x3d\x3e\xd4\xdc\x1f\xcb\xb3\xbb\xb3\x33\xbb\x5a\x2d\x46\xef\x7b\x5c\xe0\x88\xc4\xfb\x04\x86\xf3\xd8\xf4\x1d\x38\xd3\xf4\x9b\xf5\x9a\x86\x03\x1d\x1b\x63\x1e\x2f\xe0\xfa\xee\x86\xb3\xe3\x23\x84\xd3\xca\x8b\xf7\xd1\xd7\x94\xc4\x24\x2e\xf6\xdf\xb2\x3c\x2d\x81\xfe\x52\xe1\x81\x31\x7f\x9e\x7d\x7f\x5f\xe5\x1f\x1e\xd6\xf9\xe7\x3c\x7a\xc1\x24\xc9\x70\x55\x66\x4f\x6f\x55\x56\xbc\x5a\x03\xec\x27\xfd\x21\x42\x76\x3a\x85\x75\x4b\x0f\xda\x18\x67\xc1\xfb\x9c\x35\xe3\xd8\x01\x6f\x5a\xb8\x8a\x5e\x93\xa8\x4c\x60\x2e\xa0\x47\xda\x71\xaa\xb8\x31\x3e\x42\x2e\x70\x51\x87\x5a\x50\xc5\x1a\x34\x4d\x94\x73\xc2\x45\x2d\x3b\x39\xca\xbe\xd3\xde\x34\x1d\xb5\x50\xe1\x2d\x64\x8c\x6f\x0c\x72\x41\x74\x1c\xa1\x2f\x40\x39\x87\x2b\x19\xec\xf2\x34\xd4\xbd\x02\xbb\x38\x60\xbd\x12\xc8\xbd\xfc\x6f\xed\x65\xc7\xda\x23\x17\x84\x4b\x25\xd8\xd8\x2b\x29\xb4\xf7\x6f\xfb\x96\x61\x67\x30\xe6\x5e\xe5\x47\x7f\xb1\xef\xdc\xb7\x42\xdb\x16\xc6\x46\x80\x9d\x02\x5a\xf9\xa1\xa8\xed\x84\x5c\xfb\xff\x6b\xeb\xff\x6a\xb6\xe8\x7a\x13\x73\x29\x54\xcb\x56\x78\x2f\x79\xf1\x44\xca\x34\x7e\x2b\x71\x0a\xb8\x8c\xc9\x73\x96\xa7\x18\x01\x00\x38\x5a\xb1\xc7\x60\xc7\x86\xc1\x59\x60\xb6\x84\x73\x14\x6c\xeb\x83\x0d\x25\x58\xb3\x76\xcd\x12\xad\xe0\xb6\x5f\xb3\x09\x6c\x23\xc3\x60\x2f\xfe\x4f\x00\x00\x00\xff\xff\x38\x72\x86\x48\x29\x03\x00\x00"

func assetsTemplatesIdeClionLibCmakelistsprivateTxtTplBytes() ([]byte, error) {
	return bindataRead(
		_assetsTemplatesIdeClionLibCmakelistsprivateTxtTpl,
		"assets/templates/ide/clion/lib/CMakeListsPrivate.txt.tpl",
	)
}

func assetsTemplatesIdeClionLibCmakelistsprivateTxtTpl() (*asset, error) {
	bytes, err := assetsTemplatesIdeClionLibCmakelistsprivateTxtTplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/templates/ide/clion/lib/CMakeListsPrivate.txt.tpl", size: 809, mode: os.FileMode(420), modTime: time.Unix(1523553906, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsTemplatesSampleProgramAppMainCpp = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x52\xce\xcc\x4b\xce\x29\x4d\x49\x55\x50\x72\xce\x2f\x4e\xd4\x0f\x0a\x09\xd1\xcb\xc8\x50\xe2\x42\x13\xf6\x2f\x2d\x29\x28\x2d\x09\xc8\xcc\x03\x4b\x72\xc1\xb9\x0a\x39\xa9\x29\x01\x99\x79\x1a\x4e\xf9\x89\x45\x29\x56\x56\x3e\xae\x2e\x9a\xd6\x5c\x5c\x65\xf9\x99\x29\x0a\xc5\xa9\x25\xa5\x05\x1a\x9a\x0a\xd5\x5c\x0a\x0a\x0a\x0a\x41\x21\x21\x56\x56\x49\xa9\xe9\x99\x79\x1a\x9a\xd6\x5c\xb5\x50\x35\x39\xf9\xf9\x08\x25\x10\xa3\xf4\xf2\xc1\x2a\x40\x02\x29\xa9\x39\x89\x95\x1a\xa6\x06\x50\x2e\x4c\x3e\x2d\x0d\x5d\x81\x01\xd8\x48\x40\x00\x00\x00\xff\xff\xae\x1c\x30\xf2\xca\x00\x00\x00"

func assetsTemplatesSampleProgramAppMainCppBytes() ([]byte, error) {
	return bindataRead(
		_assetsTemplatesSampleProgramAppMainCpp,
		"assets/templates/sample-program/app/main.cpp",
	)
}

func assetsTemplatesSampleProgramAppMainCpp() (*asset, error) {
	bytes, err := assetsTemplatesSampleProgramAppMainCppBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/templates/sample-program/app/main.cpp", size: 202, mode: os.FileMode(420), modTime: time.Unix(1523553906, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsTemplatesSampleProgramLibLibCpp = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x01\x00\x00\xff\xff\x00\x00\x00\x00\x00\x00\x00\x00"

func assetsTemplatesSampleProgramLibLibCppBytes() ([]byte, error) {
	return bindataRead(
		_assetsTemplatesSampleProgramLibLibCpp,
		"assets/templates/sample-program/lib/lib.cpp",
	)
}

func assetsTemplatesSampleProgramLibLibCpp() (*asset, error) {
	bytes, err := assetsTemplatesSampleProgramLibLibCppBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/templates/sample-program/lib/lib.cpp", size: 0, mode: os.FileMode(420), modTime: time.Unix(1523553906, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsTemplatesSampleProgramLibLibH = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x01\x00\x00\xff\xff\x00\x00\x00\x00\x00\x00\x00\x00"

func assetsTemplatesSampleProgramLibLibHBytes() ([]byte, error) {
	return bindataRead(
		_assetsTemplatesSampleProgramLibLibH,
		"assets/templates/sample-program/lib/lib.h",
	)
}

func assetsTemplatesSampleProgramLibLibH() (*asset, error) {
	bytes, err := assetsTemplatesSampleProgramLibLibHBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/templates/sample-program/lib/lib.h", size: 0, mode: os.FileMode(420), modTime: time.Unix(1523553906, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsTemplatesSampleProgramLibMainCpp = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x01\x00\x00\xff\xff\x00\x00\x00\x00\x00\x00\x00\x00"

func assetsTemplatesSampleProgramLibMainCppBytes() ([]byte, error) {
	return bindataRead(
		_assetsTemplatesSampleProgramLibMainCpp,
		"assets/templates/sample-program/lib/main.cpp",
	)
}

func assetsTemplatesSampleProgramLibMainCpp() (*asset, error) {
	bytes, err := assetsTemplatesSampleProgramLibMainCppBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/templates/sample-program/lib/main.cpp", size: 0, mode: os.FileMode(420), modTime: time.Unix(1523553906, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"assets/config/create_paths.json": assetsConfigCreate_pathsJson,
	"assets/config/defaults.yml": assetsConfigDefaultsYml,
	"assets/config/paths.yml": assetsConfigPathsYml,
	"assets/config/update_paths.json": assetsConfigUpdate_pathsJson,
	"assets/templates/cmake/CMakeListsApp.txt.tpl": assetsTemplatesCmakeCmakelistsappTxtTpl,
	"assets/templates/cmake/CMakeListsPkg.txt.tpl": assetsTemplatesCmakeCmakelistspkgTxtTpl,
	"assets/templates/cmake/CMakeListsTarget.txt": assetsTemplatesCmakeCmakeliststargetTxt,
	"assets/templates/config/libs-help.txt": assetsTemplatesConfigLibsHelpTxt,
	"assets/templates/config/libs.yml": assetsTemplatesConfigLibsYml,
	"assets/templates/config/project-app.yml": assetsTemplatesConfigProjectAppYml,
	"assets/templates/config/project-lib.yml": assetsTemplatesConfigProjectLibYml,
	"assets/templates/config/wio-help.txt": assetsTemplatesConfigWioHelpTxt,
	"assets/templates/gitignore/.gitignore-clion": assetsTemplatesGitignoreGitignoreClion,
	"assets/templates/gitignore/.gitignore-general": assetsTemplatesGitignoreGitignoreGeneral,
	"assets/templates/ide/clion/app/CMakeLists.txt.tpl": assetsTemplatesIdeClionAppCmakelistsTxtTpl,
	"assets/templates/ide/clion/app/CMakeListsPrivate.txt.tpl": assetsTemplatesIdeClionAppCmakelistsprivateTxtTpl,
	"assets/templates/ide/clion/lib/CMakeLists.txt.tpl": assetsTemplatesIdeClionLibCmakelistsTxtTpl,
	"assets/templates/ide/clion/lib/CMakeListsPrivate.txt.tpl": assetsTemplatesIdeClionLibCmakelistsprivateTxtTpl,
	"assets/templates/sample-program/app/main.cpp": assetsTemplatesSampleProgramAppMainCpp,
	"assets/templates/sample-program/lib/lib.cpp": assetsTemplatesSampleProgramLibLibCpp,
	"assets/templates/sample-program/lib/lib.h": assetsTemplatesSampleProgramLibLibH,
	"assets/templates/sample-program/lib/main.cpp": assetsTemplatesSampleProgramLibMainCpp,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}
var _bintree = &bintree{nil, map[string]*bintree{
	"assets": &bintree{nil, map[string]*bintree{
		"config": &bintree{nil, map[string]*bintree{
			"create_paths.json": &bintree{assetsConfigCreate_pathsJson, map[string]*bintree{}},
			"defaults.yml": &bintree{assetsConfigDefaultsYml, map[string]*bintree{}},
			"paths.yml": &bintree{assetsConfigPathsYml, map[string]*bintree{}},
			"update_paths.json": &bintree{assetsConfigUpdate_pathsJson, map[string]*bintree{}},
		}},
		"templates": &bintree{nil, map[string]*bintree{
			"cmake": &bintree{nil, map[string]*bintree{
				"CMakeListsApp.txt.tpl": &bintree{assetsTemplatesCmakeCmakelistsappTxtTpl, map[string]*bintree{}},
				"CMakeListsPkg.txt.tpl": &bintree{assetsTemplatesCmakeCmakelistspkgTxtTpl, map[string]*bintree{}},
				"CMakeListsTarget.txt": &bintree{assetsTemplatesCmakeCmakeliststargetTxt, map[string]*bintree{}},
			}},
			"config": &bintree{nil, map[string]*bintree{
				"libs-help.txt": &bintree{assetsTemplatesConfigLibsHelpTxt, map[string]*bintree{}},
				"libs.yml": &bintree{assetsTemplatesConfigLibsYml, map[string]*bintree{}},
				"project-app.yml": &bintree{assetsTemplatesConfigProjectAppYml, map[string]*bintree{}},
				"project-lib.yml": &bintree{assetsTemplatesConfigProjectLibYml, map[string]*bintree{}},
				"wio-help.txt": &bintree{assetsTemplatesConfigWioHelpTxt, map[string]*bintree{}},
			}},
			"gitignore": &bintree{nil, map[string]*bintree{
				".gitignore-clion": &bintree{assetsTemplatesGitignoreGitignoreClion, map[string]*bintree{}},
				".gitignore-general": &bintree{assetsTemplatesGitignoreGitignoreGeneral, map[string]*bintree{}},
			}},
			"ide": &bintree{nil, map[string]*bintree{
				"clion": &bintree{nil, map[string]*bintree{
					"app": &bintree{nil, map[string]*bintree{
						"CMakeLists.txt.tpl": &bintree{assetsTemplatesIdeClionAppCmakelistsTxtTpl, map[string]*bintree{}},
						"CMakeListsPrivate.txt.tpl": &bintree{assetsTemplatesIdeClionAppCmakelistsprivateTxtTpl, map[string]*bintree{}},
					}},
					"lib": &bintree{nil, map[string]*bintree{
						"CMakeLists.txt.tpl": &bintree{assetsTemplatesIdeClionLibCmakelistsTxtTpl, map[string]*bintree{}},
						"CMakeListsPrivate.txt.tpl": &bintree{assetsTemplatesIdeClionLibCmakelistsprivateTxtTpl, map[string]*bintree{}},
					}},
				}},
			}},
			"sample-program": &bintree{nil, map[string]*bintree{
				"app": &bintree{nil, map[string]*bintree{
					"main.cpp": &bintree{assetsTemplatesSampleProgramAppMainCpp, map[string]*bintree{}},
				}},
				"lib": &bintree{nil, map[string]*bintree{
					"lib.cpp": &bintree{assetsTemplatesSampleProgramLibLibCpp, map[string]*bintree{}},
					"lib.h": &bintree{assetsTemplatesSampleProgramLibLibH, map[string]*bintree{}},
					"main.cpp": &bintree{assetsTemplatesSampleProgramLibMainCpp, map[string]*bintree{}},
				}},
			}},
		}},
	}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}

