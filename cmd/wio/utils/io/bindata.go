// Code generated by go-bindata.
// sources:
// ../../../../assets/config/create_paths.json
// ../../../../assets/config/defaults.yml
// ../../../../assets/config/paths.yml
// ../../../../assets/config/update_paths.json
// ../../../../assets/templates/cmake/CMakeListsApp.txt.tpl
// ../../../../assets/templates/cmake/CMakeListsPkg.txt.tpl
// ../../../../assets/templates/cmake/dependencies.txt
// ../../../../assets/templates/config/app-helper.txt
// ../../../../assets/templates/config/dependencies-helper.txt
// ../../../../assets/templates/config/pkg-helper.txt
// ../../../../assets/templates/config/project-app.yml
// ../../../../assets/templates/config/project-pkg.yml
// ../../../../assets/templates/config/targets-helper.txt
// ../../../../assets/templates/gitignore/.gitignore-clion
// ../../../../assets/templates/gitignore/.gitignore-general
// ../../../../assets/templates/ide/clion/app/CMakeLists.txt.tpl
// ../../../../assets/templates/ide/clion/app/CMakeListsPrivate.txt.tpl
// ../../../../assets/templates/ide/clion/lib/CMakeLists.txt.tpl
// ../../../../assets/templates/ide/clion/lib/CMakeListsPrivate.txt.tpl
// ../../../../assets/templates/sample-program/app/main.cpp
// ../../../../assets/templates/sample-program/lib/lib.cpp
// ../../../../assets/templates/sample-program/lib/lib.h
// ../../../../assets/templates/sample-program/lib/main.cpp
// DO NOT EDIT!

package io

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data, name string) ([]byte, error) {
	gz, err := gzip.NewReader(strings.NewReader(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _assetsConfigCreate_pathsJson = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xcc\xd4\x3f\x6b\xf3\x30\x10\x06\xf0\xdd\x9f\xe2\xd0\x1c\x5b\x7b\xd6\x77\x7b\x69\x49\x08\xdd\x4a\x07\x45\xbe\x38\xd7\xca\xd6\x21\x5d\xd2\x16\xe3\xef\x5e\x6c\x68\xd3\xa4\x21\xce\x9f\x26\xee\x60\x63\xc4\x73\xe6\x87\x84\x9e\x3a\x01\x50\x6c\x64\x19\xd5\x18\x1e\x13\x00\x80\xba\x7b\x03\x28\xca\xd5\x18\x94\x61\x4e\x0b\xac\xd4\xe8\x73\x39\x06\xdb\xae\x0b\x96\xec\x8c\x60\xd4\xd6\x57\x0b\x2a\x34\x07\xff\x8c\x56\x52\xc3\x9c\xbd\x97\x6e\x33\x90\x63\xfb\x73\x55\xd7\xd3\xd9\xff\x74\x36\x99\x3c\x34\x8d\x7e\x25\xbf\x1d\xf2\x6b\x0c\x81\x72\x54\x63\x58\x18\x17\xb1\x5b\x6f\x46\xe7\x89\xa2\x29\xd9\x61\xca\xc1\x17\xc1\x94\xda\x30\xeb\xd2\x50\x95\x59\xe6\xc3\xac\x18\xec\x9e\xe4\xaf\xda\x0a\x12\x2a\x2a\x1f\x50\x67\x5f\x9f\xed\x08\x06\xd3\xb3\x67\x9b\xfc\xd9\x34\xeb\xc8\x9f\x8c\xdb\x19\x1a\x88\x46\x39\xea\x2e\xd3\x1d\xe7\xbf\x7b\xf3\x82\x77\x14\x25\x66\xf2\x26\x99\x70\xcf\xde\x6d\xe7\x6f\x8e\x9c\x06\x5a\x1b\xc1\x53\xad\xdf\xc6\xf6\x92\x25\xac\x0e\x89\x1d\xcd\x4f\xbb\xba\x8e\xe6\xd7\xbd\xba\xfd\xa2\x9d\xab\xeb\x68\xde\x3e\xd9\xf2\xb0\x89\x2a\xeb\x56\x39\xee\x46\x6f\x21\x3b\xaa\x53\x7e\x04\xaf\x2d\x3b\xae\xee\x04\xa3\x5c\xd6\x77\xfd\xb8\xc1\xfa\xae\xa5\xfd\xd1\xbe\x3b\x86\xb6\xa9\x92\xf6\x3c\x07\xe8\xbb\x4b\x90\x57\xef\xbb\x04\xe0\x29\x69\x92\x8f\x00\x00\x00\xff\xff\x0a\x01\x85\x67\xbf\x08\x00\x00"

func assetsConfigCreate_pathsJsonBytes() ([]byte, error) {
	return bindataRead(
		_assetsConfigCreate_pathsJson,
		"assets/config/create_paths.json",
	)
}

func assetsConfigCreate_pathsJson() (*asset, error) {
	bytes, err := assetsConfigCreate_pathsJsonBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/config/create_paths.json", size: 2239, mode: os.FileMode(420), modTime: time.Unix(1523554059, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsConfigDefaultsYml = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x6c\xcf\x31\x6e\xe4\x30\x0c\x85\xe1\x5e\xa7\x78\xa0\xfb\xc1\x6c\xeb\x53\x6c\x91\x0b\xd0\x12\x35\x16\x22\x91\x06\x25\x39\xc8\xed\x03\x27\x93\xa9\xc2\x96\x1f\x7e\xe0\x2d\x78\xdb\x4b\x47\x34\x1d\x5c\xb4\x83\x6b\xc5\xd8\x05\x49\x32\xcf\x3a\x70\x72\x9d\xd2\x91\xcd\x11\xad\x35\xd6\x54\x8b\x0a\xd8\x1f\xb3\x89\x8e\x1e\x16\xfc\xe7\xb1\xff\x3a\x76\x81\xda\x40\xd1\x58\x67\x92\x84\x4d\x22\xcf\x2e\x57\xf3\xf3\xfb\xdb\x38\xee\x57\xa1\x1f\x12\x4b\x2e\x31\x84\x92\x64\x05\xa9\xa9\x50\xc8\xce\x4d\x3e\xcc\xdf\x57\x50\xb4\xce\x14\x8e\xca\x23\x9b\xb7\x15\xc4\xa7\x53\x38\xcc\xc7\x8b\x9f\xe2\xbd\x98\xae\xa0\xfb\xed\x7e\xfb\x47\x61\x33\xf6\xb4\x82\xa6\x1a\x85\x6d\xb0\x3f\xe4\xd2\xcf\x35\x84\xe7\x2d\xd8\x66\xa9\x09\x3f\x20\xcc\x3f\xe1\x82\x79\x54\xe3\x97\xfa\x0a\x00\x00\xff\xff\x7f\xb1\x41\xe6\x2b\x01\x00\x00"

func assetsConfigDefaultsYmlBytes() ([]byte, error) {
	return bindataRead(
		_assetsConfigDefaultsYml,
		"assets/config/defaults.yml",
	)
}

func assetsConfigDefaultsYml() (*asset, error) {
	bytes, err := assetsConfigDefaultsYmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/config/defaults.yml", size: 299, mode: os.FileMode(420), modTime: time.Unix(1526665501, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsConfigPathsYml = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x4a\x2c\x4a\x29\xcd\xcc\xcb\xd7\x2d\x4e\xc9\xd6\x2d\x48\x2c\xc9\xb0\x52\x50\x52\xe2\x4a\xce\x2f\x4e\x44\x15\x49\x2c\x2b\x42\xe2\x14\xe5\x22\x38\xb9\x89\xd9\xa9\x48\x3a\x51\xb9\x80\x00\x00\x00\xff\xff\x60\xc2\x95\x1d\x5e\x00\x00\x00"

func assetsConfigPathsYmlBytes() ([]byte, error) {
	return bindataRead(
		_assetsConfigPathsYml,
		"assets/config/paths.yml",
	)
}

func assetsConfigPathsYml() (*asset, error) {
	bytes, err := assetsConfigPathsYmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/config/paths.yml", size: 94, mode: os.FileMode(420), modTime: time.Unix(1521752364, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsConfigUpdate_pathsJson = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xcc\xd3\xc1\x4a\xc4\x30\x10\x06\xe0\x7b\x9e\x62\xc8\x79\xdb\xdc\x7b\xf5\x26\xca\x2e\x8b\x37\xf1\x90\xb6\xb3\x75\x34\xdb\x0c\xc9\xb8\x2a\xa5\xef\x2e\x2d\x68\x5d\x11\x6b\x57\x6a\xf7\x52\xca\x30\x7f\xf8\x08\xf9\x1b\x05\xa0\xd9\xca\x7d\xd4\x19\xdc\x2a\x00\x80\xa6\xff\x02\x68\x2a\x75\x06\xda\x32\x27\x15\xd6\x7a\xf5\x3e\x8e\xa1\xe8\xe6\x82\x7b\x76\x56\x30\x9a\xc2\xd7\x3b\xaa\x0c\x07\xff\x80\x85\x24\x96\x39\x7d\xdd\xbb\x21\x50\x62\x77\xb8\x6e\x9a\xcd\xf6\x32\xd9\xae\xd7\x37\x6d\x6b\x9e\xc9\x1f\x2f\xf9\x03\x86\x40\x25\xea\x0c\x76\xd6\x45\xec\xe7\xed\xea\x34\x51\x45\x42\x55\xed\x03\x9a\xf4\xe3\xb7\x8b\x60\xb0\x23\xae\x61\xff\x64\x5a\xe1\xc8\x4f\xc6\x7d\x09\x2d\x44\xa3\x12\x4d\xbf\x63\x2c\xb3\xb9\xb8\xb6\x8f\x78\x45\x51\x62\x2a\x2f\x92\x0a\x8f\xdc\xdd\xf1\xfe\xbf\x23\x37\x81\x0e\x56\x70\xaa\xf5\x53\xec\x5b\xb2\x84\xa7\x9f\xc4\x8e\xf2\x69\xf5\x70\x94\xcf\x5b\x8f\x71\xd1\x62\xf5\xe8\x68\x67\x5a\x8f\xdf\xd0\x86\x97\xe7\x28\x5f\xa2\x1e\x7f\x41\xce\x5e\x0f\x05\x70\xa7\x5a\xf5\x16\x00\x00\xff\xff\xa5\x53\x30\xd3\x52\x06\x00\x00"

func assetsConfigUpdate_pathsJsonBytes() ([]byte, error) {
	return bindataRead(
		_assetsConfigUpdate_pathsJson,
		"assets/config/update_paths.json",
	)
}

func assetsConfigUpdate_pathsJson() (*asset, error) {
	bytes, err := assetsConfigUpdate_pathsJsonBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/config/update_paths.json", size: 1618, mode: os.FileMode(420), modTime: time.Unix(1523553906, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsTemplatesCmakeCmakelistsappTxtTpl = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x74\x52\x4d\x6f\x9b\x40\x10\xbd\xef\xaf\x18\xb9\x1c\xa0\x07\xc7\x6a\x7e\xc1\x66\x19\x3b\x34\xc0\xa2\x05\xbb\xe9\x69\x65\xc1\x38\xda\xd6\x7c\x74\x8d\x55\x55\x88\xff\x5e\x61\xc0\xb1\x23\xe5\x04\xf3\xe6\x69\xe6\xbd\x37\x7b\xa2\xd6\x15\x11\x7f\x41\xbd\x43\x05\x8f\xcb\xd5\x72\xe5\xb1\x01\x4c\x94\xfc\x8e\x22\xd3\x31\x8f\x10\xba\xee\xb6\xec\xfb\x7b\x4a\xc2\xb3\x67\x58\xbc\x73\x86\xba\xef\x17\x23\x69\x1c\x9e\x49\x19\x8a\x67\x1e\xc4\x7a\x1d\x84\x38\x90\xef\x91\x99\x0e\x13\x3f\x92\xfe\x36\xc4\x69\xb2\xd3\x8d\xa0\xd8\x2a\x85\x71\xa6\x53\xb9\x55\x02\xb5\x1f\xa8\x79\x89\x8f\x09\xc6\x3e\xc6\xe2\xe7\x38\xbf\xa0\x86\xaa\x82\xaa\xdc\xd0\xc9\x63\xec\x0b\x34\xb6\x6e\xc8\xb6\x86\x4e\x17\x7e\xc6\xd5\x06\xaf\xde\x6e\xaa\xd9\xda\x93\xe4\xca\x87\xae\xbb\x7c\x67\x70\xad\x78\x84\x3f\xa4\x7a\x81\xae\xbb\xfe\x0f\x4d\x96\x97\xfb\xdf\xa4\x4b\x53\x99\xf2\x5c\x6a\x4b\x7f\xce\xc6\x52\xe1\xee\x50\xa5\x81\x8c\x61\x36\x30\xd5\xbd\xc7\x1a\x5b\xff\xa2\xbc\x75\x9d\xfb\x60\x41\x80\x78\x7d\x05\x9e\x46\xde\x34\xb3\xa9\x8f\x26\xff\xe7\xa6\x98\x81\x88\x92\xd5\xea\xdb\x23\xc8\xd0\xf7\x18\x33\x55\x7e\x3c\x17\xe4\x3a\xdd\x07\xf3\x83\x9e\x83\x39\x92\xbb\x09\xe5\x93\x56\x28\xb6\x2a\x45\x48\x95\xb8\x74\xd3\x21\xce\xbb\x43\x3d\x9c\x6c\xfe\xf0\x75\x99\x37\xcd\xe2\xd3\x5e\xfe\x79\x6b\xe1\xb1\x37\xaa\xc8\xee\x5b\xd2\x7b\x5b\x9c\x4d\x55\xeb\x83\xb1\xe5\xdf\xbd\x1d\xc4\xdd\x66\xcb\x00\x60\x10\x92\x82\xd3\x5d\xf5\x8c\xe8\x98\xb7\x33\xe5\xed\x5d\xb0\x44\xaa\x6c\x78\x79\x52\x65\x7d\xcf\xda\xbd\x7d\xa3\x56\xe7\x75\xd9\x98\x23\xe9\x82\x0e\xa6\x32\xad\xa9\xab\xd3\x87\x2d\x90\xa8\x60\xc7\x33\x04\xad\xf9\x4e\x69\xe7\xe6\x54\x5a\xbf\x5f\x5b\xc8\x28\x09\x42\xd4\xeb\x90\x6f\xd2\xbe\xf7\xfe\x07\x00\x00\xff\xff\x5c\x71\x39\x00\x09\x03\x00\x00"

func assetsTemplatesCmakeCmakelistsappTxtTplBytes() ([]byte, error) {
	return bindataRead(
		_assetsTemplatesCmakeCmakelistsappTxtTpl,
		"assets/templates/cmake/CMakeListsApp.txt.tpl",
	)
}

func assetsTemplatesCmakeCmakelistsappTxtTpl() (*asset, error) {
	bytes, err := assetsTemplatesCmakeCmakelistsappTxtTplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/templates/cmake/CMakeListsApp.txt.tpl", size: 777, mode: os.FileMode(420), modTime: time.Unix(1526664934, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsTemplatesCmakeCmakelistspkgTxtTpl = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x84\x92\xcd\x8e\x9b\x3e\x14\xc5\xd7\x7f\x3f\x85\x95\x3f\x0b\xe8\x22\x13\x75\x9e\xc0\x31\x4e\x86\x06\x30\x32\x24\x9d\xae\x2c\x0a\xce\xc8\x6d\xf8\xa8\x21\xaa\x46\xc8\xef\x5e\x99\x8f\x0c\x99\x49\x34\x2b\xb8\xf7\x1c\x5d\xdf\xf3\xb3\x1b\xd1\xda\x38\x40\x3b\xc2\x0f\x84\xc1\xc7\xe5\x6a\xb9\x72\x80\x69\x46\x8c\x7e\x23\x38\xe1\x21\x0a\x08\xec\xba\x79\xa9\xf5\xb5\x25\x42\xc9\x13\x5c\xbc\x79\x4c\xad\xf5\x62\x30\x0d\xc3\x13\x4a\x7d\xfc\x84\xbc\x90\x6f\x3c\x9f\x18\xf3\x5b\x67\x6e\x87\xa3\x3f\xa0\xee\xde\x27\xe3\x64\xab\x1b\x9a\x78\xcf\x18\x09\x13\x1e\xd3\x3d\xc3\x84\xbb\x1e\x9b\x0e\x71\x49\x44\x42\x97\x84\xf8\xc7\x30\x3f\x17\xb5\x28\x73\x51\x66\x52\x34\x0e\x00\xff\xc3\x5a\x55\xb5\x50\xad\x14\x4d\xef\x4f\x10\xdb\x92\x4b\xb6\x59\xa5\x75\xaf\xaf\x29\x62\x2e\xec\xba\xfe\x3b\xc5\xdd\x30\x14\x90\xef\x94\xed\x60\xd7\x5d\xfe\x8d\x08\xb2\x22\xfd\x2d\x78\x21\x4b\x59\x9c\x0b\xae\xc4\x9f\xb3\x54\x22\xb7\x0f\x84\xc5\x1e\x0d\xe1\xb4\xff\x58\x6b\x07\xd4\xaa\xfa\x25\xb2\xd6\xb6\xae\xb9\x42\x0c\xf1\xf3\x33\x44\x71\xe0\x8c\x33\xeb\xea\x24\xb3\x57\x3b\x26\x09\xc4\x41\xb4\x5a\x7d\x7d\x84\xd4\x77\x1d\x00\x64\x99\x9d\xce\xb9\xb0\xad\xee\x5d\x76\xb3\xcf\x51\x9e\x84\xbd\xf5\xe9\x9a\x33\x82\xf7\x2c\x26\xd0\xf7\xd6\xbd\x1a\x1b\x9a\x57\xf7\xf4\xd0\xa8\xec\xe1\xcb\x32\xab\xeb\xc5\x5d\x2d\xbb\x2f\x2d\x1c\xf0\x22\x4a\xa1\xd2\x56\xf0\x54\xe5\x67\x59\x56\xfc\x24\x7f\xaa\x54\xbd\xda\xdd\xbb\x78\x1a\xfc\x17\x33\x1c\x43\xab\xbb\xac\xa3\x01\x84\x10\x0e\xb8\xad\x11\xb7\x03\xda\x54\xbd\x88\x96\x67\x55\x51\xcb\x93\xe0\xb9\x38\xca\x52\xb6\xb2\x2a\x9b\x0f\xc4\x22\xe6\x1d\x50\x42\x20\xe7\xe8\xc0\xb8\x35\xbb\x18\xce\xcd\xb3\xdd\x6d\x39\xa6\x41\xe4\xf9\x84\x6f\x7c\xb4\x8d\xf5\x6d\x3e\x31\xc3\xf7\xf8\xb4\xa2\x69\xef\x02\x9a\xc4\x5b\x84\x26\xed\x16\xa2\xa3\x54\xc5\xdf\x54\x99\xfb\x9b\xbf\xbe\x9e\xc6\xc8\xe8\xb2\xd2\xd0\xf5\xbd\xb5\xe9\x5e\xa5\xbf\x01\xaf\x6f\x45\x94\x25\x26\x3c\x65\x89\xfe\x0c\xe7\xfc\xf8\xcf\x68\x8e\xde\x0f\x40\xff\x05\x00\x00\xff\xff\x48\x5d\x5f\x2a\x45\x04\x00\x00"

func assetsTemplatesCmakeCmakelistspkgTxtTplBytes() ([]byte, error) {
	return bindataRead(
		_assetsTemplatesCmakeCmakelistspkgTxtTpl,
		"assets/templates/cmake/CMakeListsPkg.txt.tpl",
	)
}

func assetsTemplatesCmakeCmakelistspkgTxtTpl() (*asset, error) {
	bytes, err := assetsTemplatesCmakeCmakelistspkgTxtTplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/templates/cmake/CMakeListsPkg.txt.tpl", size: 1093, mode: os.FileMode(420), modTime: time.Unix(1526664955, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsTemplatesCmakeDependenciesTxt = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x94\x90\x4f\x6b\xc2\x40\x14\xc4\xcf\xe6\x53\x2c\xc1\x83\xe9\xa1\x7e\x86\xcd\xe6\xc5\x86\xe6\x1f\xbb\x6a\xe9\xe9\x91\x6e\x9e\xf2\x20\x4d\xc2\x1a\x0f\x25\xec\x77\x2f\x14\x69\x11\x54\xe8\x69\x0e\xc3\xfc\x66\x98\x03\x77\xb4\xda\xe4\x55\x8c\x1a\xd4\x4e\x1b\x10\x46\x2b\x4c\xb3\x1c\x8c\x08\xe7\x39\x81\x1a\xca\x04\x4a\xf5\x8e\xb5\xdc\xbe\x78\xbf\x3e\x39\xbb\x7e\x7a\xb6\xe3\x18\x3e\xf4\xed\x63\x3b\x8c\x82\x23\xf5\xe4\x9a\x89\xb0\x71\xed\x99\xfb\x01\x3b\xfe\x70\x8d\xfb\x5a\x5d\xc5\x4a\x59\x80\xf7\xc1\xc2\x68\x65\xc4\x72\xfe\x1d\xe7\x83\x45\x5c\x49\x9d\x88\xe5\xfc\xa3\x3e\x0a\xa6\xc6\x1d\x69\x42\x3b\x7c\x8e\xdc\x11\xb6\x74\xe0\x9e\x27\x1e\xfa\xd3\x2d\xa4\xa8\x75\xb6\x97\x5b\x10\x88\x72\xaf\x71\x39\xa7\x5a\x16\xf0\x56\xe9\x57\x8f\x28\xae\x02\xaa\x2a\xea\x2c\x07\x4c\x73\xb9\x31\xfe\xaf\x89\x7b\xdb\x9d\x5b\xc2\x96\x1d\xd9\x69\x70\x4c\x77\x9a\x76\x71\x9e\xa9\xdb\x7f\x5c\x18\xe1\xff\xa1\x97\xf9\xf7\x5e\x0e\xa3\xef\x00\x00\x00\xff\xff\xc1\x85\xd3\xd1\xdb\x01\x00\x00"

func assetsTemplatesCmakeDependenciesTxtBytes() ([]byte, error) {
	return bindataRead(
		_assetsTemplatesCmakeDependenciesTxt,
		"assets/templates/cmake/dependencies.txt",
	)
}

func assetsTemplatesCmakeDependenciesTxt() (*asset, error) {
	bytes, err := assetsTemplatesCmakeDependenciesTxtBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/templates/cmake/dependencies.txt", size: 475, mode: os.FileMode(420), modTime: time.Unix(1526224815, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsTemplatesConfigAppHelperTxt = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x64\x91\x31\x6f\xdd\x30\x0c\x84\xf7\xf7\x2b\x0e\x7e\x4b\x3b\xd4\x3f\xa0\x5b\x80\x22\x4b\x87\x04\x69\x91\xce\xb4\xc4\xf7\xcc\x46\x16\x05\x91\x8a\xeb\xfe\xfa\x42\x8e\x53\x34\xcd\x48\x89\xb8\xfb\xee\x78\xc6\x40\xa5\x0c\x70\xba\x22\x68\x76\x92\x6c\x08\x5a\x19\x92\x2f\x5a\x17\x72\xd1\x0c\x9a\xb4\x39\x7c\x66\x94\xaa\x3f\x39\xf8\x88\xef\xb3\x18\x56\x49\xa9\x3f\xc5\x16\x18\xfc\x8b\x43\x73\x9a\x12\x83\x72\x7c\xf9\x9b\x18\xad\x24\xa5\xc8\xf1\x74\x86\x2b\x28\x83\x97\x89\x63\xe4\x88\xc8\xcf\x12\x78\xc4\xad\xa6\xa4\xab\xe4\x2b\xa8\x32\x4c\x17\xc6\x13\x6f\x28\x2a\xd9\xed\xf0\x0e\xcd\x5c\x17\xf9\xdd\xb7\x36\x6d\x15\x54\x4a\x92\xb0\xe3\x7d\x3e\x9d\xf1\x09\xb7\x95\x16\x5e\xb5\x3e\xd9\x2e\xf3\xed\xcb\x57\xc3\x45\xeb\xff\x76\xd6\xd1\x79\x7b\x0d\x0b\x63\x87\x5e\x90\x64\xaa\x54\x85\xad\x43\x36\x63\xac\x33\x67\x04\x8d\x92\xaf\xe3\xe9\x0c\xe0\x87\x28\xac\x95\xa2\xd5\x8f\x86\x06\xaa\xb1\x49\xd6\x61\xcf\x3b\x04\x35\x1a\xf0\x81\x32\xb4\x70\x86\x69\xab\x81\x71\x77\x77\x8f\x9b\xc7\x87\xee\xce\x49\xcb\xc2\xd9\x51\x12\x79\x2f\xf7\xe3\xb8\x93\xdf\x1f\x23\xc4\xf6\x8e\x7d\x2b\xdc\x99\xc2\x2c\x05\x3e\x53\x6f\x5e\xec\xdf\xc4\xef\xca\x3d\xee\xf1\x2a\xdc\x6f\xf2\x2c\x91\x6d\x27\x7f\x93\x8d\x42\x60\xb3\x17\xed\x99\x6a\x5c\x7b\x59\x9d\x3f\xe8\x52\x24\x71\xdd\xb7\x8e\xa1\xe3\x2c\xe3\xdb\xe8\xc3\xcd\xe3\xc3\xf0\xd7\x69\xfc\x13\x00\x00\xff\xff\x60\xbe\xd0\xd6\x41\x02\x00\x00"

func assetsTemplatesConfigAppHelperTxtBytes() ([]byte, error) {
	return bindataRead(
		_assetsTemplatesConfigAppHelperTxt,
		"assets/templates/config/app-helper.txt",
	)
}

func assetsTemplatesConfigAppHelperTxt() (*asset, error) {
	bytes, err := assetsTemplatesConfigAppHelperTxtBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/templates/config/app-helper.txt", size: 577, mode: os.FileMode(420), modTime: time.Unix(1526342491, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsTemplatesConfigDependenciesHelperTxt = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x6c\x92\xc1\x8e\x9b\x30\x10\x86\xef\x3c\xc5\x2f\x73\x6d\x91\xba\xc7\x9c\x9b\xb4\x87\xa8\x91\xb6\xed\xa9\xaa\xaa\xc1\x0c\xe0\xc6\x78\x2c\x7b\x50\xca\xdb\x57\x86\x4d\x96\x95\x96\x13\x0c\xe3\xff\xfb\x3c\x76\x0d\xd3\x71\xe4\xd0\x71\xb0\x8e\xb3\x81\xd2\x00\xf2\x5e\x6e\x19\x73\xe6\x04\x15\xb8\x60\xfd\xdc\x31\x44\x47\x4e\x88\x64\xaf\x34\x70\x86\x0b\x2a\xd0\x91\x5d\x42\x4c\xf2\x97\xad\x36\xf8\x31\x72\x62\xb8\x0c\xba\xf7\x61\xa2\x40\x03\x27\xb4\xb3\xf3\xba\x2e\xaa\x6a\xdc\x9c\x80\x42\x87\x45\x66\x58\x0a\x98\xe8\xca\x85\x07\xe9\xa1\x23\x29\xda\x05\x39\xb2\x75\xfd\xe2\xc2\xb0\x67\x42\x47\x97\x8b\x65\x83\xcf\x3b\x71\xdc\x9c\xf7\x68\x19\x04\xef\xb2\x96\x9c\xc7\x22\x0a\x5d\x55\x3f\x50\x2f\xb1\xe8\x5c\xdf\x73\xe2\xa0\x90\xa8\x4e\x42\x46\x2f\x09\x4c\x76\xdc\x24\x78\x6a\x70\x92\x32\x89\x62\x40\x89\x91\x65\x62\x5c\x79\x41\x14\x17\x34\x83\x5a\x99\x75\xf5\x31\x55\x8d\x8f\x98\x93\x2f\x5b\xbf\xad\x33\x28\xb8\x3b\x4a\x47\x5e\x7f\x6e\xb9\x77\xb1\x06\xdf\x05\x27\x4a\x90\xe0\x17\x98\x2f\x4e\x0d\xf2\x1c\xa3\x24\xe5\xae\xf4\xe7\x95\x4a\xd6\x72\x54\xee\x9a\x95\x91\xb8\x7f\xcb\xd8\x6f\x89\xd0\x26\x0a\x76\x2c\x87\x66\x47\xb6\xd7\xcd\x8f\xe1\x5d\x9b\x28\x2d\xe8\x93\x4c\x6b\x8c\x95\x29\x3a\xcf\x7f\x7a\x4f\xc3\x86\x79\xdf\xfa\xa5\x0f\x5b\x5f\x19\x50\xa9\x3e\x6e\xcc\x52\xd5\x38\xfe\xa3\x29\x7a\x3e\x54\x35\xf6\x37\xa9\x7c\x03\xd3\x72\x76\xed\xf6\x5a\x9e\x39\xf9\x03\xcc\xcf\xe7\xf3\x27\xf3\xa8\x25\xee\x0f\x30\xcf\xc7\xd3\xae\xf6\x46\xef\x80\x5f\xe6\xeb\xf1\x7c\xbe\x98\x0f\x30\xdf\x2e\x17\xf3\xfb\x35\xfa\xe9\x9d\xec\x27\xf3\x3f\x00\x00\xff\xff\x6a\xf8\x92\xa3\xd5\x02\x00\x00"

func assetsTemplatesConfigDependenciesHelperTxtBytes() ([]byte, error) {
	return bindataRead(
		_assetsTemplatesConfigDependenciesHelperTxt,
		"assets/templates/config/dependencies-helper.txt",
	)
}

func assetsTemplatesConfigDependenciesHelperTxt() (*asset, error) {
	bytes, err := assetsTemplatesConfigDependenciesHelperTxtBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/templates/config/dependencies-helper.txt", size: 725, mode: os.FileMode(420), modTime: time.Unix(1526342491, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsTemplatesConfigPkgHelperTxt = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x54\x52\xcd\x6a\xe4\x38\x10\xbe\xe7\x29\x3e\xdc\x97\x5d\xc8\xf6\x03\xec\x2d\xb0\x04\x96\x39\x24\x64\x86\x0c\x73\x1a\xca\x52\xb9\x5d\xd3\xb2\x4a\x48\xe5\x18\xcf\xd3\x0f\x92\xed\xa6\x73\x2c\xb9\xfc\xd5\xf7\x77\x42\x97\xae\x97\x0e\x46\x17\x38\x8d\x46\x12\x0b\x9c\x66\x86\xc4\x41\xf3\x44\x26\x1a\x41\xbd\xce\x06\x1b\x19\x29\xeb\x2f\x76\x76\xc6\xb7\x51\x0a\x16\x09\xa1\x3e\xf9\xd9\x31\x08\x89\xdc\x95\x2e\x0c\x1b\xc9\xe0\x28\xa2\x67\xcc\x85\x3d\x24\x42\x6d\xe4\xfc\x70\xc2\x22\x7a\x80\x94\x33\xbe\x6f\xd3\x87\x78\x2e\x88\x64\xf2\xc1\x28\x73\x4a\x9a\x0d\x83\xe6\x03\xb1\xc0\x65\x26\x63\x0f\x6b\x67\x69\x05\xc5\x3a\xf0\x0a\x6a\x5c\x5d\x98\x3d\x7b\x0c\x81\x96\xc0\xa5\x84\xf5\xfc\x70\xc2\xb3\x86\xa0\x8b\xc4\x4b\x5b\x2a\x3a\x31\xae\xbc\x22\xa9\x44\x2b\xbb\x28\x37\x17\xd3\x49\x7e\xd7\xad\x55\xe7\xdb\xc9\x7f\x1f\x4e\xf8\x07\xcf\x99\x26\x5e\x34\x5f\x4b\x83\xf8\xfa\xdf\x97\xd2\x78\xf1\xd4\xb3\xaf\x07\x3d\x7f\x88\xe3\x52\xfd\xe0\xf5\x70\x10\x85\x0d\x3a\x20\x48\x9f\x29\x0b\x17\x98\x56\x23\xb0\x8c\x1c\xe1\xd4\x4b\xbc\x54\x7e\x68\xfa\x77\xbd\xbb\xed\x1d\x65\x3f\x4b\xd4\xae\x29\xec\x9c\x16\xea\xf0\x17\x45\x68\xe2\x88\xa2\x73\x76\x8c\x97\x97\x57\x3c\xbd\xbf\xd5\xeb\x1c\x34\x4d\x1c\x0d\x29\x90\xd5\xc4\xfe\x3e\x37\xe6\xaf\xfb\x08\x29\x2d\x38\x5b\x13\x57\x4e\x6e\x94\xb4\x05\xd4\xac\xa4\x94\x82\xb8\x2d\xe5\x96\x66\x8d\x2c\x05\x25\xcf\x7e\x0f\xf9\x00\xbe\x05\xd5\x98\x7f\xd2\x46\xce\x71\x29\x1b\xf6\x48\xd9\x2f\xd5\xac\xca\xdf\xe9\x94\x24\x70\x6e\x5b\xfb\x50\xe9\x4c\xe7\xcf\xd2\xbb\xa7\xf7\xb7\xee\x76\x69\x53\xf0\x43\xe7\x56\xa2\x92\xd8\xc9\xb0\x62\x9a\x83\x49\x0a\x0c\x9a\x6d\xd4\x5c\x1e\x31\xdc\xa5\x13\x3d\x7a\xa5\xec\xcb\xce\xfa\xbe\xbe\x37\x61\xb5\x8b\x95\xc8\xc8\xee\x0a\x19\x9a\x05\x77\x6a\xd6\x6a\x56\x65\x49\x26\x7d\x60\x2c\x62\xe3\x7d\xeb\x21\x56\x37\x7a\xae\x65\xd9\x8b\xbd\x71\xfd\x7f\xa8\xe5\xc1\x42\xd1\x3e\xb5\xa8\x5e\xeb\xf9\x50\xee\x37\x44\xc7\xb9\xb5\x64\x08\x74\x29\x5b\x27\x2a\xd8\xe3\x61\x30\x6c\xd4\xc2\xfb\x67\x89\xc7\xdf\x3f\xb7\x07\xa3\xcb\xf9\x4f\x00\x00\x00\xff\xff\xa5\x00\x6f\x85\xb6\x03\x00\x00"

func assetsTemplatesConfigPkgHelperTxtBytes() ([]byte, error) {
	return bindataRead(
		_assetsTemplatesConfigPkgHelperTxt,
		"assets/templates/config/pkg-helper.txt",
	)
}

func assetsTemplatesConfigPkgHelperTxt() (*asset, error) {
	bytes, err := assetsTemplatesConfigPkgHelperTxtBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/templates/config/pkg-helper.txt", size: 950, mode: os.FileMode(420), modTime: time.Unix(1526342491, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsTemplatesConfigProjectAppYml = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x44\x8c\x41\x0a\xc3\x30\x0c\x04\xef\x7a\xc5\xbe\x43\x5f\x29\xa5\x6c\x63\x39\x98\xda\xb1\x51\x54\xfa\xfd\xe2\xa4\x34\x97\xd1\x30\x82\xe5\x18\x2a\xc0\xc6\x66\x7a\x50\x80\x92\x4c\x27\x04\x18\x95\x91\xbb\x37\xfd\x9b\x00\xd9\xd9\xec\xd3\xfd\xa5\x97\x8a\x04\x7d\xb5\xd8\xe7\x5a\xb2\xcc\x77\x0d\x45\x63\xd9\x04\x58\xdc\x18\x96\xe6\x0b\x47\x3b\x0d\x78\x76\x7a\xd2\xf3\xfc\xd2\xd2\xdb\x28\xd5\x1e\xb9\x72\xdd\x15\xb7\xbb\x7c\x03\x00\x00\xff\xff\x5f\x68\x86\xf6\xa3\x00\x00\x00"

func assetsTemplatesConfigProjectAppYmlBytes() ([]byte, error) {
	return bindataRead(
		_assetsTemplatesConfigProjectAppYml,
		"assets/templates/config/project-app.yml",
	)
}

func assetsTemplatesConfigProjectAppYml() (*asset, error) {
	bytes, err := assetsTemplatesConfigProjectAppYmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/templates/config/project-app.yml", size: 163, mode: os.FileMode(420), modTime: time.Unix(1523553906, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsTemplatesConfigProjectPkgYml = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x64\x4e\x4b\xae\x83\x30\x0c\xdc\xe7\x14\x73\x02\xc4\xdb\x7a\xf7\xf6\xdc\x00\x3d\x3d\x19\xe2\xd0\xa8\x09\x41\x8e\x69\xaf\x5f\x85\x52\x36\xdd\x8c\x67\xc6\x9f\x71\x8a\x13\x39\x60\xe5\x2c\x74\xa0\x03\x1e\xa2\x35\x96\x95\xd0\x77\x7d\xf7\xe3\x00\xde\xed\x56\xb4\x12\xc6\x3f\x07\xa4\x38\xcb\x5a\xe5\x54\x5b\x62\x0b\x45\x33\x5d\xcc\x01\x41\x39\xcb\xb3\xe8\xfd\x1c\x9a\x0a\xab\x27\x8c\xbf\xc3\xd0\xe4\x5c\xf2\x16\x93\xfc\x87\xc4\xcb\xe7\x6a\xf4\x42\x0d\x9c\x33\xd6\x45\xac\xb6\xb7\xbc\x04\xde\x93\x11\x4c\xaa\xb5\x45\x15\x36\xf1\xad\x85\xc3\x7b\xb3\x2b\xe0\x28\xa7\xf5\x1d\xf2\x0a\x00\x00\xff\xff\xf6\x90\xae\xdf\xec\x00\x00\x00"

func assetsTemplatesConfigProjectPkgYmlBytes() ([]byte, error) {
	return bindataRead(
		_assetsTemplatesConfigProjectPkgYml,
		"assets/templates/config/project-pkg.yml",
	)
}

func assetsTemplatesConfigProjectPkgYml() (*asset, error) {
	bytes, err := assetsTemplatesConfigProjectPkgYmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/templates/config/project-pkg.yml", size: 236, mode: os.FileMode(420), modTime: time.Unix(1526440035, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsTemplatesConfigTargetsHelperTxt = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x44\x90\x41\x8e\x83\x30\x0c\x45\xf7\x3d\xc5\x57\xd9\x8e\x38\xc4\xdc\x62\x96\x26\x71\xc0\x52\xb0\x51\x6c\x8a\xb8\xfd\x28\x94\xaa\x5b\xfb\xf9\xbf\x2f\x0f\x78\x06\xb5\x99\xc3\x9f\x08\x9a\x41\xb5\xda\xe1\x28\xd6\x10\xec\x21\x3a\x83\x34\x23\xf3\x8b\xab\x6d\x2b\x6b\x5c\xbb\x17\x35\xb1\xdd\xe1\x1c\x9d\xf1\x0b\x4a\xa6\x45\xe6\xbd\x51\x88\xa9\x8f\xf8\xb3\x1d\x89\x14\xa9\x31\x05\x3f\x06\xac\x7b\x0d\xd9\x2a\xe3\x56\xe2\x58\xb8\x31\xce\x9b\xcb\x5c\x44\x19\x59\x4a\xe1\xd6\x4d\x71\x6e\xec\xb0\x82\xc9\xa8\xe5\x8f\x64\xdd\xa4\x32\x4a\xa5\xd9\x47\xfc\x9e\xfd\x8c\xf6\x1a\x30\xfd\x04\x3f\x06\x88\xdf\xda\xfc\x83\x63\x91\xb4\xf4\xc9\x5b\x90\x31\x91\x73\x86\xe9\xb7\x7e\x5a\xcc\x59\x31\x9d\x57\x19\x51\xc4\xc2\xef\x80\xfe\x81\xad\x59\x62\xf7\xf1\x3f\x00\x00\xff\xff\xc3\xbc\x9e\x47\x2d\x01\x00\x00"

func assetsTemplatesConfigTargetsHelperTxtBytes() ([]byte, error) {
	return bindataRead(
		_assetsTemplatesConfigTargetsHelperTxt,
		"assets/templates/config/targets-helper.txt",
	)
}

func assetsTemplatesConfigTargetsHelperTxt() (*asset, error) {
	bytes, err := assetsTemplatesConfigTargetsHelperTxtBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/templates/config/targets-helper.txt", size: 301, mode: os.FileMode(420), modTime: time.Unix(1526342491, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsTemplatesGitignoreGitignoreClion = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xd2\x2b\xcf\xcc\xd7\xe7\x72\xf6\x4d\xcc\x4e\xf5\xc9\x2c\x2e\x29\x0e\x28\xca\x2c\x4b\x2c\x49\xd5\x2b\xa9\x28\xe1\xd2\xcb\x4c\x49\x4d\xd4\xe7\x4a\xce\x4d\xcc\x4e\xd5\x4d\x2a\xcd\xcc\x49\xd1\x4d\x49\x4d\x2a\x4d\xd7\xe7\x02\x04\x00\x00\xff\xff\x88\xc9\x2b\x5b\x36\x00\x00\x00"

func assetsTemplatesGitignoreGitignoreClionBytes() ([]byte, error) {
	return bindataRead(
		_assetsTemplatesGitignoreGitignoreClion,
		"assets/templates/gitignore/.gitignore-clion",
	)
}

func assetsTemplatesGitignoreGitignoreClion() (*asset, error) {
	bytes, err := assetsTemplatesGitignoreGitignoreClionBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/templates/gitignore/.gitignore-clion", size: 54, mode: os.FileMode(420), modTime: time.Unix(1526342483, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsTemplatesGitignoreGitignoreGeneral = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xd2\x2b\xcf\xcc\xd7\xe7\x02\x04\x00\x00\xff\xff\xdd\x1c\xfa\x30\x06\x00\x00\x00"

func assetsTemplatesGitignoreGitignoreGeneralBytes() ([]byte, error) {
	return bindataRead(
		_assetsTemplatesGitignoreGitignoreGeneral,
		"assets/templates/gitignore/.gitignore-general",
	)
}

func assetsTemplatesGitignoreGitignoreGeneral() (*asset, error) {
	bytes, err := assetsTemplatesGitignoreGitignoreGeneralBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/templates/gitignore/.gitignore-general", size: 6, mode: os.FileMode(420), modTime: time.Unix(1523553906, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsTemplatesIdeClionAppCmakelistsTxtTpl = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xb4\x92\xbb\x6e\xf3\x20\x18\x86\x77\xae\x02\x45\x1e\xec\x21\xff\x3d\xf0\x63\x5a\xb9\x01\x13\x61\x3b\x4d\x27\x44\xec\x4f\x15\x8d\x0f\xa9\x0d\x51\x24\xe4\x7b\xaf\x9c\x74\x4e\x86\x2a\x2b\xef\xe1\x41\xaf\xbe\x09\x5c\xbc\x63\x0a\x87\x50\x77\xe6\x08\xeb\x33\x8c\x93\x1d\xfa\x79\x4e\xd0\x22\xe5\x44\x30\x1c\xc2\x69\x1c\xbe\xa0\x76\xeb\xde\x74\xb0\x48\xe8\x6a\xd6\x9d\xed\x6d\xe7\x3b\x3d\xc2\xb7\xb7\x23\x34\x4b\x53\x91\xc9\x1c\x47\x61\xc7\xd4\xe2\xfb\x0d\xc6\x51\x58\x9a\x66\x4c\x31\xdd\xef\x31\x29\x44\x82\x90\xed\xeb\xd6\x37\x10\xaf\xa8\x30\x47\xe0\x76\x72\xd3\x76\xb4\x67\xe3\xe0\x9f\xbb\xb8\x55\x82\x90\x69\x1a\x5d\xfb\xc9\x0d\x9d\x76\x66\xfc\x04\x17\x23\x8c\x31\x7e\xa7\xb2\x20\xfa\x7f\x95\xf1\x14\x13\xce\xaf\x6f\x54\x0a\x41\xf2\x14\x47\xe1\xa6\x52\x91\xce\xf8\xe0\x6d\xdb\xdc\x22\x52\x6d\xb2\xfc\x55\xa7\x99\x62\xb4\x94\xea\x03\x47\x81\x0a\xb2\x61\x9a\x56\x4a\xb1\xbc\xd4\x85\xac\x14\x65\x8b\x61\x46\x8f\xd0\x94\x33\x92\xdf\x47\xd7\x2d\x98\xfe\x09\xe8\x6a\x9b\x92\x92\x69\xc2\xf9\x7d\xbe\x3f\x35\xc6\xc1\x53\x3e\xc0\x25\x79\xb0\xbb\x3f\xb5\x83\xf9\xc3\xf0\x70\x81\xda\x3b\x73\x68\x21\x8e\xc2\x56\xc9\x37\x46\x4b\x7d\x3b\xa0\x28\x14\x8a\xea\x97\x8c\xb3\x62\x4e\xd0\x4f\x00\x00\x00\xff\xff\xf6\xa5\x23\x29\xbe\x02\x00\x00"

func assetsTemplatesIdeClionAppCmakelistsTxtTplBytes() ([]byte, error) {
	return bindataRead(
		_assetsTemplatesIdeClionAppCmakelistsTxtTpl,
		"assets/templates/ide/clion/app/CMakeLists.txt.tpl",
	)
}

func assetsTemplatesIdeClionAppCmakelistsTxtTpl() (*asset, error) {
	bytes, err := assetsTemplatesIdeClionAppCmakelistsTxtTplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/templates/ide/clion/app/CMakeLists.txt.tpl", size: 702, mode: os.FileMode(420), modTime: time.Unix(1523553906, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsTemplatesIdeClionAppCmakelistsprivateTxtTpl = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x84\x52\xed\x6e\x9c\x30\x10\xfc\xef\xa7\x58\x51\x21\x01\x11\x97\x67\x20\x40\x22\x54\x2e\x54\x98\xa8\xf9\x67\x39\xb6\x39\xac\x52\x40\x36\xd7\xde\x09\xf9\xdd\x2b\xdf\xa9\x3d\x3e\xd4\xdc\x1f\xcb\xb3\xbb\xb3\x33\xbb\x5a\x2d\x46\xef\x7b\x5c\xe0\x88\xc4\xfb\x04\x86\xf3\xd8\xf4\x1d\x38\xd3\xf4\x9b\xf5\x9a\x86\x03\x1d\x1b\x63\x1e\x2f\xe0\xfa\xee\x86\xb3\xe3\x23\x84\xd3\xca\x8b\xf7\xd1\xd7\x94\xc4\x24\x2e\xf6\xdf\xb2\x3c\x2d\x81\xfe\x52\xe1\x81\x31\x7f\x9e\x7d\x7f\x5f\xe5\x1f\x1e\xd6\xf9\xe7\x3c\x7a\xc1\x24\xc9\x70\x55\x66\x4f\x6f\x55\x56\xbc\x5a\x03\xec\x27\xfd\x21\x42\x76\x3a\x85\x75\x4b\x0f\xda\x18\x67\xc1\xfb\x9c\x35\xe3\xd8\x01\x6f\x5a\xb8\x8a\x5e\x93\xa8\x4c\x60\x2e\xa0\x47\xda\x71\xaa\xb8\x31\x3e\x42\x2e\x70\x51\x87\x5a\x50\xc5\x1a\x34\x4d\x94\x73\xc2\x45\x2d\x3b\x39\xca\xbe\xd3\xde\x34\x1d\xb5\x50\xe1\x2d\x64\x8c\x6f\x0c\x72\x41\x74\x1c\xa1\x2f\x40\x39\x87\x2b\x19\xec\xf2\x34\xd4\xbd\x02\xbb\x38\x60\xbd\x12\xc8\xbd\xfc\x6f\xed\x65\xc7\xda\x23\x17\x84\x4b\x25\xd8\xd8\x2b\x29\xb4\xf7\x6f\xfb\x96\x61\x67\x30\xe6\x5e\xe5\x47\x7f\xb1\xef\xdc\xb7\x42\xdb\x16\xc6\x46\x80\x9d\x02\x5a\xf9\xa1\xa8\xed\x84\x5c\xfb\xff\x6b\xeb\xff\x6a\xb6\xe8\x7a\x13\x73\x29\x54\xcb\x56\x78\x2f\x79\xf1\x44\xca\x34\x7e\x2b\x71\x0a\xb8\x8c\xc9\x73\x96\xa7\x18\x01\x00\x38\x5a\xb1\xc7\x60\xc7\x86\xc1\x59\x60\xb6\x84\x73\x14\x6c\xeb\x83\x0d\x25\x58\xb3\x76\xcd\x12\xad\xe0\xb6\x5f\xb3\x09\x6c\x23\xc3\x60\x2f\xfe\x4f\x00\x00\x00\xff\xff\x38\x72\x86\x48\x29\x03\x00\x00"

func assetsTemplatesIdeClionAppCmakelistsprivateTxtTplBytes() ([]byte, error) {
	return bindataRead(
		_assetsTemplatesIdeClionAppCmakelistsprivateTxtTpl,
		"assets/templates/ide/clion/app/CMakeListsPrivate.txt.tpl",
	)
}

func assetsTemplatesIdeClionAppCmakelistsprivateTxtTpl() (*asset, error) {
	bytes, err := assetsTemplatesIdeClionAppCmakelistsprivateTxtTplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/templates/ide/clion/app/CMakeListsPrivate.txt.tpl", size: 809, mode: os.FileMode(420), modTime: time.Unix(1523553906, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsTemplatesIdeClionLibCmakelistsTxtTpl = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xb4\x92\xbb\x6e\xf3\x20\x18\x86\x77\xae\x02\x45\x1e\xec\x21\xff\x3d\xf0\x63\x5a\xb9\x01\x13\x61\x3b\x4d\x27\x44\xec\x4f\x15\x8d\x0f\xa9\x0d\x51\x24\xe4\x7b\xaf\x9c\x74\x4e\x86\x2a\x2b\xef\xe1\x41\xaf\xbe\x09\x5c\xbc\x63\x0a\x87\x50\x77\xe6\x08\xeb\x33\x8c\x93\x1d\xfa\x79\x4e\xd0\x22\xe5\x44\x30\x1c\xc2\x69\x1c\xbe\xa0\x76\xeb\xde\x74\xb0\x48\xe8\x6a\xd6\x9d\xed\x6d\xe7\x3b\x3d\xc2\xb7\xb7\x23\x34\x4b\x53\x91\xc9\x1c\x47\x61\xc7\xd4\xe2\xfb\x0d\xc6\x51\x58\x9a\x66\x4c\x31\xdd\xef\x31\x29\x44\x82\x90\xed\xeb\xd6\x37\x10\xaf\xa8\x30\x47\xe0\x76\x72\xd3\x76\xb4\x67\xe3\xe0\x9f\xbb\xb8\x55\x82\x90\x69\x1a\x5d\xfb\xc9\x0d\x9d\x76\x66\xfc\x04\x17\x23\x8c\x31\x7e\xa7\xb2\x20\xfa\x7f\x95\xf1\x14\x13\xce\xaf\x6f\x54\x0a\x41\xf2\x14\x47\xe1\xa6\x52\x91\xce\xf8\xe0\x6d\xdb\xdc\x22\x52\x6d\xb2\xfc\x55\xa7\x99\x62\xb4\x94\xea\x03\x47\x81\x0a\xb2\x61\x9a\x56\x4a\xb1\xbc\xd4\x85\xac\x14\x65\x8b\x61\x46\x8f\xd0\x94\x33\x92\xdf\x47\xd7\x2d\x98\xfe\x09\xe8\x6a\x9b\x92\x92\x69\xc2\xf9\x7d\xbe\x3f\x35\xc6\xc1\x53\x3e\xc0\x25\x79\xb0\xbb\x3f\xb5\x83\xf9\xc3\xf0\x70\x81\xda\x3b\x73\x68\x21\x8e\xc2\x56\xc9\x37\x46\x4b\x7d\x3b\xa0\x28\x14\x8a\xea\x97\x8c\xb3\x62\x4e\xd0\x4f\x00\x00\x00\xff\xff\xf6\xa5\x23\x29\xbe\x02\x00\x00"

func assetsTemplatesIdeClionLibCmakelistsTxtTplBytes() ([]byte, error) {
	return bindataRead(
		_assetsTemplatesIdeClionLibCmakelistsTxtTpl,
		"assets/templates/ide/clion/lib/CMakeLists.txt.tpl",
	)
}

func assetsTemplatesIdeClionLibCmakelistsTxtTpl() (*asset, error) {
	bytes, err := assetsTemplatesIdeClionLibCmakelistsTxtTplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/templates/ide/clion/lib/CMakeLists.txt.tpl", size: 702, mode: os.FileMode(420), modTime: time.Unix(1523553906, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsTemplatesIdeClionLibCmakelistsprivateTxtTpl = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x84\x52\xed\x6e\x9c\x30\x10\xfc\xef\xa7\x58\x51\x21\x01\x11\x97\x67\x20\x40\x22\x54\x2e\x54\x98\xa8\xf9\x67\x39\xb6\x39\xac\x52\x40\x36\xd7\xde\x09\xf9\xdd\x2b\xdf\xa9\x3d\x3e\xd4\xdc\x1f\xcb\xb3\xbb\xb3\x33\xbb\x5a\x2d\x46\xef\x7b\x5c\xe0\x88\xc4\xfb\x04\x86\xf3\xd8\xf4\x1d\x38\xd3\xf4\x9b\xf5\x9a\x86\x03\x1d\x1b\x63\x1e\x2f\xe0\xfa\xee\x86\xb3\xe3\x23\x84\xd3\xca\x8b\xf7\xd1\xd7\x94\xc4\x24\x2e\xf6\xdf\xb2\x3c\x2d\x81\xfe\x52\xe1\x81\x31\x7f\x9e\x7d\x7f\x5f\xe5\x1f\x1e\xd6\xf9\xe7\x3c\x7a\xc1\x24\xc9\x70\x55\x66\x4f\x6f\x55\x56\xbc\x5a\x03\xec\x27\xfd\x21\x42\x76\x3a\x85\x75\x4b\x0f\xda\x18\x67\xc1\xfb\x9c\x35\xe3\xd8\x01\x6f\x5a\xb8\x8a\x5e\x93\xa8\x4c\x60\x2e\xa0\x47\xda\x71\xaa\xb8\x31\x3e\x42\x2e\x70\x51\x87\x5a\x50\xc5\x1a\x34\x4d\x94\x73\xc2\x45\x2d\x3b\x39\xca\xbe\xd3\xde\x34\x1d\xb5\x50\xe1\x2d\x64\x8c\x6f\x0c\x72\x41\x74\x1c\xa1\x2f\x40\x39\x87\x2b\x19\xec\xf2\x34\xd4\xbd\x02\xbb\x38\x60\xbd\x12\xc8\xbd\xfc\x6f\xed\x65\xc7\xda\x23\x17\x84\x4b\x25\xd8\xd8\x2b\x29\xb4\xf7\x6f\xfb\x96\x61\x67\x30\xe6\x5e\xe5\x47\x7f\xb1\xef\xdc\xb7\x42\xdb\x16\xc6\x46\x80\x9d\x02\x5a\xf9\xa1\xa8\xed\x84\x5c\xfb\xff\x6b\xeb\xff\x6a\xb6\xe8\x7a\x13\x73\x29\x54\xcb\x56\x78\x2f\x79\xf1\x44\xca\x34\x7e\x2b\x71\x0a\xb8\x8c\xc9\x73\x96\xa7\x18\x01\x00\x38\x5a\xb1\xc7\x60\xc7\x86\xc1\x59\x60\xb6\x84\x73\x14\x6c\xeb\x83\x0d\x25\x58\xb3\x76\xcd\x12\xad\xe0\xb6\x5f\xb3\x09\x6c\x23\xc3\x60\x2f\xfe\x4f\x00\x00\x00\xff\xff\x38\x72\x86\x48\x29\x03\x00\x00"

func assetsTemplatesIdeClionLibCmakelistsprivateTxtTplBytes() ([]byte, error) {
	return bindataRead(
		_assetsTemplatesIdeClionLibCmakelistsprivateTxtTpl,
		"assets/templates/ide/clion/lib/CMakeListsPrivate.txt.tpl",
	)
}

func assetsTemplatesIdeClionLibCmakelistsprivateTxtTpl() (*asset, error) {
	bytes, err := assetsTemplatesIdeClionLibCmakelistsprivateTxtTplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/templates/ide/clion/lib/CMakeListsPrivate.txt.tpl", size: 809, mode: os.FileMode(420), modTime: time.Unix(1523553906, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsTemplatesSampleProgramAppMainCpp = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x52\xce\xcc\x4b\xce\x29\x4d\x49\x55\x50\x72\xce\x2f\x4e\xd4\x0f\x0a\x09\xd1\xcb\xc8\x50\xe2\x42\x13\xf6\x2f\x2d\x29\x28\x2d\x09\xc8\xcc\x03\x4b\x72\xc1\xb9\x0a\x39\xa9\x29\x01\x99\x79\x1a\x4e\xf9\x89\x45\x29\x56\x56\x3e\xae\x2e\x9a\xd6\x5c\x5c\x65\xf9\x99\x29\x0a\xc5\xa9\x25\xa5\x05\x1a\x9a\x0a\xd5\x5c\x0a\x0a\x0a\x0a\x41\x21\x21\x56\x56\x49\xa9\xe9\x99\x79\x1a\x9a\xd6\x5c\xb5\x50\x35\x39\xf9\xf9\x08\x25\x10\xa3\xf4\xf2\xc1\x2a\x40\x02\x29\xa9\x39\x89\x95\x1a\xa6\x06\x50\x2e\x4c\x3e\x2d\x0d\x5d\x81\x01\xd8\x48\x40\x00\x00\x00\xff\xff\xae\x1c\x30\xf2\xca\x00\x00\x00"

func assetsTemplatesSampleProgramAppMainCppBytes() ([]byte, error) {
	return bindataRead(
		_assetsTemplatesSampleProgramAppMainCpp,
		"assets/templates/sample-program/app/main.cpp",
	)
}

func assetsTemplatesSampleProgramAppMainCpp() (*asset, error) {
	bytes, err := assetsTemplatesSampleProgramAppMainCppBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/templates/sample-program/app/main.cpp", size: 202, mode: os.FileMode(420), modTime: time.Unix(1523553906, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsTemplatesSampleProgramLibLibCpp = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x01\x00\x00\xff\xff\x00\x00\x00\x00\x00\x00\x00\x00"

func assetsTemplatesSampleProgramLibLibCppBytes() ([]byte, error) {
	return bindataRead(
		_assetsTemplatesSampleProgramLibLibCpp,
		"assets/templates/sample-program/lib/lib.cpp",
	)
}

func assetsTemplatesSampleProgramLibLibCpp() (*asset, error) {
	bytes, err := assetsTemplatesSampleProgramLibLibCppBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/templates/sample-program/lib/lib.cpp", size: 0, mode: os.FileMode(420), modTime: time.Unix(1523553906, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsTemplatesSampleProgramLibLibH = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x01\x00\x00\xff\xff\x00\x00\x00\x00\x00\x00\x00\x00"

func assetsTemplatesSampleProgramLibLibHBytes() ([]byte, error) {
	return bindataRead(
		_assetsTemplatesSampleProgramLibLibH,
		"assets/templates/sample-program/lib/lib.h",
	)
}

func assetsTemplatesSampleProgramLibLibH() (*asset, error) {
	bytes, err := assetsTemplatesSampleProgramLibLibHBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/templates/sample-program/lib/lib.h", size: 0, mode: os.FileMode(420), modTime: time.Unix(1523553906, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsTemplatesSampleProgramLibMainCpp = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x01\x00\x00\xff\xff\x00\x00\x00\x00\x00\x00\x00\x00"

func assetsTemplatesSampleProgramLibMainCppBytes() ([]byte, error) {
	return bindataRead(
		_assetsTemplatesSampleProgramLibMainCpp,
		"assets/templates/sample-program/lib/main.cpp",
	)
}

func assetsTemplatesSampleProgramLibMainCpp() (*asset, error) {
	bytes, err := assetsTemplatesSampleProgramLibMainCppBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/templates/sample-program/lib/main.cpp", size: 0, mode: os.FileMode(420), modTime: time.Unix(1523553906, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"assets/config/create_paths.json": assetsConfigCreate_pathsJson,
	"assets/config/defaults.yml": assetsConfigDefaultsYml,
	"assets/config/paths.yml": assetsConfigPathsYml,
	"assets/config/update_paths.json": assetsConfigUpdate_pathsJson,
	"assets/templates/cmake/CMakeListsApp.txt.tpl": assetsTemplatesCmakeCmakelistsappTxtTpl,
	"assets/templates/cmake/CMakeListsPkg.txt.tpl": assetsTemplatesCmakeCmakelistspkgTxtTpl,
	"assets/templates/cmake/dependencies.txt": assetsTemplatesCmakeDependenciesTxt,
	"assets/templates/config/app-helper.txt": assetsTemplatesConfigAppHelperTxt,
	"assets/templates/config/dependencies-helper.txt": assetsTemplatesConfigDependenciesHelperTxt,
	"assets/templates/config/pkg-helper.txt": assetsTemplatesConfigPkgHelperTxt,
	"assets/templates/config/project-app.yml": assetsTemplatesConfigProjectAppYml,
	"assets/templates/config/project-pkg.yml": assetsTemplatesConfigProjectPkgYml,
	"assets/templates/config/targets-helper.txt": assetsTemplatesConfigTargetsHelperTxt,
	"assets/templates/gitignore/.gitignore-clion": assetsTemplatesGitignoreGitignoreClion,
	"assets/templates/gitignore/.gitignore-general": assetsTemplatesGitignoreGitignoreGeneral,
	"assets/templates/ide/clion/app/CMakeLists.txt.tpl": assetsTemplatesIdeClionAppCmakelistsTxtTpl,
	"assets/templates/ide/clion/app/CMakeListsPrivate.txt.tpl": assetsTemplatesIdeClionAppCmakelistsprivateTxtTpl,
	"assets/templates/ide/clion/lib/CMakeLists.txt.tpl": assetsTemplatesIdeClionLibCmakelistsTxtTpl,
	"assets/templates/ide/clion/lib/CMakeListsPrivate.txt.tpl": assetsTemplatesIdeClionLibCmakelistsprivateTxtTpl,
	"assets/templates/sample-program/app/main.cpp": assetsTemplatesSampleProgramAppMainCpp,
	"assets/templates/sample-program/lib/lib.cpp": assetsTemplatesSampleProgramLibLibCpp,
	"assets/templates/sample-program/lib/lib.h": assetsTemplatesSampleProgramLibLibH,
	"assets/templates/sample-program/lib/main.cpp": assetsTemplatesSampleProgramLibMainCpp,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}
var _bintree = &bintree{nil, map[string]*bintree{
	"assets": &bintree{nil, map[string]*bintree{
		"config": &bintree{nil, map[string]*bintree{
			"create_paths.json": &bintree{assetsConfigCreate_pathsJson, map[string]*bintree{}},
			"defaults.yml": &bintree{assetsConfigDefaultsYml, map[string]*bintree{}},
			"paths.yml": &bintree{assetsConfigPathsYml, map[string]*bintree{}},
			"update_paths.json": &bintree{assetsConfigUpdate_pathsJson, map[string]*bintree{}},
		}},
		"templates": &bintree{nil, map[string]*bintree{
			"cmake": &bintree{nil, map[string]*bintree{
				"CMakeListsApp.txt.tpl": &bintree{assetsTemplatesCmakeCmakelistsappTxtTpl, map[string]*bintree{}},
				"CMakeListsPkg.txt.tpl": &bintree{assetsTemplatesCmakeCmakelistspkgTxtTpl, map[string]*bintree{}},
				"dependencies.txt": &bintree{assetsTemplatesCmakeDependenciesTxt, map[string]*bintree{}},
			}},
			"config": &bintree{nil, map[string]*bintree{
				"app-helper.txt": &bintree{assetsTemplatesConfigAppHelperTxt, map[string]*bintree{}},
				"dependencies-helper.txt": &bintree{assetsTemplatesConfigDependenciesHelperTxt, map[string]*bintree{}},
				"pkg-helper.txt": &bintree{assetsTemplatesConfigPkgHelperTxt, map[string]*bintree{}},
				"project-app.yml": &bintree{assetsTemplatesConfigProjectAppYml, map[string]*bintree{}},
				"project-pkg.yml": &bintree{assetsTemplatesConfigProjectPkgYml, map[string]*bintree{}},
				"targets-helper.txt": &bintree{assetsTemplatesConfigTargetsHelperTxt, map[string]*bintree{}},
			}},
			"gitignore": &bintree{nil, map[string]*bintree{
				".gitignore-clion": &bintree{assetsTemplatesGitignoreGitignoreClion, map[string]*bintree{}},
				".gitignore-general": &bintree{assetsTemplatesGitignoreGitignoreGeneral, map[string]*bintree{}},
			}},
			"ide": &bintree{nil, map[string]*bintree{
				"clion": &bintree{nil, map[string]*bintree{
					"app": &bintree{nil, map[string]*bintree{
						"CMakeLists.txt.tpl": &bintree{assetsTemplatesIdeClionAppCmakelistsTxtTpl, map[string]*bintree{}},
						"CMakeListsPrivate.txt.tpl": &bintree{assetsTemplatesIdeClionAppCmakelistsprivateTxtTpl, map[string]*bintree{}},
					}},
					"lib": &bintree{nil, map[string]*bintree{
						"CMakeLists.txt.tpl": &bintree{assetsTemplatesIdeClionLibCmakelistsTxtTpl, map[string]*bintree{}},
						"CMakeListsPrivate.txt.tpl": &bintree{assetsTemplatesIdeClionLibCmakelistsprivateTxtTpl, map[string]*bintree{}},
					}},
				}},
			}},
			"sample-program": &bintree{nil, map[string]*bintree{
				"app": &bintree{nil, map[string]*bintree{
					"main.cpp": &bintree{assetsTemplatesSampleProgramAppMainCpp, map[string]*bintree{}},
				}},
				"lib": &bintree{nil, map[string]*bintree{
					"lib.cpp": &bintree{assetsTemplatesSampleProgramLibLibCpp, map[string]*bintree{}},
					"lib.h": &bintree{assetsTemplatesSampleProgramLibLibH, map[string]*bintree{}},
					"main.cpp": &bintree{assetsTemplatesSampleProgramLibMainCpp, map[string]*bintree{}},
				}},
			}},
		}},
	}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}

