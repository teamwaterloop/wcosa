// Code generated by go-bindata.
// sources:
// ../../assets/config/defaults.yml
// ../../assets/config/paths.json
// ../../assets/config/paths.yml
// ../../assets/templates/cmake/CMakeLists.txt.tpl
// ../../assets/templates/cmake/CMakeTarget.cmake-app.tpl
// ../../assets/templates/cmake/CMakeTarget.cmake-lib.tpl
// ../../assets/templates/cmake/CMakeTarget.cmake.tpl
// ../../assets/templates/config/libs-help.txt
// ../../assets/templates/config/libs.yml
// ../../assets/templates/config/project-app.yml
// ../../assets/templates/config/project-pkg.yml
// ../../assets/templates/config/wio-help.txt
// ../../assets/templates/gitignore/.gitignore-clion
// ../../assets/templates/gitignore/.gitignore-general
// ../../assets/templates/ide/clion/app/CMakeLists.txt.tpl
// ../../assets/templates/ide/clion/app/CMakeListsPrivate.txt.tpl
// ../../assets/templates/ide/clion/lib/CMakeLists.txt.tpl
// ../../assets/templates/ide/clion/lib/CMakeListsPrivate.txt.tpl
// ../../assets/templates/sample-program/app/main.cpp
// ../../assets/templates/sample-program/lib/lib.cpp
// ../../assets/templates/sample-program/lib/lib.h
// ../../assets/templates/sample-program/lib/main.cpp
// DO NOT EDIT!

package main

import (
    "bytes"
    "compress/gzip"
    "fmt"
    "io"
    "io/ioutil"
    "os"
    "path/filepath"
    "strings"
    "time"
)

func bindataRead(data, name string) ([]byte, error) {
    gz, err := gzip.NewReader(strings.NewReader(data))
    if err != nil {
        return nil, fmt.Errorf("Read %q: %v", name, err)
    }

    var buf bytes.Buffer
    _, err = io.Copy(&buf, gz)
    clErr := gz.Close()

    if err != nil {
        return nil, fmt.Errorf("Read %q: %v", name, err)
    }
    if clErr != nil {
        return nil, err
    }

    return buf.Bytes(), nil
}

type asset struct {
    bytes []byte
    info  os.FileInfo
}

type bindataFileInfo struct {
    name    string
    size    int64
    mode    os.FileMode
    modTime time.Time
}

func (fi bindataFileInfo) Name() string {
    return fi.name
}
func (fi bindataFileInfo) Size() int64 {
    return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
    return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
    return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
    return false
}
func (fi bindataFileInfo) Sys() interface{} {
    return nil
}

var _assetsConfigDefaultsYml = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x44\xd0\x41\x6e\x03\x21\x0c\x85\xe1\x3d\xa7\x78\x22\xfb\x28\xdd\xce\x29\xba\xe8\x05\x3c\x60\x32\xa8\xc6\x1e\x19\x48\xd5\xdb\x57\xd3\xa4\x53\x76\xe8\xff\xf4\x16\xbe\xe0\x63\xab\x1d\xc9\x74\x50\xd5\x0e\x12\xc1\xd8\x18\x99\x0b\x4d\x19\x78\x90\x4c\xee\x28\xe6\x48\xd6\x1a\x69\x96\xaa\x0c\xf2\xfb\x6c\xac\xa3\x87\x0b\xde\x69\x6c\x7f\x8e\x9c\xa1\x36\x50\x35\xc9\xcc\x9c\xb1\x72\xa2\xd9\xf9\xd8\xfc\xfe\xad\x8d\xd2\x76\x2c\xf4\x9d\x53\x2d\x35\x85\x50\x33\x2f\x88\x6a\xca\x31\x14\xa7\xc6\x5f\xe6\x9f\x0b\x62\xb2\x4e\x31\xec\x42\xa3\x98\xb7\x05\x91\x1e\x1e\x43\xa9\xf2\xcf\x77\xf3\x71\x7e\x1e\xec\xbd\x9a\x2e\x88\xb7\xeb\xed\xfa\x16\xc3\x6a\xe4\xf9\xcc\xeb\x20\xbf\xf3\xc1\x49\x24\xe2\xf5\x2e\x58\x67\x95\x8c\x67\x0c\xf3\x44\xaf\x03\xc4\x27\x9a\xbb\x18\x9d\xea\x27\x00\x00\xff\xff\xb3\x5e\xcb\x79\x35\x01\x00\x00"

func assetsConfigDefaultsYmlBytes() ([]byte, error) {
    return bindataRead(
        _assetsConfigDefaultsYml,
        "assets/config/defaults.yml",
    )
}

func assetsConfigDefaultsYml() (*asset, error) {
    bytes, err := assetsConfigDefaultsYmlBytes()
    if err != nil {
        return nil, err
    }

    info := bindataFileInfo{name: "assets/config/defaults.yml", size: 309, mode: os.FileMode(420), modTime: time.Unix(1521752364, 0)}
    a := &asset{bytes: bytes, info: info}
    return a, nil
}

var _assetsConfigPathsJson = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xcc\x94\x41\x6f\xb2\x40\x10\x86\xef\xfc\x8a\xcd\x9e\x65\xf7\xee\xf5\xbb\x7d\x69\xa3\x31\xbd\x35\x3d\xac\x30\xe2\xd4\x85\x9d\xec\x4e\xb5\x0d\xe1\xbf\x37\x90\x54\x5b\x6a\x0b\xa8\x84\x1e\x34\x64\xf2\xbe\xe4\xc9\xec\xf2\x94\x91\x10\x92\x0c\x6f\x83\x9c\x8b\xc7\x48\x08\x21\xca\xe6\x5f\x08\x89\xa9\x9c\x0b\x69\x88\xe2\x0c\x0a\x39\xfb\x18\x07\x9f\xd4\x73\x86\x9c\xac\x61\x08\x3a\x71\xc5\x06\x33\x4d\xde\x3d\x43\xc2\xb1\x21\x52\x6f\xb9\x3d\x15\x52\xa8\x5f\x2e\xcb\x72\xb9\xfa\x1f\xaf\x16\x8b\x87\xaa\xd2\x07\x74\x5f\x43\x6e\x0f\xde\x63\x0a\x72\x2e\x36\xc6\x06\x68\xe6\xd5\xec\x42\xa2\xdc\xec\x40\xff\xbb\x37\x3b\xb8\xc3\xc0\x41\xf1\x2b\x2b\xa6\x0e\x26\x75\x40\xd7\x2a\x9d\xe5\x63\xff\x72\x1d\x5e\x30\x39\x59\x88\xc9\xbb\xcc\x9b\x5c\x1b\x22\x9d\x1b\x2c\x54\x42\xf4\x3b\x61\xf0\xc9\x99\xe4\x4d\x57\x97\x21\x63\x56\x38\x0f\x5a\x1d\x1f\xeb\x0a\x78\xd3\xb5\xbe\x63\xfe\x62\xb4\xc4\xa2\x1b\x0c\xd7\x2a\x4d\x84\x86\x29\xe8\x26\xd3\x1c\xe7\xd0\xab\xd7\xe3\xd6\x8d\x09\xb9\xf4\xb8\x37\x0c\x43\x59\x3f\xd5\x2e\xf9\x50\x2c\xae\x87\x99\xc5\xe2\x7a\x5c\xb3\xf4\x20\x9a\xd2\x2c\xdd\x78\x2d\xb3\x58\x5c\xd7\x3f\xb5\xed\xd6\x4a\x2b\x76\xd3\xa5\xfd\x40\xd5\x4b\x77\xdf\x82\x63\x93\xf5\x33\x31\x43\xe0\xeb\x54\xdc\x0d\x37\x99\x8a\x6b\xb4\x3f\xaa\xe2\x3e\x68\x27\xcb\xd5\xe7\x39\x81\x8a\xaf\x81\x1c\x5d\xc5\x91\x10\x4f\x51\x15\xbd\x07\x00\x00\xff\xff\xae\x34\x78\x9d\xf9\x09\x00\x00"

func assetsConfigPathsJsonBytes() ([]byte, error) {
    return bindataRead(
        _assetsConfigPathsJson,
        "assets/config/paths.json",
    )
}

func assetsConfigPathsJson() (*asset, error) {
    bytes, err := assetsConfigPathsJsonBytes()
    if err != nil {
        return nil, err
    }

    info := bindataFileInfo{name: "assets/config/paths.json", size: 2553, mode: os.FileMode(420), modTime: time.Unix(1523490227, 0)}
    a := &asset{bytes: bytes, info: info}
    return a, nil
}

var _assetsConfigPathsYml = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x4a\x2c\x4a\x29\xcd\xcc\xcb\xd7\x2d\x4e\xc9\xd6\x2d\x48\x2c\xc9\xb0\x52\x50\x52\xe2\x4a\xce\x2f\x4e\x44\x15\x49\x2c\x2b\x42\xe2\x14\xe5\x22\x38\xb9\x89\xd9\xa9\x48\x3a\x51\xb9\x80\x00\x00\x00\xff\xff\x60\xc2\x95\x1d\x5e\x00\x00\x00"

func assetsConfigPathsYmlBytes() ([]byte, error) {
    return bindataRead(
        _assetsConfigPathsYml,
        "assets/config/paths.yml",
    )
}

func assetsConfigPathsYml() (*asset, error) {
    bytes, err := assetsConfigPathsYmlBytes()
    if err != nil {
        return nil, err
    }

    info := bindataFileInfo{name: "assets/config/paths.yml", size: 94, mode: os.FileMode(420), modTime: time.Unix(1521752364, 0)}
    a := &asset{bytes: bytes, info: info}
    return a, nil
}

var _assetsTemplatesCmakeCmakelistsTxtTpl = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x3c\x8e\xc1\x6a\xb3\x40\x14\x85\xf7\xf3\x14\x87\x24\x0b\x85\xdf\x87\x10\x11\x12\xf8\xa3\x25\x09\x21\x3b\x99\xea\x35\xde\x56\xc7\x74\x32\xb6\x8b\xcb\xbc\x7b\x19\x33\x74\x79\x39\xe7\xdc\xef\xdb\xa2\xa3\x9e\x0d\xc1\xcd\xf3\xd8\x0e\x9a\x0d\x1e\xda\x0d\xff\xf0\xb0\xf3\x07\xb5\x0e\x46\x4f\x04\x6d\x3a\x7c\x93\x7d\xf2\x6c\xd4\x93\x5c\x72\xa9\xeb\xff\xc5\x3e\x3f\x54\xcd\x5b\x7e\xd9\x63\x23\xf2\x37\xcf\xc2\xdc\xfb\x4d\xba\x16\xaf\xe5\x09\x22\xed\xa4\x3f\x29\x8b\x0f\xbc\x7f\x45\x55\x7e\x2c\x21\x12\x39\x59\xe0\x84\x48\x6d\xc1\xa6\x1d\x97\x8e\xe0\x06\x42\xcf\x23\xa1\x9f\xed\x7a\x38\x6d\xef\xe4\xf0\x43\xd0\x96\xf0\xbe\xf0\xd8\xb1\xb9\xab\xd8\x4f\x44\x5e\x85\xa8\x90\x2a\xb5\x82\x9b\x89\x0d\x4f\xcb\xd4\x58\xfa\x5a\xd8\x52\x17\xac\xce\x87\xba\xc2\x4e\xae\xe5\xc9\xa7\x2a\x3a\x24\x3b\x09\x52\x1e\x05\x8a\xdb\x0d\xf9\xf9\x98\xaa\xdf\x00\x00\x00\xff\xff\x08\x5a\xff\x6a\x20\x01\x00\x00"

func assetsTemplatesCmakeCmakelistsTxtTplBytes() ([]byte, error) {
    return bindataRead(
        _assetsTemplatesCmakeCmakelistsTxtTpl,
        "assets/templates/cmake/CMakeLists.txt.tpl",
    )
}

func assetsTemplatesCmakeCmakelistsTxtTpl() (*asset, error) {
    bytes, err := assetsTemplatesCmakeCmakelistsTxtTplBytes()
    if err != nil {
        return nil, err
    }

    info := bindataFileInfo{name: "assets/templates/cmake/CMakeLists.txt.tpl", size: 288, mode: os.FileMode(420), modTime: time.Unix(1522521964, 0)}
    a := &asset{bytes: bytes, info: info}
    return a, nil
}

var _assetsTemplatesCmakeCmaketargetCmakeAppTpl = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xc4\x92\xdf\x6e\x9b\x30\x14\xc6\xef\xfd\x14\x47\x2c\x91\xd2\x49\x81\x67\x20\x94\x2e\xd1\x92\x12\x41\xd6\xf5\xa2\x92\xe5\xd8\x27\x89\x57\xb0\x91\x6d\x54\x4d\x16\xef\x3e\x19\xf2\x67\xeb\xba\xeb\xdd\xa1\xef\xf8\xfc\xcc\xf7\x83\x4f\x20\x15\xaf\x3b\x81\xc0\x94\x80\x7d\x27\x6b\x01\xb5\xdc\x1b\x66\x24\x5a\x72\x9e\xcd\x22\xef\x1d\x33\x47\x74\x73\xc5\x1a\xec\xfb\xb5\xdc\xdb\x98\x37\xec\x15\xa3\x3b\x42\x3e\x62\xb8\x13\x42\xc3\xa4\x82\x83\x61\x0d\xbe\x69\xf3\xfa\x4f\xd8\xc3\xe5\xc4\x8d\x48\x02\x34\xd3\x96\xc1\x4e\xeb\x9a\x9f\x98\x54\xc4\xa2\x9b\x65\x9b\xf4\x6b\x4e\x77\x45\xb1\xce\x96\xe9\xea\x91\x3e\xac\xd6\x39\x44\x13\xff\x3d\x2b\xaa\x94\x6e\xd3\xdd\xb2\x4f\xdc\x65\x23\x19\x70\x49\xc0\x5c\x29\xb7\x2b\x5a\xa3\x7f\x20\x77\xb3\x89\x7f\x4c\x37\x79\x0f\x19\x64\xcf\xcf\x90\x56\x9b\xa1\x10\x13\x02\x2c\x32\xc3\x4f\xd0\x32\x77\xb2\x70\xd0\x06\x58\x5d\x0f\xbd\x3a\x8b\xe6\x26\xe9\xcf\xd2\x0d\x99\x86\xd1\x7c\x5c\x26\xde\x9f\x5b\x53\x21\x0d\x72\xa7\xc3\x46\x30\x10\xce\x04\x72\xdf\x47\x77\x7d\x4f\xbc\x3f\xa2\x42\xc3\x1c\x52\x66\x44\x27\x95\xa6\xe3\x05\x3f\x67\xde\x8f\x9a\x5e\xd4\x8b\xab\xca\xac\x02\xef\xad\xe1\x76\x0c\x96\xf7\x65\x08\x4e\xc2\x9c\x83\x45\x91\x96\xf7\xe0\xfd\x5e\x33\x23\xfa\x7e\x64\x8f\xba\x29\xd7\x4d\x2b\x6b\xa4\x02\x0f\x52\x49\x27\xb5\xb2\x57\x3a\x6c\xcb\xd5\x53\xba\xcb\x81\xd2\xf4\xa9\xa4\x41\x1a\xa5\xe0\x3d\xef\xac\xd3\xcd\xfc\xb7\x95\x11\x3a\x05\x54\x82\x90\x83\xac\x71\xf6\x65\x5d\x2c\x68\x99\x67\xdf\xca\x2a\x87\xaa\xcc\x86\xcf\x52\x41\x14\xc7\x49\x1c\x27\xd6\xf0\xe4\x73\xcc\xdb\x36\x7a\x97\xf0\xf7\xc1\xf8\x2f\x71\x83\xcc\xe1\x20\xfa\x20\x4d\xf3\xc6\x0c\x92\xe9\xf5\x71\x7e\x44\xf5\x91\xad\xcb\xfc\x6f\x5d\x13\x7f\x7d\xa5\x21\x5c\xaf\x16\x41\x59\x2d\xf7\x67\x65\xdb\xa2\xdc\x81\xf7\xad\x36\xee\x7f\x38\xfc\x15\x00\x00\xff\xff\x60\x08\xaa\x3f\x82\x03\x00\x00"

func assetsTemplatesCmakeCmaketargetCmakeAppTplBytes() ([]byte, error) {
    return bindataRead(
        _assetsTemplatesCmakeCmaketargetCmakeAppTpl,
        "assets/templates/cmake/CMakeTarget.cmake-app.tpl",
    )
}

func assetsTemplatesCmakeCmaketargetCmakeAppTpl() (*asset, error) {
    bytes, err := assetsTemplatesCmakeCmaketargetCmakeAppTplBytes()
    if err != nil {
        return nil, err
    }

    info := bindataFileInfo{name: "assets/templates/cmake/CMakeTarget.cmake-app.tpl", size: 898, mode: os.FileMode(420), modTime: time.Unix(1522521964, 0)}
    a := &asset{bytes: bytes, info: info}
    return a, nil
}

var _assetsTemplatesCmakeCmaketargetCmakeLibTpl = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xc4\x52\xd1\x8e\xda\x30\x10\x7c\xcf\x57\xac\x52\x4e\xe2\x2a\x05\xbe\x21\x97\x4b\x7b\xa8\x40\x90\x43\xe9\x3d\x9c\x64\x19\x7b\x01\xb7\x89\x4d\x6d\xa7\xa7\x6a\x95\x7f\xaf\x9c\x00\xbd\xaa\x7d\xef\x5b\x3c\xb3\x33\x9e\xcc\xda\x63\x98\x7e\x29\xaa\x3a\xe7\x9b\x7c\xfb\x04\x29\xd1\xab\xb4\x5e\x64\x67\x11\x4e\x7d\x9f\xde\x27\x71\x60\x57\x32\x20\x92\xad\xf8\x86\xd9\x0f\x74\x5e\x5b\xd3\xf7\x23\xb5\xce\x57\x25\x10\x9d\x9d\xfd\x8a\x32\x64\x46\xb4\x18\xa9\xe4\x1d\x14\xd6\x0b\xd8\x5a\xdb\xc8\x93\xd0\x66\x18\x2e\x56\xf9\xa7\x92\x6f\xab\x6a\x59\x3c\xe5\x8b\x35\xff\xb0\x58\x96\x90\x4e\xe8\x77\x80\x7e\x1e\xae\x8a\xf9\x70\xdf\x3c\xda\xdc\x5c\x66\x03\x96\xde\x27\xc9\xf0\xc1\x5b\x6d\x74\xdb\xb5\xdc\xe1\xf7\x4e\x3b\x54\x31\x69\xbd\xa8\xd6\x30\xa1\x5d\xc9\x62\x8e\x4b\xb0\xe9\x84\x62\xd2\x1e\x0a\x28\x9e\x9f\x21\xaf\x57\x43\x46\xa1\x14\x78\x14\x4e\x9e\x20\xfe\xb0\x87\x83\x75\x20\x9a\x06\xc2\x09\xa1\xf3\xe8\xa0\xd1\x7b\x27\x9c\x46\x0f\xc2\x28\xd8\x77\xba\x51\x91\x6c\x93\xbb\x48\x65\xa3\x38\x21\xd2\x46\x36\x9d\x42\xae\xb4\x43\x19\x6c\x54\x4c\x53\xa2\x38\x73\xad\xb2\xef\x13\xa2\x23\x1a\x74\x22\x20\x17\x4e\x75\xda\x58\x3e\x5e\xf0\x73\x4a\x34\x76\xf7\x62\x5e\x42\xcd\x8a\x1a\x88\xbc\x93\x7e\x04\x9e\x1e\x59\x04\x4e\xca\x5d\x80\x87\x2a\x67\x8f\x40\xb4\xb7\xc2\xa9\xbe\x1f\xbd\x83\x70\x47\x0c\x5c\xda\xf6\xac\x1b\xe4\x0a\x0f\xda\xe8\xa0\xad\xf1\x37\x77\xd8\xb0\xc5\x2e\xdf\x96\xc0\x79\xbe\x63\x3c\x96\xcb\x79\xdc\x6d\xe7\x83\x6d\xb3\x37\x92\xd1\xf4\x0e\xd0\xa8\x24\x39\xe8\x06\xa7\x1f\x97\xd5\x03\x67\x65\xf1\x99\xd5\x25\xd4\xac\x18\xd6\x57\x43\x3a\x9b\xcd\xbd\x93\xf3\xf7\x33\x79\x3e\xa7\x6f\x8f\xf2\x8f\x53\x3a\x34\x2e\x1d\x8a\x80\x43\xbf\x07\xed\xda\x57\xe1\x30\xb9\xbb\x7d\x66\x47\x34\xff\x2a\xe9\xca\xff\xdd\xd2\x84\x6e\x49\x06\x30\x67\x8f\xcb\xc5\x43\x2c\x6b\x78\xc6\xb7\xf5\x8d\x92\x0b\xd5\xe8\xfd\x05\xd8\x54\x6c\x1b\x9f\xaf\x75\xe1\x7f\x14\xfb\x2b\x00\x00\xff\xff\xfe\xd3\x72\xb3\x7e\x03\x00\x00"

func assetsTemplatesCmakeCmaketargetCmakeLibTplBytes() ([]byte, error) {
    return bindataRead(
        _assetsTemplatesCmakeCmaketargetCmakeLibTpl,
        "assets/templates/cmake/CMakeTarget.cmake-lib.tpl",
    )
}

func assetsTemplatesCmakeCmaketargetCmakeLibTpl() (*asset, error) {
    bytes, err := assetsTemplatesCmakeCmaketargetCmakeLibTplBytes()
    if err != nil {
        return nil, err
    }

    info := bindataFileInfo{name: "assets/templates/cmake/CMakeTarget.cmake-lib.tpl", size: 894, mode: os.FileMode(420), modTime: time.Unix(1521752364, 0)}
    a := &asset{bytes: bytes, info: info}
    return a, nil
}

var _assetsTemplatesCmakeCmaketargetCmakeTpl = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x52\x56\xc8\xcc\x4b\xce\x29\x4d\x49\x55\x48\xcc\x4b\x51\x48\x2a\xcd\xcc\x49\x51\xc8\xc9\x4c\x2a\x4a\x2c\xca\x4c\x2d\xe6\x82\xca\x69\x28\x55\x57\x97\x24\x16\xa5\xa7\x96\xe8\xe6\x25\xe6\xa6\xd6\xd6\xfa\x64\x26\x15\xeb\x25\xe7\x26\x66\xa7\x2a\x69\x72\x71\x61\x33\xa3\x24\x23\x55\x21\x37\x31\x33\x4f\x21\xad\x28\x31\x37\xb5\x3c\xbf\x28\x1b\xa7\x61\x6e\x30\x15\x70\x13\x01\x01\x00\x00\xff\xff\xa0\xdc\xce\x3c\x95\x00\x00\x00"

func assetsTemplatesCmakeCmaketargetCmakeTplBytes() ([]byte, error) {
    return bindataRead(
        _assetsTemplatesCmakeCmaketargetCmakeTpl,
        "assets/templates/cmake/CMakeTarget.cmake.tpl",
    )
}

func assetsTemplatesCmakeCmaketargetCmakeTpl() (*asset, error) {
    bytes, err := assetsTemplatesCmakeCmaketargetCmakeTplBytes()
    if err != nil {
        return nil, err
    }

    info := bindataFileInfo{name: "assets/templates/cmake/CMakeTarget.cmake.tpl", size: 149, mode: os.FileMode(420), modTime: time.Unix(1522521964, 0)}
    a := &asset{bytes: bytes, info: info}
    return a, nil
}

var _assetsTemplatesConfigLibsHelpTxt = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x64\x8f\x41\x6a\xc5\x30\x0c\x44\xf7\x3e\xc5\x90\xec\xff\x25\x7a\x85\x5e\x40\x91\x26\x89\x5a\x47\x0e\xb6\x43\x71\x4f\x5f\x3e\x94\xb4\xf0\x97\x42\xc3\x9b\x37\x33\xa6\xec\x4b\x95\xea\x6c\x13\xba\x6c\xd0\x12\x5d\x3c\x1a\x24\x67\x98\x57\x6a\xc7\x1d\xc1\x28\x17\x3c\x34\x5f\x46\x83\xc7\xf3\xae\x38\x6b\xf9\xa0\xf6\x07\xde\x77\x0e\x48\x25\x0e\x09\xd9\x68\x69\xc6\x32\xf0\xe5\x05\xa7\xe8\xa7\x6c\xac\x29\xa5\x19\x93\xf1\x64\x18\x43\x5f\x5b\xff\xbf\xb0\x96\x0a\x8a\xee\xbf\x02\x03\x7d\x97\x0e\x6f\xb7\xc2\x03\x6f\xe5\x38\x3d\x13\x6b\x96\xad\x41\x25\xb0\x30\xcd\x30\xae\x1e\xb4\x3f\xc2\xcd\x1d\xe8\x05\x7a\xb5\x5e\x0e\xff\x26\x96\xcb\xb3\x3d\x17\x28\x5b\xfb\x09\x00\x00\xff\xff\x81\xe5\x0f\xb8\x0e\x01\x00\x00"

func assetsTemplatesConfigLibsHelpTxtBytes() ([]byte, error) {
    return bindataRead(
        _assetsTemplatesConfigLibsHelpTxt,
        "assets/templates/config/libs-help.txt",
    )
}

func assetsTemplatesConfigLibsHelpTxt() (*asset, error) {
    bytes, err := assetsTemplatesConfigLibsHelpTxtBytes()
    if err != nil {
        return nil, err
    }

    info := bindataFileInfo{name: "assets/templates/config/libs-help.txt", size: 270, mode: os.FileMode(420), modTime: time.Unix(1522545706, 0)}
    a := &asset{bytes: bytes, info: info}
    return a, nil
}

var _assetsTemplatesConfigLibsYml = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xac\x8e\x31\x0e\x02\x41\x08\x45\xfb\x3d\x05\x57\x70\x4b\xae\x62\x8c\x99\xdd\xf9\x2a\x09\xcb\x12\x46\x3d\xbf\x19\x9c\xd2\xc2\x44\x9b\x0f\x9f\xe2\xf1\x54\x96\x28\x21\x68\x3c\x11\xa9\x2c\x87\x3e\x89\x1e\xa1\xdc\x23\xcb\x13\xd1\x64\x37\xee\x4b\x1e\xbc\xdc\x6f\x9c\x99\x75\xdd\x37\x17\xc5\xf9\xa2\xe5\xda\x98\x8e\xa7\xe9\xcd\x9a\xff\xc3\xaa\x70\x58\x85\xad\xc3\xb2\xc2\x87\xa5\x95\x0d\xdf\xfc\xf8\x28\x58\xe1\xf3\xaf\x98\x57\x00\x00\x00\xff\xff\xe5\x89\x22\x3d\x3e\x01\x00\x00"

func assetsTemplatesConfigLibsYmlBytes() ([]byte, error) {
    return bindataRead(
        _assetsTemplatesConfigLibsYml,
        "assets/templates/config/libs.yml",
    )
}

func assetsTemplatesConfigLibsYml() (*asset, error) {
    bytes, err := assetsTemplatesConfigLibsYmlBytes()
    if err != nil {
        return nil, err
    }

    info := bindataFileInfo{name: "assets/templates/config/libs.yml", size: 318, mode: os.FileMode(420), modTime: time.Unix(1522598676, 0)}
    a := &asset{bytes: bytes, info: info}
    return a, nil
}

var _assetsTemplatesConfigProjectAppYml = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x44\x8c\x41\x0a\x42\x31\x0c\x44\xf7\x39\xc5\x9c\x23\x57\x11\x91\xd1\xa6\x9f\x62\xf3\x5b\xd2\x8a\xd7\x97\x56\xd0\xcd\xbc\xc7\x5b\x0c\x7b\x57\x01\x4e\xba\xe9\x5e\x01\x4a\x32\x5d\x23\x40\xaf\x9c\xb9\x85\xeb\xcf\x04\xc8\x41\xb7\x77\x8b\xa7\xfe\x55\x64\x32\x0e\x9b\x63\xbd\x25\xcb\x7c\xd5\xa9\x70\x96\x53\xb0\xb1\x3a\x70\x6f\x8c\xa4\x5f\xec\xf0\x68\xde\x4b\xb5\x5b\xae\x3c\x86\xe2\x72\x95\x4f\x00\x00\x00\xff\xff\x1a\x7e\xea\xa8\x92\x00\x00\x00"

func assetsTemplatesConfigProjectAppYmlBytes() ([]byte, error) {
    return bindataRead(
        _assetsTemplatesConfigProjectAppYml,
        "assets/templates/config/project-app.yml",
    )
}

func assetsTemplatesConfigProjectAppYml() (*asset, error) {
    bytes, err := assetsTemplatesConfigProjectAppYmlBytes()
    if err != nil {
        return nil, err
    }

    info := bindataFileInfo{name: "assets/templates/config/project-app.yml", size: 146, mode: os.FileMode(420), modTime: time.Unix(1523490036, 0)}
    a := &asset{bytes: bytes, info: info}
    return a, nil
}

var _assetsTemplatesConfigProjectLibYml = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x74\x8f\xc1\x6e\x03\x21\x0c\x44\xef\xfe\x8a\xf9\x82\x28\xbd\xfa\xd6\x7b\xfe\x20\xaa\x2a\x67\xf1\x66\x51\x0d\xac\x0c\xb4\xbf\x5f\x81\xb6\x7b\xa9\x72\x99\x61\x46\xa3\x27\x6c\xf1\xc1\x04\x64\x49\xca\x53\x09\xf8\x56\xaf\xb1\x64\xc6\xf5\x72\xbd\xbc\x11\x20\xbd\x6d\xc5\x2b\xe3\xfe\x41\x80\xc5\x45\x73\xd5\x23\xed\x26\x6d\x2d\x9e\xf8\x7c\x11\xb0\xba\x24\xfd\x29\xfe\x75\x8c\x1e\x45\x3c\x30\xee\xef\xb7\xdb\x88\x4b\x49\x7b\x34\xfd\x5c\x4d\x9e\x7f\xd4\x18\x94\x87\x10\x35\xf1\xa7\xb6\x3a\xbe\x15\x74\x95\x6e\x8d\xd1\xb4\x36\xc2\xb4\xd1\x9f\xc4\x69\xb3\xf8\xcf\xa4\xa0\xbb\xe6\xa0\x79\x89\x5a\xcf\x23\xe7\xb8\xfb\x41\x71\xc9\xcb\xc6\xc8\xdd\xec\x05\xe5\x37\x00\x00\xff\xff\x17\x6c\xc1\xbb\x21\x01\x00\x00"

func assetsTemplatesConfigProjectLibYmlBytes() ([]byte, error) {
    return bindataRead(
        _assetsTemplatesConfigProjectLibYml,
        "assets/templates/config/project-pkg.yml",
    )
}

func assetsTemplatesConfigProjectLibYml() (*asset, error) {
    bytes, err := assetsTemplatesConfigProjectLibYmlBytes()
    if err != nil {
        return nil, err
    }

    info := bindataFileInfo{name: "assets/templates/config/project-pkg.yml", size: 289, mode: os.FileMode(420), modTime: time.Unix(1523446329, 0)}
    a := &asset{bytes: bytes, info: info}
    return a, nil
}

var _assetsTemplatesConfigWioHelpTxt = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xec\x55\xcd\x8e\xe4\x34\x10\xbe\xe7\x29\x4a\xc9\x05\xa4\x21\x0f\xc0\x6d\x11\x5a\x09\x71\xd8\xd5\x82\x16\x71\x42\x15\xbb\xd2\x29\xc6\x71\x59\x2e\x7b\x42\x78\x7a\x54\x4e\x32\xd3\x0d\x37\x38\x70\xd9\x63\xdb\x4e\xd5\xf7\xab\x1e\xa0\xc7\x94\x7a\x28\x78\x03\x27\xb1\x20\x47\x05\x27\x99\x80\xe3\x2c\x79\xc5\xc2\x12\x01\x27\xa9\x05\xca\x42\x90\xb2\xfc\x4e\xae\x8c\xf0\xf3\xc2\x0a\x1b\x87\x60\x47\xbe\x3a\x02\xfa\x83\x5c\x2d\x38\x05\x02\x8c\xfe\xb8\x9b\x08\x6a\x0a\x82\x9e\x7c\x37\x40\x11\xc0\x08\xb4\x4e\xe4\x3d\x79\xf0\xf4\xc2\x8e\x46\x78\x2f\x21\xc8\xc6\xf1\x06\x98\x09\x54\x56\x82\x67\xda\x21\x09\xc7\xa2\xe7\x6e\x57\xb5\xc8\xca\x7f\xda\xab\x5d\x6a\x06\x4c\x29\xb0\x6b\xf0\xbe\xed\x06\xf8\x06\xde\x67\x5c\x69\x93\xfc\xac\x6d\xcc\x4f\xdf\xff\xa8\x30\x4b\xfe\xfb\x3a\x35\xe8\xb4\x5f\x64\x41\xa9\x80\xcc\x10\x78\xca\x98\x99\xd4\x40\x56\x25\xd8\x16\x8a\xe0\xc4\x73\xbc\x8d\xdd\x00\x00\xbf\xb0\x80\xd6\x94\x24\x97\x53\xa1\x1e\xb3\xaf\x1c\xa5\x6f\x7c\x7b\x27\x8a\x3d\x7c\x85\x11\x24\x51\x04\x95\x9a\x1d\xc1\x87\x0f\x1f\xe1\xdd\xe7\x4f\xb6\x9d\x82\xa4\x95\x62\x81\x14\xb0\x98\xb8\x5f\x8f\x0d\xf9\xc7\xf3\x27\xb0\x36\x8d\xcb\x9e\xc8\x30\xb9\x85\x13\x94\x05\x4d\x79\xd6\x7b\xc6\xff\x10\xf7\xf4\xe3\x1a\x6c\x9e\xbc\xb0\x27\xed\x00\xe0\x91\x1b\x3a\x47\xaa\xc7\xec\x05\xb3\xdf\x4c\x2c\xc3\xef\x64\x4d\x1c\x28\xb7\x57\xe7\x0f\x83\xb3\x8e\x8f\xd4\xfb\x77\x9f\x3f\xf5\xaf\x9b\xc6\xae\xeb\x06\xe8\x0b\xe6\x1b\x15\x3d\x72\x84\x66\xe7\x21\x7e\x21\x2d\xcd\xd8\xe8\x1f\x14\xb0\xbb\x17\xcc\x2c\x55\xcd\x01\x7b\xa3\x27\x8a\x38\xf3\xad\xe6\x46\x53\x47\xf8\x55\x2a\x38\x8c\xe0\x32\x61\xa1\x6e\x80\xb5\x86\xc2\xc9\xa0\x1d\x2b\xcd\xa8\x4c\x96\x89\xf6\xce\xd3\xcc\x91\xc0\xf3\x3c\x53\xb6\x4d\x26\xa6\x9a\x9a\x93\x60\xf6\x7a\x4f\x15\xe6\x80\x37\x1d\xe1\xbb\xdd\x3e\xc3\x1a\x0a\x48\xbc\x06\x77\x83\xd9\x71\xac\xf5\x4f\xb0\x2d\xec\x16\x3b\x39\x16\x78\x98\x50\xc9\x83\xc4\x37\xf8\x6e\x11\xa5\x08\xd3\xde\xc0\x70\x6c\x5e\xb6\x01\xa6\x40\xca\x62\xc2\x9f\x7a\x05\x9e\xfa\xff\xda\x37\x3c\x8d\xdd\x8f\x8c\x18\x7b\x4b\x84\xc1\xe2\x08\x52\x16\xca\xdd\x00\x1b\xcb\x35\x44\x0f\x27\xaf\x6c\x40\xc4\xc2\x2f\x74\x39\xdb\x3c\x79\x8b\xca\xc9\xfc\x88\xde\x86\x7b\x13\xae\x58\x73\xb0\x81\x75\xa1\x5a\xa9\xe6\x80\x5b\x20\xd5\xb0\x5b\x96\xff\x55\x93\x4f\x16\x5f\x5a\xfc\x7f\xb6\xd8\x18\x5c\x5d\xd3\x44\x8e\xe7\xfd\xad\x6a\x58\xcb\x22\x59\x9f\x60\xbe\x73\x27\xfa\xb3\x52\x27\xea\xfb\xfc\xbe\x12\xb3\x30\x1a\x90\x85\xdc\x33\xf0\xdc\x24\x68\x3e\x5c\xd1\xb5\x8e\xc9\x9a\xb0\xb0\xfd\x6f\x6c\x5c\x96\xfb\xd8\x03\x17\x7b\x31\x91\x85\xe5\x4c\xf6\x81\xf5\x87\xb9\xb5\x6c\xc3\x58\x1e\x52\x64\xdb\x26\xba\x98\xfb\x63\xa2\xa3\xdc\x52\xd2\xfa\x7e\x64\xc2\x86\x3d\x5d\x02\x43\xb1\xea\x9e\xd7\x1c\xaf\xaf\x7f\x6b\x07\x0d\x6e\xc1\xdb\xd8\xfd\x15\x00\x00\xff\xff\x9f\xf1\x1b\xce\x2c\x07\x00\x00"

func assetsTemplatesConfigWioHelpTxtBytes() ([]byte, error) {
    return bindataRead(
        _assetsTemplatesConfigWioHelpTxt,
        "assets/templates/config/wio-help.txt",
    )
}

func assetsTemplatesConfigWioHelpTxt() (*asset, error) {
    bytes, err := assetsTemplatesConfigWioHelpTxtBytes()
    if err != nil {
        return nil, err
    }

    info := bindataFileInfo{name: "assets/templates/config/wio-help.txt", size: 1836, mode: os.FileMode(420), modTime: time.Unix(1522542060, 0)}
    a := &asset{bytes: bytes, info: info}
    return a, nil
}

var _assetsTemplatesGitignoreGitignoreClion = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xd2\x2b\xcf\xcc\xd7\xe7\x72\xf6\x4d\xcc\x4e\xf5\xc9\x2c\x2e\x29\x0e\x28\xca\x2c\x4b\x2c\x49\xd5\x2b\xa9\x28\xe1\xd2\xcb\x4c\x49\x4d\xd4\xe7\x4a\xce\x4d\xcc\x4e\xd5\x4d\x2a\xcd\xcc\x49\xd1\x4d\x49\x4d\x2a\x4d\xd7\xe7\x02\x04\x00\x00\xff\xff\x88\xc9\x2b\x5b\x36\x00\x00\x00"

func assetsTemplatesGitignoreGitignoreClionBytes() ([]byte, error) {
    return bindataRead(
        _assetsTemplatesGitignoreGitignoreClion,
        "assets/templates/gitignore/.gitignore-clion",
    )
}

func assetsTemplatesGitignoreGitignoreClion() (*asset, error) {
    bytes, err := assetsTemplatesGitignoreGitignoreClionBytes()
    if err != nil {
        return nil, err
    }

    info := bindataFileInfo{name: "assets/templates/gitignore/.gitignore-clion", size: 54, mode: os.FileMode(420), modTime: time.Unix(1522260315, 0)}
    a := &asset{bytes: bytes, info: info}
    return a, nil
}

var _assetsTemplatesGitignoreGitignoreGeneral = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xd2\x2b\xcf\xcc\xd7\xe7\x02\x04\x00\x00\xff\xff\xdd\x1c\xfa\x30\x06\x00\x00\x00"

func assetsTemplatesGitignoreGitignoreGeneralBytes() ([]byte, error) {
    return bindataRead(
        _assetsTemplatesGitignoreGitignoreGeneral,
        "assets/templates/gitignore/.gitignore-general",
    )
}

func assetsTemplatesGitignoreGitignoreGeneral() (*asset, error) {
    bytes, err := assetsTemplatesGitignoreGitignoreGeneralBytes()
    if err != nil {
        return nil, err
    }

    info := bindataFileInfo{name: "assets/templates/gitignore/.gitignore-general", size: 6, mode: os.FileMode(420), modTime: time.Unix(1522260325, 0)}
    a := &asset{bytes: bytes, info: info}
    return a, nil
}

var _assetsTemplatesIdeClionAppCmakelistsTxtTpl = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xb4\x92\xbb\x6e\xf3\x20\x18\x86\x77\xae\x02\x45\x1e\xec\x21\xff\x3d\xf0\x63\x5a\xb9\x01\x13\x61\x3b\x4d\x27\x44\xec\x4f\x15\x8d\x0f\xa9\x0d\x51\x24\xe4\x7b\xaf\x9c\x74\x4e\x86\x2a\x2b\xef\xe1\x41\xaf\xbe\x09\x5c\xbc\x63\x0a\x87\x50\x77\xe6\x08\xeb\x33\x8c\x93\x1d\xfa\x79\x4e\xd0\x22\xe5\x44\x30\x1c\xc2\x69\x1c\xbe\xa0\x76\xeb\xde\x74\xb0\x48\xe8\x6a\xd6\x9d\xed\x6d\xe7\x3b\x3d\xc2\xb7\xb7\x23\x34\x4b\x53\x91\xc9\x1c\x47\x61\xc7\xd4\xe2\xfb\x0d\xc6\x51\x58\x9a\x66\x4c\x31\xdd\xef\x31\x29\x44\x82\x90\xed\xeb\xd6\x37\x10\xaf\xa8\x30\x47\xe0\x76\x72\xd3\x76\xb4\x67\xe3\xe0\x9f\xbb\xb8\x55\x82\x90\x69\x1a\x5d\xfb\xc9\x0d\x9d\x76\x66\xfc\x04\x17\x23\x8c\x31\x7e\xa7\xb2\x20\xfa\x7f\x95\xf1\x14\x13\xce\xaf\x6f\x54\x0a\x41\xf2\x14\x47\xe1\xa6\x52\x91\xce\xf8\xe0\x6d\xdb\xdc\x22\x52\x6d\xb2\xfc\x55\xa7\x99\x62\xb4\x94\xea\x03\x47\x81\x0a\xb2\x61\x9a\x56\x4a\xb1\xbc\xd4\x85\xac\x14\x65\x8b\x61\x46\x8f\xd0\x94\x33\x92\xdf\x47\xd7\x2d\x98\xfe\x09\xe8\x6a\x9b\x92\x92\x69\xc2\xf9\x7d\xbe\x3f\x35\xc6\xc1\x53\x3e\xc0\x25\x79\xb0\xbb\x3f\xb5\x83\xf9\xc3\xf0\x70\x81\xda\x3b\x73\x68\x21\x8e\xc2\x56\xc9\x37\x46\x4b\x7d\x3b\xa0\x28\x14\x8a\xea\x97\x8c\xb3\x62\x4e\xd0\x4f\x00\x00\x00\xff\xff\xf6\xa5\x23\x29\xbe\x02\x00\x00"

func assetsTemplatesIdeClionAppCmakelistsTxtTplBytes() ([]byte, error) {
    return bindataRead(
        _assetsTemplatesIdeClionAppCmakelistsTxtTpl,
        "assets/templates/ide/clion/app/CMakeLists.txt.tpl",
    )
}

func assetsTemplatesIdeClionAppCmakelistsTxtTpl() (*asset, error) {
    bytes, err := assetsTemplatesIdeClionAppCmakelistsTxtTplBytes()
    if err != nil {
        return nil, err
    }

    info := bindataFileInfo{name: "assets/templates/ide/clion/app/CMakeLists.txt.tpl", size: 702, mode: os.FileMode(420), modTime: time.Unix(1521752364, 0)}
    a := &asset{bytes: bytes, info: info}
    return a, nil
}

var _assetsTemplatesIdeClionAppCmakelistsprivateTxtTpl = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x84\x52\xed\x6e\x9c\x30\x10\xfc\xef\xa7\x58\x51\x21\x01\x11\x97\x67\x20\x40\x22\x54\x2e\x54\x98\xa8\xf9\x67\x39\xb6\x39\xac\x52\x40\x36\xd7\xde\x09\xf9\xdd\x2b\xdf\xa9\x3d\x3e\xd4\xdc\x1f\xcb\xb3\xbb\xb3\x33\xbb\x5a\x2d\x46\xef\x7b\x5c\xe0\x88\xc4\xfb\x04\x86\xf3\xd8\xf4\x1d\x38\xd3\xf4\x9b\xf5\x9a\x86\x03\x1d\x1b\x63\x1e\x2f\xe0\xfa\xee\x86\xb3\xe3\x23\x84\xd3\xca\x8b\xf7\xd1\xd7\x94\xc4\x24\x2e\xf6\xdf\xb2\x3c\x2d\x81\xfe\x52\xe1\x81\x31\x7f\x9e\x7d\x7f\x5f\xe5\x1f\x1e\xd6\xf9\xe7\x3c\x7a\xc1\x24\xc9\x70\x55\x66\x4f\x6f\x55\x56\xbc\x5a\x03\xec\x27\xfd\x21\x42\x76\x3a\x85\x75\x4b\x0f\xda\x18\x67\xc1\xfb\x9c\x35\xe3\xd8\x01\x6f\x5a\xb8\x8a\x5e\x93\xa8\x4c\x60\x2e\xa0\x47\xda\x71\xaa\xb8\x31\x3e\x42\x2e\x70\x51\x87\x5a\x50\xc5\x1a\x34\x4d\x94\x73\xc2\x45\x2d\x3b\x39\xca\xbe\xd3\xde\x34\x1d\xb5\x50\xe1\x2d\x64\x8c\x6f\x0c\x72\x41\x74\x1c\xa1\x2f\x40\x39\x87\x2b\x19\xec\xf2\x34\xd4\xbd\x02\xbb\x38\x60\xbd\x12\xc8\xbd\xfc\x6f\xed\x65\xc7\xda\x23\x17\x84\x4b\x25\xd8\xd8\x2b\x29\xb4\xf7\x6f\xfb\x96\x61\x67\x30\xe6\x5e\xe5\x47\x7f\xb1\xef\xdc\xb7\x42\xdb\x16\xc6\x46\x80\x9d\x02\x5a\xf9\xa1\xa8\xed\x84\x5c\xfb\xff\x6b\xeb\xff\x6a\xb6\xe8\x7a\x13\x73\x29\x54\xcb\x56\x78\x2f\x79\xf1\x44\xca\x34\x7e\x2b\x71\x0a\xb8\x8c\xc9\x73\x96\xa7\x18\x01\x00\x38\x5a\xb1\xc7\x60\xc7\x86\xc1\x59\x60\xb6\x84\x73\x14\x6c\xeb\x83\x0d\x25\x58\xb3\x76\xcd\x12\xad\xe0\xb6\x5f\xb3\x09\x6c\x23\xc3\x60\x2f\xfe\x4f\x00\x00\x00\xff\xff\x38\x72\x86\x48\x29\x03\x00\x00"

func assetsTemplatesIdeClionAppCmakelistsprivateTxtTplBytes() ([]byte, error) {
    return bindataRead(
        _assetsTemplatesIdeClionAppCmakelistsprivateTxtTpl,
        "assets/templates/ide/clion/app/CMakeListsPrivate.txt.tpl",
    )
}

func assetsTemplatesIdeClionAppCmakelistsprivateTxtTpl() (*asset, error) {
    bytes, err := assetsTemplatesIdeClionAppCmakelistsprivateTxtTplBytes()
    if err != nil {
        return nil, err
    }

    info := bindataFileInfo{name: "assets/templates/ide/clion/app/CMakeListsPrivate.txt.tpl", size: 809, mode: os.FileMode(420), modTime: time.Unix(1521752364, 0)}
    a := &asset{bytes: bytes, info: info}
    return a, nil
}

var _assetsTemplatesIdeClionLibCmakelistsTxtTpl = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xb4\x92\xbb\x6e\xf3\x20\x18\x86\x77\xae\x02\x45\x1e\xec\x21\xff\x3d\xf0\x63\x5a\xb9\x01\x13\x61\x3b\x4d\x27\x44\xec\x4f\x15\x8d\x0f\xa9\x0d\x51\x24\xe4\x7b\xaf\x9c\x74\x4e\x86\x2a\x2b\xef\xe1\x41\xaf\xbe\x09\x5c\xbc\x63\x0a\x87\x50\x77\xe6\x08\xeb\x33\x8c\x93\x1d\xfa\x79\x4e\xd0\x22\xe5\x44\x30\x1c\xc2\x69\x1c\xbe\xa0\x76\xeb\xde\x74\xb0\x48\xe8\x6a\xd6\x9d\xed\x6d\xe7\x3b\x3d\xc2\xb7\xb7\x23\x34\x4b\x53\x91\xc9\x1c\x47\x61\xc7\xd4\xe2\xfb\x0d\xc6\x51\x58\x9a\x66\x4c\x31\xdd\xef\x31\x29\x44\x82\x90\xed\xeb\xd6\x37\x10\xaf\xa8\x30\x47\xe0\x76\x72\xd3\x76\xb4\x67\xe3\xe0\x9f\xbb\xb8\x55\x82\x90\x69\x1a\x5d\xfb\xc9\x0d\x9d\x76\x66\xfc\x04\x17\x23\x8c\x31\x7e\xa7\xb2\x20\xfa\x7f\x95\xf1\x14\x13\xce\xaf\x6f\x54\x0a\x41\xf2\x14\x47\xe1\xa6\x52\x91\xce\xf8\xe0\x6d\xdb\xdc\x22\x52\x6d\xb2\xfc\x55\xa7\x99\x62\xb4\x94\xea\x03\x47\x81\x0a\xb2\x61\x9a\x56\x4a\xb1\xbc\xd4\x85\xac\x14\x65\x8b\x61\x46\x8f\xd0\x94\x33\x92\xdf\x47\xd7\x2d\x98\xfe\x09\xe8\x6a\x9b\x92\x92\x69\xc2\xf9\x7d\xbe\x3f\x35\xc6\xc1\x53\x3e\xc0\x25\x79\xb0\xbb\x3f\xb5\x83\xf9\xc3\xf0\x70\x81\xda\x3b\x73\x68\x21\x8e\xc2\x56\xc9\x37\x46\x4b\x7d\x3b\xa0\x28\x14\x8a\xea\x97\x8c\xb3\x62\x4e\xd0\x4f\x00\x00\x00\xff\xff\xf6\xa5\x23\x29\xbe\x02\x00\x00"

func assetsTemplatesIdeClionLibCmakelistsTxtTplBytes() ([]byte, error) {
    return bindataRead(
        _assetsTemplatesIdeClionLibCmakelistsTxtTpl,
        "assets/templates/ide/clion/lib/CMakeLists.txt.tpl",
    )
}

func assetsTemplatesIdeClionLibCmakelistsTxtTpl() (*asset, error) {
    bytes, err := assetsTemplatesIdeClionLibCmakelistsTxtTplBytes()
    if err != nil {
        return nil, err
    }

    info := bindataFileInfo{name: "assets/templates/ide/clion/lib/CMakeLists.txt.tpl", size: 702, mode: os.FileMode(420), modTime: time.Unix(1521752364, 0)}
    a := &asset{bytes: bytes, info: info}
    return a, nil
}

var _assetsTemplatesIdeClionLibCmakelistsprivateTxtTpl = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x84\x52\xed\x6e\x9c\x30\x10\xfc\xef\xa7\x58\x51\x21\x01\x11\x97\x67\x20\x40\x22\x54\x2e\x54\x98\xa8\xf9\x67\x39\xb6\x39\xac\x52\x40\x36\xd7\xde\x09\xf9\xdd\x2b\xdf\xa9\x3d\x3e\xd4\xdc\x1f\xcb\xb3\xbb\xb3\x33\xbb\x5a\x2d\x46\xef\x7b\x5c\xe0\x88\xc4\xfb\x04\x86\xf3\xd8\xf4\x1d\x38\xd3\xf4\x9b\xf5\x9a\x86\x03\x1d\x1b\x63\x1e\x2f\xe0\xfa\xee\x86\xb3\xe3\x23\x84\xd3\xca\x8b\xf7\xd1\xd7\x94\xc4\x24\x2e\xf6\xdf\xb2\x3c\x2d\x81\xfe\x52\xe1\x81\x31\x7f\x9e\x7d\x7f\x5f\xe5\x1f\x1e\xd6\xf9\xe7\x3c\x7a\xc1\x24\xc9\x70\x55\x66\x4f\x6f\x55\x56\xbc\x5a\x03\xec\x27\xfd\x21\x42\x76\x3a\x85\x75\x4b\x0f\xda\x18\x67\xc1\xfb\x9c\x35\xe3\xd8\x01\x6f\x5a\xb8\x8a\x5e\x93\xa8\x4c\x60\x2e\xa0\x47\xda\x71\xaa\xb8\x31\x3e\x42\x2e\x70\x51\x87\x5a\x50\xc5\x1a\x34\x4d\x94\x73\xc2\x45\x2d\x3b\x39\xca\xbe\xd3\xde\x34\x1d\xb5\x50\xe1\x2d\x64\x8c\x6f\x0c\x72\x41\x74\x1c\xa1\x2f\x40\x39\x87\x2b\x19\xec\xf2\x34\xd4\xbd\x02\xbb\x38\x60\xbd\x12\xc8\xbd\xfc\x6f\xed\x65\xc7\xda\x23\x17\x84\x4b\x25\xd8\xd8\x2b\x29\xb4\xf7\x6f\xfb\x96\x61\x67\x30\xe6\x5e\xe5\x47\x7f\xb1\xef\xdc\xb7\x42\xdb\x16\xc6\x46\x80\x9d\x02\x5a\xf9\xa1\xa8\xed\x84\x5c\xfb\xff\x6b\xeb\xff\x6a\xb6\xe8\x7a\x13\x73\x29\x54\xcb\x56\x78\x2f\x79\xf1\x44\xca\x34\x7e\x2b\x71\x0a\xb8\x8c\xc9\x73\x96\xa7\x18\x01\x00\x38\x5a\xb1\xc7\x60\xc7\x86\xc1\x59\x60\xb6\x84\x73\x14\x6c\xeb\x83\x0d\x25\x58\xb3\x76\xcd\x12\xad\xe0\xb6\x5f\xb3\x09\x6c\x23\xc3\x60\x2f\xfe\x4f\x00\x00\x00\xff\xff\x38\x72\x86\x48\x29\x03\x00\x00"

func assetsTemplatesIdeClionLibCmakelistsprivateTxtTplBytes() ([]byte, error) {
    return bindataRead(
        _assetsTemplatesIdeClionLibCmakelistsprivateTxtTpl,
        "assets/templates/ide/clion/lib/CMakeListsPrivate.txt.tpl",
    )
}

func assetsTemplatesIdeClionLibCmakelistsprivateTxtTpl() (*asset, error) {
    bytes, err := assetsTemplatesIdeClionLibCmakelistsprivateTxtTplBytes()
    if err != nil {
        return nil, err
    }

    info := bindataFileInfo{name: "assets/templates/ide/clion/lib/CMakeListsPrivate.txt.tpl", size: 809, mode: os.FileMode(420), modTime: time.Unix(1521752364, 0)}
    a := &asset{bytes: bytes, info: info}
    return a, nil
}

var _assetsTemplatesSampleProgramAppMainCpp = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x52\xce\xcc\x4b\xce\x29\x4d\x49\x55\x50\x72\xce\x2f\x4e\xd4\x0f\x0a\x09\xd1\xcb\xc8\x50\xe2\x42\x13\xf6\x2f\x2d\x29\x28\x2d\x09\xc8\xcc\x03\x4b\x72\xc1\xb9\x0a\x39\xa9\x29\x01\x99\x79\x1a\x4e\xf9\x89\x45\x29\x56\x56\x3e\xae\x2e\x9a\xd6\x5c\x5c\x65\xf9\x99\x29\x0a\xc5\xa9\x25\xa5\x05\x1a\x9a\x0a\xd5\x5c\x0a\x0a\x0a\x0a\x41\x21\x21\x56\x56\x49\xa9\xe9\x99\x79\x1a\x9a\xd6\x5c\xb5\x50\x35\x39\xf9\xf9\x08\x25\x10\xa3\xf4\xf2\xc1\x2a\x40\x02\x29\xa9\x39\x89\x95\x1a\xa6\x06\x50\x2e\x4c\x3e\x2d\x0d\x5d\x81\x01\xd8\x48\x40\x00\x00\x00\xff\xff\xae\x1c\x30\xf2\xca\x00\x00\x00"

func assetsTemplatesSampleProgramAppMainCppBytes() ([]byte, error) {
    return bindataRead(
        _assetsTemplatesSampleProgramAppMainCpp,
        "assets/templates/sample-program/app/main.cpp",
    )
}

func assetsTemplatesSampleProgramAppMainCpp() (*asset, error) {
    bytes, err := assetsTemplatesSampleProgramAppMainCppBytes()
    if err != nil {
        return nil, err
    }

    info := bindataFileInfo{name: "assets/templates/sample-program/app/main.cpp", size: 202, mode: os.FileMode(420), modTime: time.Unix(1521752364, 0)}
    a := &asset{bytes: bytes, info: info}
    return a, nil
}

var _assetsTemplatesSampleProgramLibLibCpp = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x01\x00\x00\xff\xff\x00\x00\x00\x00\x00\x00\x00\x00"

func assetsTemplatesSampleProgramLibLibCppBytes() ([]byte, error) {
    return bindataRead(
        _assetsTemplatesSampleProgramLibLibCpp,
        "assets/templates/sample-program/lib/lib.cpp",
    )
}

func assetsTemplatesSampleProgramLibLibCpp() (*asset, error) {
    bytes, err := assetsTemplatesSampleProgramLibLibCppBytes()
    if err != nil {
        return nil, err
    }

    info := bindataFileInfo{name: "assets/templates/sample-program/lib/lib.cpp", size: 0, mode: os.FileMode(420), modTime: time.Unix(1522258405, 0)}
    a := &asset{bytes: bytes, info: info}
    return a, nil
}

var _assetsTemplatesSampleProgramLibLibH = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x01\x00\x00\xff\xff\x00\x00\x00\x00\x00\x00\x00\x00"

func assetsTemplatesSampleProgramLibLibHBytes() ([]byte, error) {
    return bindataRead(
        _assetsTemplatesSampleProgramLibLibH,
        "assets/templates/sample-program/lib/lib.h",
    )
}

func assetsTemplatesSampleProgramLibLibH() (*asset, error) {
    bytes, err := assetsTemplatesSampleProgramLibLibHBytes()
    if err != nil {
        return nil, err
    }

    info := bindataFileInfo{name: "assets/templates/sample-program/lib/lib.h", size: 0, mode: os.FileMode(420), modTime: time.Unix(1522258398, 0)}
    a := &asset{bytes: bytes, info: info}
    return a, nil
}

var _assetsTemplatesSampleProgramLibMainCpp = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x01\x00\x00\xff\xff\x00\x00\x00\x00\x00\x00\x00\x00"

func assetsTemplatesSampleProgramLibMainCppBytes() ([]byte, error) {
    return bindataRead(
        _assetsTemplatesSampleProgramLibMainCpp,
        "assets/templates/sample-program/lib/main.cpp",
    )
}

func assetsTemplatesSampleProgramLibMainCpp() (*asset, error) {
    bytes, err := assetsTemplatesSampleProgramLibMainCppBytes()
    if err != nil {
        return nil, err
    }

    info := bindataFileInfo{name: "assets/templates/sample-program/lib/main.cpp", size: 0, mode: os.FileMode(420), modTime: time.Unix(1522258388, 0)}
    a := &asset{bytes: bytes, info: info}
    return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
    cannonicalName := strings.Replace(name, "\\", "/", -1)
    if f, ok := _bindata[cannonicalName]; ok {
        a, err := f()
        if err != nil {
            return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
        }
        return a.bytes, nil
    }
    return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
    a, err := Asset(name)
    if err != nil {
        panic("asset: Asset(" + name + "): " + err.Error())
    }

    return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
    cannonicalName := strings.Replace(name, "\\", "/", -1)
    if f, ok := _bindata[cannonicalName]; ok {
        a, err := f()
        if err != nil {
            return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
        }
        return a.info, nil
    }
    return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
    names := make([]string, 0, len(_bindata))
    for name := range _bindata {
        names = append(names, name)
    }
    return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
    "assets/config/defaults.yml":                               assetsConfigDefaultsYml,
    "assets/config/paths.json":                                 assetsConfigPathsJson,
    "assets/config/paths.yml":                                  assetsConfigPathsYml,
    "assets/templates/cmake/CMakeLists.txt.tpl":                assetsTemplatesCmakeCmakelistsTxtTpl,
    "assets/templates/cmake/CMakeTarget.cmake-app.tpl":         assetsTemplatesCmakeCmaketargetCmakeAppTpl,
    "assets/templates/cmake/CMakeTarget.cmake-lib.tpl":         assetsTemplatesCmakeCmaketargetCmakeLibTpl,
    "assets/templates/cmake/CMakeTarget.cmake.tpl":             assetsTemplatesCmakeCmaketargetCmakeTpl,
    "assets/templates/config/libs-help.txt":                    assetsTemplatesConfigLibsHelpTxt,
    "assets/templates/config/libs.yml":                         assetsTemplatesConfigLibsYml,
    "assets/templates/config/project-app.yml":                  assetsTemplatesConfigProjectAppYml,
    "assets/templates/config/project-pkg.yml":                  assetsTemplatesConfigProjectLibYml,
    "assets/templates/config/wio-help.txt":                     assetsTemplatesConfigWioHelpTxt,
    "assets/templates/gitignore/.gitignore-clion":              assetsTemplatesGitignoreGitignoreClion,
    "assets/templates/gitignore/.gitignore-general":            assetsTemplatesGitignoreGitignoreGeneral,
    "assets/templates/ide/clion/app/CMakeLists.txt.tpl":        assetsTemplatesIdeClionAppCmakelistsTxtTpl,
    "assets/templates/ide/clion/app/CMakeListsPrivate.txt.tpl": assetsTemplatesIdeClionAppCmakelistsprivateTxtTpl,
    "assets/templates/ide/clion/lib/CMakeLists.txt.tpl":        assetsTemplatesIdeClionLibCmakelistsTxtTpl,
    "assets/templates/ide/clion/lib/CMakeListsPrivate.txt.tpl": assetsTemplatesIdeClionLibCmakelistsprivateTxtTpl,
    "assets/templates/sample-program/app/main.cpp":             assetsTemplatesSampleProgramAppMainCpp,
    "assets/templates/sample-program/lib/lib.cpp":              assetsTemplatesSampleProgramLibLibCpp,
    "assets/templates/sample-program/lib/lib.h":                assetsTemplatesSampleProgramLibLibH,
    "assets/templates/sample-program/lib/main.cpp":             assetsTemplatesSampleProgramLibMainCpp,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
    node := _bintree
    if len(name) != 0 {
        cannonicalName := strings.Replace(name, "\\", "/", -1)
        pathList := strings.Split(cannonicalName, "/")
        for _, p := range pathList {
            node = node.Children[p]
            if node == nil {
                return nil, fmt.Errorf("Asset %s not found", name)
            }
        }
    }
    if node.Func != nil {
        return nil, fmt.Errorf("Asset %s not found", name)
    }
    rv := make([]string, 0, len(node.Children))
    for childName := range node.Children {
        rv = append(rv, childName)
    }
    return rv, nil
}

type bintree struct {
    Func     func() (*asset, error)
    Children map[string]*bintree
}

var _bintree = &bintree{nil, map[string]*bintree{
    "assets": &bintree{nil, map[string]*bintree{
        "config": &bintree{nil, map[string]*bintree{
            "defaults.yml": &bintree{assetsConfigDefaultsYml, map[string]*bintree{}},
            "paths.json":   &bintree{assetsConfigPathsJson, map[string]*bintree{}},
            "paths.yml":    &bintree{assetsConfigPathsYml, map[string]*bintree{}},
        }},
        "templates": &bintree{nil, map[string]*bintree{
            "cmake": &bintree{nil, map[string]*bintree{
                "CMakeLists.txt.tpl":        &bintree{assetsTemplatesCmakeCmakelistsTxtTpl, map[string]*bintree{}},
                "CMakeTarget.cmake-app.tpl": &bintree{assetsTemplatesCmakeCmaketargetCmakeAppTpl, map[string]*bintree{}},
                "CMakeTarget.cmake-lib.tpl": &bintree{assetsTemplatesCmakeCmaketargetCmakeLibTpl, map[string]*bintree{}},
                "CMakeTarget.cmake.tpl":     &bintree{assetsTemplatesCmakeCmaketargetCmakeTpl, map[string]*bintree{}},
            }},
            "config": &bintree{nil, map[string]*bintree{
                "libs-help.txt":   &bintree{assetsTemplatesConfigLibsHelpTxt, map[string]*bintree{}},
                "libs.yml":        &bintree{assetsTemplatesConfigLibsYml, map[string]*bintree{}},
                "project-app.yml": &bintree{assetsTemplatesConfigProjectAppYml, map[string]*bintree{}},
                "project-pkg.yml": &bintree{assetsTemplatesConfigProjectLibYml, map[string]*bintree{}},
                "wio-help.txt":    &bintree{assetsTemplatesConfigWioHelpTxt, map[string]*bintree{}},
            }},
            "gitignore": &bintree{nil, map[string]*bintree{
                ".gitignore-clion":   &bintree{assetsTemplatesGitignoreGitignoreClion, map[string]*bintree{}},
                ".gitignore-general": &bintree{assetsTemplatesGitignoreGitignoreGeneral, map[string]*bintree{}},
            }},
            "ide": &bintree{nil, map[string]*bintree{
                "clion": &bintree{nil, map[string]*bintree{
                    "app": &bintree{nil, map[string]*bintree{
                        "CMakeLists.txt.tpl":        &bintree{assetsTemplatesIdeClionAppCmakelistsTxtTpl, map[string]*bintree{}},
                        "CMakeListsPrivate.txt.tpl": &bintree{assetsTemplatesIdeClionAppCmakelistsprivateTxtTpl, map[string]*bintree{}},
                    }},
                    "lib": &bintree{nil, map[string]*bintree{
                        "CMakeLists.txt.tpl":        &bintree{assetsTemplatesIdeClionLibCmakelistsTxtTpl, map[string]*bintree{}},
                        "CMakeListsPrivate.txt.tpl": &bintree{assetsTemplatesIdeClionLibCmakelistsprivateTxtTpl, map[string]*bintree{}},
                    }},
                }},
            }},
            "sample-program": &bintree{nil, map[string]*bintree{
                "app": &bintree{nil, map[string]*bintree{
                    "main.cpp": &bintree{assetsTemplatesSampleProgramAppMainCpp, map[string]*bintree{}},
                }},
                "lib": &bintree{nil, map[string]*bintree{
                    "lib.cpp":  &bintree{assetsTemplatesSampleProgramLibLibCpp, map[string]*bintree{}},
                    "lib.h":    &bintree{assetsTemplatesSampleProgramLibLibH, map[string]*bintree{}},
                    "main.cpp": &bintree{assetsTemplatesSampleProgramLibMainCpp, map[string]*bintree{}},
                }},
            }},
        }},
    }},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
    data, err := Asset(name)
    if err != nil {
        return err
    }
    info, err := AssetInfo(name)
    if err != nil {
        return err
    }
    err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
    if err != nil {
        return err
    }
    err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
    if err != nil {
        return err
    }
    err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
    if err != nil {
        return err
    }
    return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
    children, err := AssetDir(name)
    // File
    if err != nil {
        return RestoreAsset(dir, name)
    }
    // Dir
    for _, child := range children {
        err = RestoreAssets(dir, filepath.Join(name, child))
        if err != nil {
            return err
        }
    }
    return nil
}

func _filePath(dir, name string) string {
    cannonicalName := strings.Replace(name, "\\", "/", -1)
    return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}
