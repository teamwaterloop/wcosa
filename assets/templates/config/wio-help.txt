# "app" tag contains core information about the project. This will produce executable and will be uploaded
# to an embedded device. Following are some key points about customizing your application:
# - Frameworks are SDKs for embedded devices. They contain set of libraries to use when coding.
#   Wio supports core "arduino" and "cosa" (an open source OOP AVR development platform).
# - Platform is the type of chip that this application will be uploaded. This platform provides
#   libraries to access chip hardware and compilers to compile them. Wio supports "AVR" platform.


# "pkg" tag contains core information about the project. This will produce a package that can be used in other
# wio projects. Wio provides native support for packages created this way and they are included flawlessly.
# Following are some key points about customizing your package:
# - Frameworks are SDKs for embedded devices. They contain set of libraries to use when coding.
#   Wio supports core "arduino" and "cosa" (an open source OOP AVR development platform).
# - Platform is the type of chip that this application will be uploaded. This platform provides
#   libraries to access chip hardware and compilers to compile them. Wio supports "AVR" platform.
# - You can specify multiple authors, frameworks and boards. This information will be used to check if this
#   library is compatible with the project it is being used in.
# - If you want your package to be compiled with certain flags when used, provide those flags in compile_flags
#   tag.


# "targets" tag allows for testing and development for various settings and configurations. You can create
# multiple targets where you can define different types of boards and compile flags. By default one target
# is created, which is defined based on settings chosen by you in the creating process.


# "dependencies" tag allows user to include other packages into their project. There is a package manager built into
# wio and you can make use of that by specifying packages in this tag. Dependencies will be a list of packages and
# you can specify different options for each of them. Following are some key points about this"
# - url is where you specify the url of the package. So Far only "Git" supported urls are accepted.
# - ref is where you can specify a branch to checkout the library from
# - compile_flags are where you specify the compile flags for the dependency
# Example:
# dependencies:
#   myLib:
#       url: "URL1"
#       ref: "REF1"
#       compile_flags: ["HELLO", "NOO"]
#   myLib2:
#       url: "URL2"